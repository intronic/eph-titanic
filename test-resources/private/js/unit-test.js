if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.writeScripts_(path);
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExecModule_(url);
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function() {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = (doc.createElement("script"));
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in (obj)) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = (doc.createElement("SCRIPT"));
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0;i < s.length;i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in (obj)) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in (obj) ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1;i < arguments.length;i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0;i < minLen;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.8.51";
cljs.core._STAR_unchecked_if_STAR_ = false;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__20868__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__20868 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20869__i = 0, G__20869__a = new Array(arguments.length - 0);
        while (G__20869__i < G__20869__a.length) {
          G__20869__a[G__20869__i] = arguments[G__20869__i + 0];
          ++G__20869__i;
        }
        args = new cljs.core.IndexedSeq(G__20869__a, 0);
      }
      return G__20868__delegate.call(this, args);
    };
    G__20868.cljs$lang$maxFixedArity = 0;
    G__20868.cljs$lang$applyTo = function(arglist__20870) {
      var args = cljs.core.seq(arglist__20870);
      return G__20868__delegate(args);
    };
    G__20868.cljs$core$IFn$_invoke$arity$variadic = G__20868__delegate;
    return G__20868;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__20871__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__20871 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__20872__i = 0, G__20872__a = new Array(arguments.length - 0);
        while (G__20872__i < G__20872__a.length) {
          G__20872__a[G__20872__i] = arguments[G__20872__i + 0];
          ++G__20872__i;
        }
        args = new cljs.core.IndexedSeq(G__20872__a, 0);
      }
      return G__20871__delegate.call(this, args);
    };
    G__20871.cljs$lang$maxFixedArity = 0;
    G__20871.cljs$lang$applyTo = function(arglist__20873) {
      var args = cljs.core.seq(arglist__20873);
      return G__20871__delegate(args);
    };
    G__20871.cljs$core$IFn$_invoke$arity$variadic = G__20871__delegate;
    return G__20871;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__18724__auto__ = ty;
    if (cljs.core.truth_(and__18724__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__18724__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1E9 + t[1]) / 1E6;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var args20874 = [];
  var len__19806__auto___20880 = arguments.length;
  var i__19807__auto___20881 = 0;
  while (true) {
    if (i__19807__auto___20881 < len__19806__auto___20880) {
      args20874.push(arguments[i__19807__auto___20881]);
      var G__20882 = i__19807__auto___20881 + 1;
      i__19807__auto___20881 = G__20882;
      continue;
    } else {
    }
    break;
  }
  var G__20879 = args20874.length;
  switch(G__20879) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args20874.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__19651__auto___20884 = dimarray.length;
  var i_20885 = 0;
  while (true) {
    if (i_20885 < n__19651__auto___20884) {
      dimarray[i_20885] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims) : cljs.core.apply.call(null, cljs.core.make_array, null, dims);
      var G__20886 = i_20885 + 1;
      i_20885 = G__20886;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq20875) {
  var G__20876 = cljs.core.first(seq20875);
  var seq20875__$1 = cljs.core.next(seq20875);
  var G__20877 = cljs.core.first(seq20875__$1);
  var seq20875__$2 = cljs.core.next(seq20875__$1);
  return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(G__20876, G__20877, seq20875__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__19651__auto___20887 = len;
  var i_20888 = 0;
  while (true) {
    if (i_20888 < n__19651__auto___20887) {
      new_arr[i_20888] = arr[i_20888];
      var G__20889 = i_20888 + 1;
      i_20888 = G__20889;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__20890 = i + 1;
      i = G__20890;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget(var_args) {
  var args20891 = [];
  var len__19806__auto___20900 = arguments.length;
  var i__19807__auto___20901 = 0;
  while (true) {
    if (i__19807__auto___20901 < len__19806__auto___20900) {
      args20891.push(arguments[i__19807__auto___20901]);
      var G__20902 = i__19807__auto___20901 + 1;
      i__19807__auto___20901 = G__20902;
      continue;
    } else {
    }
    break;
  }
  var G__20896 = args20891.length;
  switch(G__20896) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args20891.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__20897 = cljs.core.aget;
  var G__20898 = array[i];
  var G__20899 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__20897, G__20898, G__20899) : cljs.core.apply.call(null, G__20897, G__20898, G__20899);
};
cljs.core.aget.cljs$lang$applyTo = function(seq20892) {
  var G__20893 = cljs.core.first(seq20892);
  var seq20892__$1 = cljs.core.next(seq20892);
  var G__20894 = cljs.core.first(seq20892__$1);
  var seq20892__$2 = cljs.core.next(seq20892__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__20893, G__20894, seq20892__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var args20904 = [];
  var len__19806__auto___20915 = arguments.length;
  var i__19807__auto___20916 = 0;
  while (true) {
    if (i__19807__auto___20916 < len__19806__auto___20915) {
      args20904.push(arguments[i__19807__auto___20916]);
      var G__20917 = i__19807__auto___20916 + 1;
      i__19807__auto___20916 = G__20917;
      continue;
    } else {
    }
    break;
  }
  var G__20910 = args20904.length;
  switch(G__20910) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args20904.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__20911 = cljs.core.aset;
  var G__20912 = array[idx];
  var G__20913 = idx2;
  var G__20914 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__20911, G__20912, G__20913, G__20914) : cljs.core.apply.call(null, G__20911, G__20912, G__20913, G__20914);
};
cljs.core.aset.cljs$lang$applyTo = function(seq20905) {
  var G__20906 = cljs.core.first(seq20905);
  var seq20905__$1 = cljs.core.next(seq20905);
  var G__20907 = cljs.core.first(seq20905__$1);
  var seq20905__$2 = cljs.core.next(seq20905__$1);
  var G__20908 = cljs.core.first(seq20905__$2);
  var seq20905__$3 = cljs.core.next(seq20905__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__20906, G__20907, G__20908, seq20905__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var args20919 = [];
  var len__19806__auto___20925 = arguments.length;
  var i__19807__auto___20926 = 0;
  while (true) {
    if (i__19807__auto___20926 < len__19806__auto___20925) {
      args20919.push(arguments[i__19807__auto___20926]);
      var G__20927 = i__19807__auto___20926 + 1;
      i__19807__auto___20926 = G__20927;
      continue;
    } else {
    }
    break;
  }
  var G__20921 = args20919.length;
  switch(G__20921) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20919.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__20922 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__20923 = [];
  var G__20924 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__20922, G__20923, G__20924) : cljs.core.reduce.call(null, G__20922, G__20923, G__20924);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___20932 = arguments.length;
  var i__19807__auto___20933 = 0;
  while (true) {
    if (i__19807__auto___20933 < len__19806__auto___20932) {
      args__19813__auto__.push(arguments[i__19807__auto___20933]);
      var G__20934 = i__19807__auto___20933 + 1;
      i__19807__auto___20933 = G__20934;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 2 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19814__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq20929) {
  var G__20930 = cljs.core.first(seq20929);
  var seq20929__$1 = cljs.core.next(seq20929);
  var G__20931 = cljs.core.first(seq20929__$1);
  var seq20929__$2 = cljs.core.next(seq20929__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__20930, G__20931, seq20929__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var args20935 = [];
  var len__19806__auto___20938 = arguments.length;
  var i__19807__auto___20939 = 0;
  while (true) {
    if (i__19807__auto___20939 < len__19806__auto___20938) {
      args20935.push(arguments[i__19807__auto___20939]);
      var G__20940 = i__19807__auto___20939 + 1;
      i__19807__auto___20939 = G__20940;
      continue;
    } else {
    }
    break;
  }
  var G__20937 = args20935.length;
  switch(G__20937) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20935.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__19400__auto__.call(null, this$);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__19400__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__19400__auto__.call(null, this$, a);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__19400__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__19400__auto__.call(null, this$, a, b);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__19400__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$4 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__19400__auto__.call(null, this$, a, b, c);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__19400__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$5 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__19400__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__19400__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$6 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__19400__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__19400__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$7 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__19400__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$8 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$9 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$10 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$11 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$12 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$13 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$14 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$15 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$16 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$17 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$18 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$19 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$20 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$21 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._invoke[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$22 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__19400__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__19400__auto____$1 = cljs.core._invoke["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__19400__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__19399__auto__ = value == null ? null : value;
    var m__19400__auto__ = cljs.core._clone[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__19400__auto__.call(null, value);
    } else {
      var m__19400__auto____$1 = cljs.core._clone["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__19400__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._count[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._count["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._empty[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._empty["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._conj[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__19400__auto__.call(null, coll, o);
    } else {
      var m__19400__auto____$1 = cljs.core._conj["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__19400__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var args20942 = [];
  var len__19806__auto___20945 = arguments.length;
  var i__19807__auto___20946 = 0;
  while (true) {
    if (i__19807__auto___20946 < len__19806__auto___20945) {
      args20942.push(arguments[i__19807__auto___20946]);
      var G__20947 = i__19807__auto___20946 + 1;
      i__19807__auto___20946 = G__20947;
      continue;
    } else {
    }
    break;
  }
  var G__20944 = args20942.length;
  switch(G__20944) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20942.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._nth[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__19400__auto__.call(null, coll, n);
    } else {
      var m__19400__auto____$1 = cljs.core._nth["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__19400__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._nth[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__19400__auto__.call(null, coll, n, not_found);
    } else {
      var m__19400__auto____$1 = cljs.core._nth["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__19400__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._first[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._first["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._rest[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._rest["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._next[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._next["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var args20949 = [];
  var len__19806__auto___20952 = arguments.length;
  var i__19807__auto___20953 = 0;
  while (true) {
    if (i__19807__auto___20953 < len__19806__auto___20952) {
      args20949.push(arguments[i__19807__auto___20953]);
      var G__20954 = i__19807__auto___20953 + 1;
      i__19807__auto___20953 = G__20954;
      continue;
    } else {
    }
    break;
  }
  var G__20951 = args20949.length;
  switch(G__20951) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20949.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._lookup[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__19400__auto__.call(null, o, k);
    } else {
      var m__19400__auto____$1 = cljs.core._lookup["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__19400__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._lookup[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__19400__auto__.call(null, o, k, not_found);
    } else {
      var m__19400__auto____$1 = cljs.core._lookup["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__19400__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__19400__auto__.call(null, coll, k);
    } else {
      var m__19400__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__19400__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._assoc[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__19400__auto__.call(null, coll, k, v);
    } else {
      var m__19400__auto____$1 = cljs.core._assoc["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__19400__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._dissoc[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__19400__auto__.call(null, coll, k);
    } else {
      var m__19400__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__19400__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._key[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._key["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._val[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._val["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._disjoin[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__19400__auto__.call(null, coll, v);
    } else {
      var m__19400__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__19400__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._peek[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._peek["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._pop[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._pop["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._assoc_n[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__19400__auto__.call(null, coll, n, val);
    } else {
      var m__19400__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__19400__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._deref[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto__.call(null, o);
    } else {
      var m__19400__auto____$1 = cljs.core._deref["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__19400__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__19400__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__19400__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._meta[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto__.call(null, o);
    } else {
      var m__19400__auto____$1 = cljs.core._meta["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._with_meta[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__19400__auto__.call(null, o, meta);
    } else {
      var m__19400__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__19400__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var args20956 = [];
  var len__19806__auto___20959 = arguments.length;
  var i__19807__auto___20960 = 0;
  while (true) {
    if (i__19807__auto___20960 < len__19806__auto___20959) {
      args20956.push(arguments[i__19807__auto___20960]);
      var G__20961 = i__19807__auto___20960 + 1;
      i__19807__auto___20960 = G__20961;
      continue;
    } else {
    }
    break;
  }
  var G__20958 = args20956.length;
  switch(G__20958) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20956.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._reduce[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__19400__auto__.call(null, coll, f);
    } else {
      var m__19400__auto____$1 = cljs.core._reduce["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__19400__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._reduce[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__19400__auto__.call(null, coll, f, start);
    } else {
      var m__19400__auto____$1 = cljs.core._reduce["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__19400__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._kv_reduce[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__19400__auto__.call(null, coll, f, init);
    } else {
      var m__19400__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__19400__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._equiv[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__19400__auto__.call(null, o, other);
    } else {
      var m__19400__auto____$1 = cljs.core._equiv["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__19400__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._hash[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto__.call(null, o);
    } else {
      var m__19400__auto____$1 = cljs.core._hash["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._seq[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto__.call(null, o);
    } else {
      var m__19400__auto____$1 = cljs.core._seq["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__19400__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._rseq[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._rseq["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._sorted_seq[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__19400__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__19400__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__19400__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__19400__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__19400__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__19400__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._entry_key[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__19400__auto__.call(null, coll, entry);
    } else {
      var m__19400__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__19400__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._comparator[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._comparator["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__19399__auto__ = writer == null ? null : writer;
    var m__19400__auto__ = cljs.core._write[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__19400__auto__.call(null, writer, s);
    } else {
      var m__19400__auto____$1 = cljs.core._write["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__19400__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__19399__auto__ = writer == null ? null : writer;
    var m__19400__auto__ = cljs.core._flush[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__19400__auto__.call(null, writer);
    } else {
      var m__19400__auto____$1 = cljs.core._flush["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__19400__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._pr_writer[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__19400__auto__.call(null, o, writer, opts);
    } else {
      var m__19400__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__19400__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto__.call(null, x);
    } else {
      var m__19400__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._notify_watches[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__19400__auto__.call(null, this$, oldval, newval);
    } else {
      var m__19400__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__19400__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._add_watch[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__19400__auto__.call(null, this$, key, f);
    } else {
      var m__19400__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__19400__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core._remove_watch[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__19400__auto__.call(null, this$, key);
    } else {
      var m__19400__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__19400__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._as_transient[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__19400__auto__.call(null, tcoll, val);
    } else {
      var m__19400__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__19400__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__19400__auto__.call(null, tcoll);
    } else {
      var m__19400__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__19400__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__19400__auto__.call(null, tcoll, key, val);
    } else {
      var m__19400__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__19400__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__19400__auto__.call(null, tcoll, key);
    } else {
      var m__19400__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__19400__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__19400__auto__.call(null, tcoll, n, val);
    } else {
      var m__19400__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__19400__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__19400__auto__.call(null, tcoll);
    } else {
      var m__19400__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__19400__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__19399__auto__ = tcoll == null ? null : tcoll;
    var m__19400__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__19400__auto__.call(null, tcoll, v);
    } else {
      var m__19400__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__19400__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._compare[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__19400__auto__.call(null, x, y);
    } else {
      var m__19400__auto____$1 = cljs.core._compare["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__19400__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._drop_first[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._chunked_first[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._chunked_rest[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._chunked_next[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._name[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto__.call(null, x);
    } else {
      var m__19400__auto____$1 = cljs.core._name["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._namespace[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto__.call(null, x);
    } else {
      var m__19400__auto____$1 = cljs.core._namespace["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__19400__auto__.call(null, o, new_value);
    } else {
      var m__19400__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__19400__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var args20963 = [];
  var len__19806__auto___20966 = arguments.length;
  var i__19807__auto___20967 = 0;
  while (true) {
    if (i__19807__auto___20967 < len__19806__auto___20966) {
      args20963.push(arguments[i__19807__auto___20967]);
      var G__20968 = i__19807__auto___20967 + 1;
      i__19807__auto___20967 = G__20968;
      continue;
    } else {
    }
    break;
  }
  var G__20965 = args20963.length;
  switch(G__20965) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20963.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__19400__auto__.call(null, o, f);
    } else {
      var m__19400__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__19400__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__19400__auto__.call(null, o, f, a);
    } else {
      var m__19400__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__19400__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$4 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__19400__auto__.call(null, o, f, a, b);
    } else {
      var m__19400__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__19400__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$5 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__19400__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__19400__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__19400__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__19399__auto__ = o == null ? null : o;
    var m__19400__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__19400__auto__.call(null, o, new_value);
    } else {
      var m__19400__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__19400__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__19399__auto__ = coll == null ? null : coll;
    var m__19400__auto__ = cljs.core._iterator[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto__.call(null, coll);
    } else {
      var m__19400__auto____$1 = cljs.core._iterator["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__19400__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__20970 = i + 2;
        var G__20971 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__20970;
        h1 = G__20971;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__20974 = i + 1;
          var G__20975 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__20974;
          hash = G__20975;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__20983 = o;
        switch(G__20983) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = cljs.core.not(a.ns);
      if (and__18724__auto__) {
        return b.ns;
      } else {
        return and__18724__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__20991 = a.ns;
            var G__20992 = b.ns;
            return goog.array.defaultCompare(G__20991, G__20992);
          }();
          if (0 === nsc) {
            var G__20993 = a.name;
            var G__20994 = b.name;
            return goog.array.defaultCompare(G__20993, G__20994);
          } else {
            return nsc;
          }
        }
      } else {
        var G__20995 = a.name;
        var G__20996 = b.name;
        return goog.array.defaultCompare(G__20995, G__20996);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__20998 = null;
  var G__20998__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__20998__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__20998 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__20998__2.call(this, self__, coll);
      case 3:
        return G__20998__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__20998.cljs$core$IFn$_invoke$arity$2 = G__20998__2;
  G__20998.cljs$core$IFn$_invoke$arity$3 = G__20998__3;
  return G__20998;
}();
cljs.core.Symbol.prototype.apply = function(self__, args20997) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args20997)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__19171__auto__ = self__._hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var args20999 = [];
  var len__19806__auto___21002 = arguments.length;
  var i__19807__auto___21003 = 0;
  while (true) {
    if (i__19807__auto___21003 < len__19806__auto___21002) {
      args20999.push(arguments[i__19807__auto___21003]);
      var G__21004 = i__19807__auto___21003 + 1;
      i__19807__auto___21003 = G__21004;
      continue;
    } else {
    }
    break;
  }
  var G__21001 = args20999.length;
  switch(G__21001) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20999.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx < 1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__21007 = this$__$1.sym;
    var G__21008 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__21007, G__21008) : cljs.core._EQ_.call(null, G__21007, G__21008);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__21053 = null;
  var G__21053__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__21053__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__21053__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__21053__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__21053__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__21053__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__21053__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__21053__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__21053__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__21053__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__21053__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__21053__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__21053__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__21053__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__21053__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__21053__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__21053__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__21053__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__21053__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__21053__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__21053__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__21053__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__21009 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__21010 = a;
    var G__21011 = b;
    var G__21012 = c;
    var G__21013 = d;
    var G__21014 = e;
    var G__21015 = f;
    var G__21016 = g;
    var G__21017 = h;
    var G__21018 = i;
    var G__21019 = j;
    var G__21020 = k;
    var G__21021 = l;
    var G__21022 = m;
    var G__21023 = n;
    var G__21024 = o;
    var G__21025 = p;
    var G__21026 = q;
    var G__21027 = r;
    var G__21028 = s;
    var G__21029 = t;
    var G__21030 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21009, G__21010, G__21011, G__21012, G__21013, G__21014, G__21015, G__21016, G__21017, G__21018, G__21019, G__21020, G__21021, G__21022, G__21023, G__21024, G__21025, G__21026, G__21027, G__21028, G__21029, G__21030) : cljs.core.apply.call(null, G__21009, G__21010, G__21011, G__21012, G__21013, G__21014, G__21015, G__21016, G__21017, G__21018, G__21019, G__21020, G__21021, G__21022, G__21023, 
    G__21024, G__21025, G__21026, G__21027, G__21028, G__21029, G__21030);
  };
  G__21053 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21053__1.call(this, self__);
      case 2:
        return G__21053__2.call(this, self__, a);
      case 3:
        return G__21053__3.call(this, self__, a, b);
      case 4:
        return G__21053__4.call(this, self__, a, b, c);
      case 5:
        return G__21053__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21053__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21053__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21053__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21053__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21053__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21053__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21053__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21053__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21053__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21053__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21053__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21053__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21053__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21053__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21053__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21053__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21053__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21053.cljs$core$IFn$_invoke$arity$1 = G__21053__1;
  G__21053.cljs$core$IFn$_invoke$arity$2 = G__21053__2;
  G__21053.cljs$core$IFn$_invoke$arity$3 = G__21053__3;
  G__21053.cljs$core$IFn$_invoke$arity$4 = G__21053__4;
  G__21053.cljs$core$IFn$_invoke$arity$5 = G__21053__5;
  G__21053.cljs$core$IFn$_invoke$arity$6 = G__21053__6;
  G__21053.cljs$core$IFn$_invoke$arity$7 = G__21053__7;
  G__21053.cljs$core$IFn$_invoke$arity$8 = G__21053__8;
  G__21053.cljs$core$IFn$_invoke$arity$9 = G__21053__9;
  G__21053.cljs$core$IFn$_invoke$arity$10 = G__21053__10;
  G__21053.cljs$core$IFn$_invoke$arity$11 = G__21053__11;
  G__21053.cljs$core$IFn$_invoke$arity$12 = G__21053__12;
  G__21053.cljs$core$IFn$_invoke$arity$13 = G__21053__13;
  G__21053.cljs$core$IFn$_invoke$arity$14 = G__21053__14;
  G__21053.cljs$core$IFn$_invoke$arity$15 = G__21053__15;
  G__21053.cljs$core$IFn$_invoke$arity$16 = G__21053__16;
  G__21053.cljs$core$IFn$_invoke$arity$17 = G__21053__17;
  G__21053.cljs$core$IFn$_invoke$arity$18 = G__21053__18;
  G__21053.cljs$core$IFn$_invoke$arity$19 = G__21053__19;
  G__21053.cljs$core$IFn$_invoke$arity$20 = G__21053__20;
  G__21053.cljs$core$IFn$_invoke$arity$21 = G__21053__21;
  G__21053.cljs$core$IFn$_invoke$arity$22 = G__21053__22;
  return G__21053;
}();
cljs.core.Var.prototype.apply = function(self__, args21006) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21006)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__21031 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__21032 = a;
  var G__21033 = b;
  var G__21034 = c;
  var G__21035 = d;
  var G__21036 = e;
  var G__21037 = f;
  var G__21038 = g;
  var G__21039 = h;
  var G__21040 = i;
  var G__21041 = j;
  var G__21042 = k;
  var G__21043 = l;
  var G__21044 = m;
  var G__21045 = n;
  var G__21046 = o;
  var G__21047 = p;
  var G__21048 = q;
  var G__21049 = r;
  var G__21050 = s;
  var G__21051 = t;
  var G__21052 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__21031, G__21032, G__21033, G__21034, G__21035, G__21036, G__21037, G__21038, G__21039, G__21040, G__21041, G__21042, G__21043, G__21044, G__21045, G__21046, G__21047, G__21048, G__21049, G__21050, G__21051, G__21052) : cljs.core.apply.call(null, G__21031, G__21032, G__21033, G__21034, G__21035, G__21036, G__21037, G__21038, G__21039, G__21040, G__21041, G__21042, G__21043, G__21044, G__21045, 
  G__21046, G__21047, G__21048, G__21049, G__21050, G__21051, G__21052);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var args21066 = [];
  var len__19806__auto___21072 = arguments.length;
  var i__19807__auto___21073 = 0;
  while (true) {
    if (i__19807__auto___21073 < len__19806__auto___21072) {
      args21066.push(arguments[i__19807__auto___21073]);
      var G__21074 = i__19807__auto___21073 + 1;
      i__19807__auto___21073 = G__21074;
      continue;
    } else {
    }
    break;
  }
  var G__21071 = args21066.length;
  switch(G__21071) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21066.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__21076 = y;
        var G__21077 = cljs.core.first(more);
        var G__21078 = cljs.core.next(more);
        x = G__21076;
        y = G__21077;
        more = G__21078;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq21067) {
  var G__21068 = cljs.core.first(seq21067);
  var seq21067__$1 = cljs.core.next(seq21067);
  var G__21069 = cljs.core.first(seq21067__$1);
  var seq21067__$2 = cljs.core.next(seq21067__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21068, G__21069, seq21067__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21079 = n + 1;
      var G__21080 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__21081 = cljs.core.next(coll__$1);
      n = G__21079;
      hash_code = G__21080;
      coll__$1 = G__21081;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__21082 = n + 1;
      var G__21083 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__21084 = cljs.core.next(coll__$1);
      n = G__21082;
      hash_code = G__21083;
      coll__$1 = G__21084;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__21085 = this$__$1.valueOf();
    var G__21086 = other.valueOf();
    return goog.array.defaultCompare(G__21085, G__21086);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var args21087 = [];
  var len__19806__auto___21096 = arguments.length;
  var i__19807__auto___21097 = 0;
  while (true) {
    if (i__19807__auto___21097 < len__19806__auto___21096) {
      args21087.push(arguments[i__19807__auto___21097]);
      var G__21098 = i__19807__auto___21097 + 1;
      i__19807__auto___21097 = G__21098;
      continue;
    } else {
    }
    break;
  }
  var G__21089 = args21087.length;
  switch(G__21089) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21087.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__21090 = val;
          var G__21091 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21090, G__21091) : f.call(null, G__21090, G__21091);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__21100 = nval;
          var G__21101 = n + 1;
          val = G__21100;
          n = G__21101;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21092 = val__$1;
        var G__21093 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21092, G__21093) : f.call(null, G__21092, G__21093);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21102 = nval;
        var G__21103 = n + 1;
        val__$1 = G__21102;
        n = G__21103;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21094 = val__$1;
        var G__21095 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21094, G__21095) : f.call(null, G__21094, G__21095);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21104 = nval;
        var G__21105 = n + 1;
        val__$1 = G__21104;
        n = G__21105;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var args21106 = [];
  var len__19806__auto___21115 = arguments.length;
  var i__19807__auto___21116 = 0;
  while (true) {
    if (i__19807__auto___21116 < len__19806__auto___21115) {
      args21106.push(arguments[i__19807__auto___21116]);
      var G__21117 = i__19807__auto___21116 + 1;
      i__19807__auto___21116 = G__21117;
      continue;
    } else {
    }
    break;
  }
  var G__21108 = args21106.length;
  switch(G__21108) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21106.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__21109 = val;
          var G__21110 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21109, G__21110) : f.call(null, G__21109, G__21110);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__21119 = nval;
          var G__21120 = n + 1;
          val = G__21119;
          n = G__21120;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21111 = val__$1;
        var G__21112 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21111, G__21112) : f.call(null, G__21111, G__21112);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21121 = nval;
        var G__21122 = n + 1;
        val__$1 = G__21121;
        n = G__21122;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__21113 = val__$1;
        var G__21114 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21113, G__21114) : f.call(null, G__21113, G__21114);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21123 = nval;
        var G__21124 = n + 1;
        val__$1 = G__21123;
        n = G__21124;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var args21129 = [];
  var len__19806__auto___21132 = arguments.length;
  var i__19807__auto___21133 = 0;
  while (true) {
    if (i__19807__auto___21133 < len__19806__auto___21132) {
      args21129.push(arguments[i__19807__auto___21133]);
      var G__21134 = i__19807__auto___21133 + 1;
      i__19807__auto___21133 = G__21134;
      continue;
    } else {
    }
    break;
  }
  var G__21131 = args21129.length;
  switch(G__21131) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21129.length)].join(""));;
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__19067__auto__ = 0;
      var y__19068__auto__ = start + len;
      return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__21136 = idx + 1;
          idx = G__21136;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var args21137 = [];
  var len__19806__auto___21140 = arguments.length;
  var i__19807__auto___21141 = 0;
  while (true) {
    if (i__19807__auto___21141 < len__19806__auto___21140) {
      args21137.push(arguments[i__19807__auto___21141]);
      var G__21142 = i__19807__auto___21141 + 1;
      i__19807__auto___21141 = G__21142;
      continue;
    } else {
    }
    break;
  }
  var G__21139 = args21137.length;
  switch(G__21139) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21137.length)].join(""));;
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__19074__auto__ = len - 1;
      var y__19075__auto__ = start;
      return x__19074__auto__ < y__19075__auto__ ? x__19074__auto__ : y__19075__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx) : cljs.core.nth.call(null, coll, idx), x)) {
          return idx;
        } else {
          var G__21144 = idx - 1;
          idx = G__21144;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__21145 = null;
  var G__21145__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21145__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21145 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21145__1.call(this, x);
      case 2:
        return G__21145__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21145.cljs$core$IFn$_invoke$arity$1 = G__21145__1;
  G__21145.cljs$core$IFn$_invoke$arity$2 = G__21145__2;
  return G__21145;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__21146 = null;
  var G__21146__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__21146__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21146 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21146__1.call(this, x);
      case 2:
        return G__21146__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21146.cljs$core$IFn$_invoke$arity$1 = G__21146__1;
  G__21146.cljs$core$IFn$_invoke$arity$2 = G__21146__2;
  return G__21146;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__19067__auto__ = 0;
  var y__19068__auto__ = self__.arr.length - self__.i;
  return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var args21147 = [];
  var len__19806__auto___21150 = arguments.length;
  var i__19807__auto___21151 = 0;
  while (true) {
    if (i__19807__auto___21151 < len__19806__auto___21150) {
      args21147.push(arguments[i__19807__auto___21151]);
      var G__21152 = i__19807__auto___21151 + 1;
      i__19807__auto___21151 = G__21152;
      continue;
    } else {
    }
    break;
  }
  var G__21149 = args21147.length;
  switch(G__21149) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21147.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var args21154 = [];
  var len__19806__auto___21157 = arguments.length;
  var i__19807__auto___21158 = 0;
  while (true) {
    if (i__19807__auto___21158 < len__19806__auto___21157) {
      args21154.push(arguments[i__19807__auto___21158]);
      var G__21159 = i__19807__auto___21158 + 1;
      i__19807__auto___21158 = G__21159;
      continue;
    } else {
    }
    break;
  }
  var G__21156 = args21154.length;
  switch(G__21156) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21154.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__21163 = null;
  var G__21163__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21163__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21163 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21163__1.call(this, x);
      case 2:
        return G__21163__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21163.cljs$core$IFn$_invoke$arity$1 = G__21163__1;
  G__21163.cljs$core$IFn$_invoke$arity$2 = G__21163__2;
  return G__21163;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__21164 = null;
  var G__21164__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null, coll));
  };
  var G__21164__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21164 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21164__1.call(this, x);
      case 2:
        return G__21164__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21164.cljs$core$IFn$_invoke$arity$1 = G__21164__1;
  G__21164.cljs$core$IFn$_invoke$arity$2 = G__21164__2;
  return G__21164;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__21161 = cljs.core.List.EMPTY;
  var G__21162 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__21161, G__21162) : cljs.core.with_meta.call(null, G__21161, G__21162);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__21165 = sn;
      s = G__21165;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj(var_args) {
  var args21166 = [];
  var len__19806__auto___21172 = arguments.length;
  var i__19807__auto___21173 = 0;
  while (true) {
    if (i__19807__auto___21173 < len__19806__auto___21172) {
      args21166.push(arguments[i__19807__auto___21173]);
      var G__21174 = i__19807__auto___21173 + 1;
      i__19807__auto___21173 = G__21174;
      continue;
    } else {
    }
    break;
  }
  var G__21171 = args21166.length;
  switch(G__21171) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21166.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    var x__19570__auto__ = x;
    return cljs.core._conj(cljs.core.List.EMPTY, x__19570__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__21176 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__21177 = cljs.core.first(xs);
      var G__21178 = cljs.core.next(xs);
      coll = G__21176;
      x = G__21177;
      xs = G__21178;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq21167) {
  var G__21168 = cljs.core.first(seq21167);
  var seq21167__$1 = cljs.core.next(seq21167);
  var G__21169 = cljs.core.first(seq21167__$1);
  var seq21167__$2 = cljs.core.next(seq21167__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__21168, G__21169, seq21167__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__21179 = cljs.core.next(s);
      var G__21180 = acc + 1;
      s = G__21179;
      acc = G__21180;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var args21185 = [];
  var len__19806__auto___21188 = arguments.length;
  var i__19807__auto___21189 = 0;
  while (true) {
    if (i__19807__auto___21189 < len__19806__auto___21188) {
      args21185.push(arguments[i__19807__auto___21189]);
      var G__21190 = i__19807__auto___21189 + 1;
      i__19807__auto___21189 = G__21190;
      continue;
    } else {
    }
    break;
  }
  var G__21187 = args21185.length;
  switch(G__21187) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21185.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__21192 = cljs.core.next(coll);
            var G__21193 = n - 1;
            coll = G__21192;
            n = G__21193;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__21194 = cljs.core.next(coll);
            var G__21195 = n - 1;
            var G__21196 = not_found;
            coll = G__21194;
            n = G__21195;
            not_found = G__21196;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var args21197 = [];
  var len__19806__auto___21204 = arguments.length;
  var i__19807__auto___21205 = 0;
  while (true) {
    if (i__19807__auto___21205 < len__19806__auto___21204) {
      args21197.push(arguments[i__19807__auto___21205]);
      var G__21206 = i__19807__auto___21205 + 1;
      i__19807__auto___21205 = G__21206;
      continue;
    } else {
    }
    break;
  }
  var G__21199 = args21197.length;
  switch(G__21199) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21197.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__21208 = n__$1 - 1;
      var G__21209 = cljs.core.rest(xs);
      n__$1 = G__21208;
      xs = G__21209;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var args21210 = [];
  var len__19806__auto___21215 = arguments.length;
  var i__19807__auto___21216 = 0;
  while (true) {
    if (i__19807__auto___21216 < len__19806__auto___21215) {
      args21210.push(arguments[i__19807__auto___21216]);
      var G__21217 = i__19807__auto___21216 + 1;
      i__19807__auto___21216 = G__21217;
      continue;
    } else {
    }
    break;
  }
  var G__21212 = args21210.length;
  switch(G__21212) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21210.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var args21219 = [];
  var len__19806__auto___21226 = arguments.length;
  var i__19807__auto___21227 = 0;
  while (true) {
    if (i__19807__auto___21227 < len__19806__auto___21226) {
      args21219.push(arguments[i__19807__auto___21227]);
      var G__21228 = i__19807__auto___21227 + 1;
      i__19807__auto___21227 = G__21228;
      continue;
    } else {
    }
    break;
  }
  var G__21225 = args21219.length;
  switch(G__21225) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21219.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__21230 = ret;
      var G__21231 = cljs.core.first(kvs);
      var G__21232 = cljs.core.second(kvs);
      var G__21233 = cljs.core.nnext(kvs);
      coll = G__21230;
      k = G__21231;
      v = G__21232;
      kvs = G__21233;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq21220) {
  var G__21221 = cljs.core.first(seq21220);
  var seq21220__$1 = cljs.core.next(seq21220);
  var G__21222 = cljs.core.first(seq21220__$1);
  var seq21220__$2 = cljs.core.next(seq21220__$1);
  var G__21223 = cljs.core.first(seq21220__$2);
  var seq21220__$3 = cljs.core.next(seq21220__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__21221, G__21222, G__21223, seq21220__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var args21234 = [];
  var len__19806__auto___21240 = arguments.length;
  var i__19807__auto___21241 = 0;
  while (true) {
    if (i__19807__auto___21241 < len__19806__auto___21240) {
      args21234.push(arguments[i__19807__auto___21241]);
      var G__21242 = i__19807__auto___21241 + 1;
      i__19807__auto___21241 = G__21242;
      continue;
    } else {
    }
    break;
  }
  var G__21239 = args21234.length;
  switch(G__21239) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21234.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__21244 = ret;
        var G__21245 = cljs.core.first(ks);
        var G__21246 = cljs.core.next(ks);
        coll = G__21244;
        k = G__21245;
        ks = G__21246;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq21235) {
  var G__21236 = cljs.core.first(seq21235);
  var seq21235__$1 = cljs.core.next(seq21235);
  var G__21237 = cljs.core.first(seq21235__$1);
  var seq21235__$2 = cljs.core.next(seq21235__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__21236, G__21237, seq21235__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__18736__auto__ = goog.isFunction(f);
  if (or__18736__auto__) {
    return or__18736__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__21252 = null;
  var G__21252__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__21252__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__21252__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__21252__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__21252__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__21252__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__21252__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__21252__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__21252__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__21252__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__21252__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__21252__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__21252__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__21252__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__21252__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__21252__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__21252__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__21252__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__21252__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__21252__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__21252__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__21252__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__21252 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__21252__1.call(this, self__);
      case 2:
        return G__21252__2.call(this, self__, a);
      case 3:
        return G__21252__3.call(this, self__, a, b);
      case 4:
        return G__21252__4.call(this, self__, a, b, c);
      case 5:
        return G__21252__5.call(this, self__, a, b, c, d);
      case 6:
        return G__21252__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__21252__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__21252__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__21252__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__21252__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__21252__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__21252__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__21252__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__21252__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__21252__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__21252__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__21252__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__21252__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__21252__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__21252__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__21252__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__21252__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21252.cljs$core$IFn$_invoke$arity$1 = G__21252__1;
  G__21252.cljs$core$IFn$_invoke$arity$2 = G__21252__2;
  G__21252.cljs$core$IFn$_invoke$arity$3 = G__21252__3;
  G__21252.cljs$core$IFn$_invoke$arity$4 = G__21252__4;
  G__21252.cljs$core$IFn$_invoke$arity$5 = G__21252__5;
  G__21252.cljs$core$IFn$_invoke$arity$6 = G__21252__6;
  G__21252.cljs$core$IFn$_invoke$arity$7 = G__21252__7;
  G__21252.cljs$core$IFn$_invoke$arity$8 = G__21252__8;
  G__21252.cljs$core$IFn$_invoke$arity$9 = G__21252__9;
  G__21252.cljs$core$IFn$_invoke$arity$10 = G__21252__10;
  G__21252.cljs$core$IFn$_invoke$arity$11 = G__21252__11;
  G__21252.cljs$core$IFn$_invoke$arity$12 = G__21252__12;
  G__21252.cljs$core$IFn$_invoke$arity$13 = G__21252__13;
  G__21252.cljs$core$IFn$_invoke$arity$14 = G__21252__14;
  G__21252.cljs$core$IFn$_invoke$arity$15 = G__21252__15;
  G__21252.cljs$core$IFn$_invoke$arity$16 = G__21252__16;
  G__21252.cljs$core$IFn$_invoke$arity$17 = G__21252__17;
  G__21252.cljs$core$IFn$_invoke$arity$18 = G__21252__18;
  G__21252.cljs$core$IFn$_invoke$arity$19 = G__21252__19;
  G__21252.cljs$core$IFn$_invoke$arity$20 = G__21252__20;
  G__21252.cljs$core$IFn$_invoke$arity$21 = G__21252__21;
  G__21252.cljs$core$IFn$_invoke$arity$22 = G__21252__22;
  return G__21252;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args21251) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21251)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__18724__auto__ = !(o == null);
    if (and__18724__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__18724__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var args21257 = [];
  var len__19806__auto___21263 = arguments.length;
  var i__19807__auto___21264 = 0;
  while (true) {
    if (i__19807__auto___21264 < len__19806__auto___21263) {
      args21257.push(arguments[i__19807__auto___21264]);
      var G__21265 = i__19807__auto___21264 + 1;
      i__19807__auto___21264 = G__21265;
      continue;
    } else {
    }
    break;
  }
  var G__21262 = args21257.length;
  switch(G__21262) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21257.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__21267 = ret;
        var G__21268 = cljs.core.first(ks);
        var G__21269 = cljs.core.next(ks);
        coll = G__21267;
        k = G__21268;
        ks = G__21269;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq21258) {
  var G__21259 = cljs.core.first(seq21258);
  var seq21258__$1 = cljs.core.next(seq21258);
  var G__21260 = cljs.core.first(seq21258__$1);
  var seq21258__$2 = cljs.core.next(seq21258__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__21259, G__21260, seq21258__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var args21290 = [];
  var len__19806__auto___21296 = arguments.length;
  var i__19807__auto___21297 = 0;
  while (true) {
    if (i__19807__auto___21297 < len__19806__auto___21296) {
      args21290.push(arguments[i__19807__auto___21297]);
      var G__21298 = i__19807__auto___21297 + 1;
      i__19807__auto___21297 = G__21298;
      continue;
    } else {
    }
    break;
  }
  var G__21293 = args21290.length;
  switch(G__21293) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21290.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__19825__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq21291) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21291));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__21302_21304 = obj;
  var G__21303_21305 = function(G__21302_21304, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__21302_21304, keys);
  goog.object.forEach(G__21302_21304, G__21303_21305);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21306 = i__$1 + 1;
      var G__21307 = j__$1 + 1;
      var G__21308 = len__$1 - 1;
      i__$1 = G__21306;
      j__$1 = G__21307;
      len__$1 = G__21308;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__21309 = i__$1 - 1;
      var G__21310 = j__$1 - 1;
      var G__21311 = len__$1 - 1;
      i__$1 = G__21309;
      j__$1 = G__21310;
      len__$1 = G__21311;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__18736__auto__ = cljs.core.fn_QMARK_(f);
  if (or__18736__auto__) {
    return or__18736__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var args21322 = [];
  var len__19806__auto___21328 = arguments.length;
  var i__19807__auto___21329 = 0;
  while (true) {
    if (i__19807__auto___21329 < len__19806__auto___21328) {
      args21322.push(arguments[i__19807__auto___21329]);
      var G__21330 = i__19807__auto___21329 + 1;
      i__19807__auto___21329 = G__21330;
      continue;
    } else {
    }
    break;
  }
  var G__21327 = args21322.length;
  switch(G__21327) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21322.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__21332 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__21333 = etc;
          s = G__21332;
          xs = G__21333;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq21323) {
  var G__21324 = cljs.core.first(seq21323);
  var seq21323__$1 = cljs.core.next(seq21323);
  var G__21325 = cljs.core.first(seq21323__$1);
  var seq21323__$2 = cljs.core.next(seq21323__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__21324, G__21325, seq21323__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var args21336 = [];
  var len__19806__auto___21339 = arguments.length;
  var i__19807__auto___21340 = 0;
  while (true) {
    if (i__19807__auto___21340 < len__19806__auto___21339) {
      args21336.push(arguments[i__19807__auto___21340]);
      var G__21341 = i__19807__auto___21340 + 1;
      i__19807__auto___21340 = G__21341;
      continue;
    } else {
    }
    break;
  }
  var G__21338 = args21336.length;
  switch(G__21338) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21336.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__21343 = xs;
      var G__21344 = ys;
      var G__21345 = len;
      var G__21346 = n + 1;
      xs = G__21343;
      ys = G__21344;
      len = G__21345;
      n = G__21346;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var args21347 = [];
  var len__19806__auto___21352 = arguments.length;
  var i__19807__auto___21353 = 0;
  while (true) {
    if (i__19807__auto___21353 < len__19806__auto___21352) {
      args21347.push(arguments[i__19807__auto___21353]);
      var G__21354 = i__19807__auto___21353 + 1;
      i__19807__auto___21353 = G__21354;
      continue;
    } else {
    }
    break;
  }
  var G__21349 = args21347.length;
  switch(G__21349) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21347.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__21350_21356 = a;
    var G__21351_21357 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__21350_21356, G__21351_21357);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var args21358 = [];
  var len__19806__auto___21361 = arguments.length;
  var i__19807__auto___21362 = 0;
  while (true) {
    if (i__19807__auto___21362 < len__19806__auto___21361) {
      args21358.push(arguments[i__19807__auto___21362]);
      var G__21363 = i__19807__auto___21362 + 1;
      i__19807__auto___21362 = G__21363;
      continue;
    } else {
    }
    break;
  }
  var G__21360 = args21358.length;
  switch(G__21360) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21358.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var args21365 = [];
  var len__19806__auto___21373 = arguments.length;
  var i__19807__auto___21374 = 0;
  while (true) {
    if (i__19807__auto___21374 < len__19806__auto___21373) {
      args21365.push(arguments[i__19807__auto___21374]);
      var G__21375 = i__19807__auto___21374 + 1;
      i__19807__auto___21374 = G__21375;
      continue;
    } else {
    }
    break;
  }
  var G__21367 = args21365.length;
  switch(G__21367) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21365.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    var G__21368 = f;
    var G__21369 = cljs.core.first(s);
    var G__21370 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__21368, G__21369, G__21370) : cljs.core.reduce.call(null, G__21368, G__21369, G__21370);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__21371 = val__$1;
        var G__21372 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21371, G__21372) : f.call(null, G__21371, G__21372);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__21377 = nval;
        var G__21378 = cljs.core.next(coll__$1);
        val__$1 = G__21377;
        coll__$1 = G__21378;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var args21379 = [];
  var len__19806__auto___21384 = arguments.length;
  var i__19807__auto___21385 = 0;
  while (true) {
    if (i__19807__auto___21385 < len__19806__auto___21384) {
      args21379.push(arguments[i__19807__auto___21385]);
      var G__21386 = i__19807__auto___21385 + 1;
      i__19807__auto___21385 = G__21386;
      continue;
    } else {
    }
    break;
  }
  var G__21381 = args21379.length;
  switch(G__21381) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21379.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var args21388 = [];
  var len__19806__auto___21391 = arguments.length;
  var i__19807__auto___21392 = 0;
  while (true) {
    if (i__19807__auto___21392 < len__19806__auto___21391) {
      args21388.push(arguments[i__19807__auto___21392]);
      var G__21393 = i__19807__auto___21392 + 1;
      i__19807__auto___21392 = G__21393;
      continue;
    } else {
    }
    break;
  }
  var G__21390 = args21388.length;
  switch(G__21390) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21388.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__21395 = null;
    var G__21395__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__21395__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__21395__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__21395 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__21395__0.call(this);
        case 1:
          return G__21395__1.call(this, x);
        case 2:
          return G__21395__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__21395.cljs$core$IFn$_invoke$arity$0 = G__21395__0;
    G__21395.cljs$core$IFn$_invoke$arity$1 = G__21395__1;
    G__21395.cljs$core$IFn$_invoke$arity$2 = G__21395__2;
    return G__21395;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var args21396 = [];
  var len__19806__auto___21399 = arguments.length;
  var i__19807__auto___21400 = 0;
  while (true) {
    if (i__19807__auto___21400 < len__19806__auto___21399) {
      args21396.push(arguments[i__19807__auto___21400]);
      var G__21401 = i__19807__auto___21400 + 1;
      i__19807__auto___21400 = G__21401;
      continue;
    } else {
    }
    break;
  }
  var G__21398 = args21396.length;
  switch(G__21398) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21396.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var args21403 = [];
  var len__19806__auto___21409 = arguments.length;
  var i__19807__auto___21410 = 0;
  while (true) {
    if (i__19807__auto___21410 < len__19806__auto___21409) {
      args21403.push(arguments[i__19807__auto___21410]);
      var G__21411 = i__19807__auto___21410 + 1;
      i__19807__auto___21410 = G__21411;
      continue;
    } else {
    }
    break;
  }
  var G__21408 = args21403.length;
  switch(G__21408) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21403.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq21404) {
  var G__21405 = cljs.core.first(seq21404);
  var seq21404__$1 = cljs.core.next(seq21404);
  var G__21406 = cljs.core.first(seq21404__$1);
  var seq21404__$2 = cljs.core.next(seq21404__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__21405, G__21406, seq21404__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var args21413 = [];
  var len__19806__auto___21419 = arguments.length;
  var i__19807__auto___21420 = 0;
  while (true) {
    if (i__19807__auto___21420 < len__19806__auto___21419) {
      args21413.push(arguments[i__19807__auto___21420]);
      var G__21421 = i__19807__auto___21420 + 1;
      i__19807__auto___21420 = G__21421;
      continue;
    } else {
    }
    break;
  }
  var G__21418 = args21413.length;
  switch(G__21418) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21413.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq21414) {
  var G__21415 = cljs.core.first(seq21414);
  var seq21414__$1 = cljs.core.next(seq21414);
  var G__21416 = cljs.core.first(seq21414__$1);
  var seq21414__$2 = cljs.core.next(seq21414__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__21415, G__21416, seq21414__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var args21423 = [];
  var len__19806__auto___21429 = arguments.length;
  var i__19807__auto___21430 = 0;
  while (true) {
    if (i__19807__auto___21430 < len__19806__auto___21429) {
      args21423.push(arguments[i__19807__auto___21430]);
      var G__21431 = i__19807__auto___21430 + 1;
      i__19807__auto___21430 = G__21431;
      continue;
    } else {
    }
    break;
  }
  var G__21428 = args21423.length;
  switch(G__21428) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21423.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq21424) {
  var G__21425 = cljs.core.first(seq21424);
  var seq21424__$1 = cljs.core.next(seq21424);
  var G__21426 = cljs.core.first(seq21424__$1);
  var seq21424__$2 = cljs.core.next(seq21424__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__21425, G__21426, seq21424__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var args21433 = [];
  var len__19806__auto___21439 = arguments.length;
  var i__19807__auto___21440 = 0;
  while (true) {
    if (i__19807__auto___21440 < len__19806__auto___21439) {
      args21433.push(arguments[i__19807__auto___21440]);
      var G__21441 = i__19807__auto___21440 + 1;
      i__19807__auto___21440 = G__21441;
      continue;
    } else {
    }
    break;
  }
  var G__21438 = args21433.length;
  switch(G__21438) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21433.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq21434) {
  var G__21435 = cljs.core.first(seq21434);
  var seq21434__$1 = cljs.core.next(seq21434);
  var G__21436 = cljs.core.first(seq21434__$1);
  var seq21434__$2 = cljs.core.next(seq21434__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__21435, G__21436, seq21434__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var args21443 = [];
  var len__19806__auto___21449 = arguments.length;
  var i__19807__auto___21450 = 0;
  while (true) {
    if (i__19807__auto___21450 < len__19806__auto___21449) {
      args21443.push(arguments[i__19807__auto___21450]);
      var G__21451 = i__19807__auto___21450 + 1;
      i__19807__auto___21450 = G__21451;
      continue;
    } else {
    }
    break;
  }
  var G__21448 = args21443.length;
  switch(G__21448) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21443.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__21453 = y;
        var G__21454 = cljs.core.first(more);
        var G__21455 = cljs.core.next(more);
        x = G__21453;
        y = G__21454;
        more = G__21455;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq21444) {
  var G__21445 = cljs.core.first(seq21444);
  var seq21444__$1 = cljs.core.next(seq21444);
  var G__21446 = cljs.core.first(seq21444__$1);
  var seq21444__$2 = cljs.core.next(seq21444__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__21445, G__21446, seq21444__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var args21456 = [];
  var len__19806__auto___21462 = arguments.length;
  var i__19807__auto___21463 = 0;
  while (true) {
    if (i__19807__auto___21463 < len__19806__auto___21462) {
      args21456.push(arguments[i__19807__auto___21463]);
      var G__21464 = i__19807__auto___21463 + 1;
      i__19807__auto___21463 = G__21464;
      continue;
    } else {
    }
    break;
  }
  var G__21461 = args21456.length;
  switch(G__21461) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21456.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__21466 = y;
        var G__21467 = cljs.core.first(more);
        var G__21468 = cljs.core.next(more);
        x = G__21466;
        y = G__21467;
        more = G__21468;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq21457) {
  var G__21458 = cljs.core.first(seq21457);
  var seq21457__$1 = cljs.core.next(seq21457);
  var G__21459 = cljs.core.first(seq21457__$1);
  var seq21457__$2 = cljs.core.next(seq21457__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21458, G__21459, seq21457__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var args21469 = [];
  var len__19806__auto___21475 = arguments.length;
  var i__19807__auto___21476 = 0;
  while (true) {
    if (i__19807__auto___21476 < len__19806__auto___21475) {
      args21469.push(arguments[i__19807__auto___21476]);
      var G__21477 = i__19807__auto___21476 + 1;
      i__19807__auto___21476 = G__21477;
      continue;
    } else {
    }
    break;
  }
  var G__21474 = args21469.length;
  switch(G__21474) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21469.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__21479 = y;
        var G__21480 = cljs.core.first(more);
        var G__21481 = cljs.core.next(more);
        x = G__21479;
        y = G__21480;
        more = G__21481;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq21470) {
  var G__21471 = cljs.core.first(seq21470);
  var seq21470__$1 = cljs.core.next(seq21470);
  var G__21472 = cljs.core.first(seq21470__$1);
  var seq21470__$2 = cljs.core.next(seq21470__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__21471, G__21472, seq21470__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var args21482 = [];
  var len__19806__auto___21488 = arguments.length;
  var i__19807__auto___21489 = 0;
  while (true) {
    if (i__19807__auto___21489 < len__19806__auto___21488) {
      args21482.push(arguments[i__19807__auto___21489]);
      var G__21490 = i__19807__auto___21489 + 1;
      i__19807__auto___21489 = G__21490;
      continue;
    } else {
    }
    break;
  }
  var G__21487 = args21482.length;
  switch(G__21487) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21482.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__21492 = y;
        var G__21493 = cljs.core.first(more);
        var G__21494 = cljs.core.next(more);
        x = G__21492;
        y = G__21493;
        more = G__21494;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq21483) {
  var G__21484 = cljs.core.first(seq21483);
  var seq21483__$1 = cljs.core.next(seq21483);
  var G__21485 = cljs.core.first(seq21483__$1);
  var seq21483__$2 = cljs.core.next(seq21483__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21484, G__21485, seq21483__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var args21495 = [];
  var len__19806__auto___21501 = arguments.length;
  var i__19807__auto___21502 = 0;
  while (true) {
    if (i__19807__auto___21502 < len__19806__auto___21501) {
      args21495.push(arguments[i__19807__auto___21502]);
      var G__21503 = i__19807__auto___21502 + 1;
      i__19807__auto___21502 = G__21503;
      continue;
    } else {
    }
    break;
  }
  var G__21500 = args21495.length;
  switch(G__21500) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21495.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__19067__auto__ = x;
  var y__19068__auto__ = y;
  return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__19067__auto__ = x;
    var y__19068__auto__ = y;
    return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq21496) {
  var G__21497 = cljs.core.first(seq21496);
  var seq21496__$1 = cljs.core.next(seq21496);
  var G__21498 = cljs.core.first(seq21496__$1);
  var seq21496__$2 = cljs.core.next(seq21496__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__21497, G__21498, seq21496__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var args21505 = [];
  var len__19806__auto___21511 = arguments.length;
  var i__19807__auto___21512 = 0;
  while (true) {
    if (i__19807__auto___21512 < len__19806__auto___21511) {
      args21505.push(arguments[i__19807__auto___21512]);
      var G__21513 = i__19807__auto___21512 + 1;
      i__19807__auto___21512 = G__21513;
      continue;
    } else {
    }
    break;
  }
  var G__21510 = args21505.length;
  switch(G__21510) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21505.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__19074__auto__ = x;
  var y__19075__auto__ = y;
  return x__19074__auto__ < y__19075__auto__ ? x__19074__auto__ : y__19075__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__19074__auto__ = x;
    var y__19075__auto__ = y;
    return x__19074__auto__ < y__19075__auto__ ? x__19074__auto__ : y__19075__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq21506) {
  var G__21507 = cljs.core.first(seq21506);
  var seq21506__$1 = cljs.core.next(seq21506);
  var G__21508 = cljs.core.first(seq21506__$1);
  var seq21506__$2 = cljs.core.next(seq21506__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__21507, G__21508, seq21506__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var args21515 = [];
  var len__19806__auto___21521 = arguments.length;
  var i__19807__auto___21522 = 0;
  while (true) {
    if (i__19807__auto___21522 < len__19806__auto___21521) {
      args21515.push(arguments[i__19807__auto___21522]);
      var G__21523 = i__19807__auto___21522 + 1;
      i__19807__auto___21522 = G__21523;
      continue;
    } else {
    }
    break;
  }
  var G__21520 = args21515.length;
  switch(G__21520) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21515.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq21516) {
  var G__21517 = cljs.core.first(seq21516);
  var seq21516__$1 = cljs.core.next(seq21516);
  var G__21518 = cljs.core.first(seq21516__$1);
  var seq21516__$2 = cljs.core.next(seq21516__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__21517, G__21518, seq21516__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var args21525 = [];
  var len__19806__auto___21531 = arguments.length;
  var i__19807__auto___21532 = 0;
  while (true) {
    if (i__19807__auto___21532 < len__19806__auto___21531) {
      args21525.push(arguments[i__19807__auto___21532]);
      var G__21533 = i__19807__auto___21532 + 1;
      i__19807__auto___21532 = G__21533;
      continue;
    } else {
    }
    break;
  }
  var G__21530 = args21525.length;
  switch(G__21530) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21525.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq21526) {
  var G__21527 = cljs.core.first(seq21526);
  var seq21526__$1 = cljs.core.next(seq21526);
  var G__21528 = cljs.core.first(seq21526__$1);
  var seq21526__$2 = cljs.core.next(seq21526__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__21527, G__21528, seq21526__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var args21535 = [];
  var len__19806__auto___21541 = arguments.length;
  var i__19807__auto___21542 = 0;
  while (true) {
    if (i__19807__auto___21542 < len__19806__auto___21541) {
      args21535.push(arguments[i__19807__auto___21542]);
      var G__21543 = i__19807__auto___21542 + 1;
      i__19807__auto___21542 = G__21543;
      continue;
    } else {
    }
    break;
  }
  var G__21540 = args21535.length;
  switch(G__21540) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21535.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq21536) {
  var G__21537 = cljs.core.first(seq21536);
  var seq21536__$1 = cljs.core.next(seq21536);
  var G__21538 = cljs.core.first(seq21536__$1);
  var seq21536__$2 = cljs.core.next(seq21536__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__21537, G__21538, seq21536__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var args21545 = [];
  var len__19806__auto___21551 = arguments.length;
  var i__19807__auto___21552 = 0;
  while (true) {
    if (i__19807__auto___21552 < len__19806__auto___21551) {
      args21545.push(arguments[i__19807__auto___21552]);
      var G__21553 = i__19807__auto___21552 + 1;
      i__19807__auto___21552 = G__21553;
      continue;
    } else {
    }
    break;
  }
  var G__21550 = args21545.length;
  switch(G__21550) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21545.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq21546) {
  var G__21547 = cljs.core.first(seq21546);
  var seq21546__$1 = cljs.core.next(seq21546);
  var G__21548 = cljs.core.first(seq21546__$1);
  var seq21546__$2 = cljs.core.next(seq21546__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__21547, G__21548, seq21546__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var args21555 = [];
  var len__19806__auto___21561 = arguments.length;
  var i__19807__auto___21562 = 0;
  while (true) {
    if (i__19807__auto___21562 < len__19806__auto___21561) {
      args21555.push(arguments[i__19807__auto___21562]);
      var G__21563 = i__19807__auto___21562 + 1;
      i__19807__auto___21562 = G__21563;
      continue;
    } else {
    }
    break;
  }
  var G__21560 = args21555.length;
  switch(G__21560) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21555.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq21556) {
  var G__21557 = cljs.core.first(seq21556);
  var seq21556__$1 = cljs.core.next(seq21556);
  var G__21558 = cljs.core.first(seq21556__$1);
  var seq21556__$2 = cljs.core.next(seq21556__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__21557, G__21558, seq21556__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var args21565 = [];
  var len__19806__auto___21571 = arguments.length;
  var i__19807__auto___21572 = 0;
  while (true) {
    if (i__19807__auto___21572 < len__19806__auto___21571) {
      args21565.push(arguments[i__19807__auto___21572]);
      var G__21573 = i__19807__auto___21572 + 1;
      i__19807__auto___21572 = G__21573;
      continue;
    } else {
    }
    break;
  }
  var G__21570 = args21565.length;
  switch(G__21570) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21565.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq21566) {
  var G__21567 = cljs.core.first(seq21566);
  var seq21566__$1 = cljs.core.next(seq21566);
  var G__21568 = cljs.core.first(seq21566__$1);
  var seq21566__$2 = cljs.core.next(seq21566__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__21567, G__21568, seq21566__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var args21575 = [];
  var len__19806__auto___21581 = arguments.length;
  var i__19807__auto___21582 = 0;
  while (true) {
    if (i__19807__auto___21582 < len__19806__auto___21581) {
      args21575.push(arguments[i__19807__auto___21582]);
      var G__21583 = i__19807__auto___21582 + 1;
      i__19807__auto___21582 = G__21583;
      continue;
    } else {
    }
    break;
  }
  var G__21580 = args21575.length;
  switch(G__21580) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21575.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq21576) {
  var G__21577 = cljs.core.first(seq21576);
  var seq21576__$1 = cljs.core.next(seq21576);
  var G__21578 = cljs.core.first(seq21576__$1);
  var seq21576__$2 = cljs.core.next(seq21576__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__21577, G__21578, seq21576__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var args21585 = [];
  var len__19806__auto___21591 = arguments.length;
  var i__19807__auto___21592 = 0;
  while (true) {
    if (i__19807__auto___21592 < len__19806__auto___21591) {
      args21585.push(arguments[i__19807__auto___21592]);
      var G__21593 = i__19807__auto___21592 + 1;
      i__19807__auto___21592 = G__21593;
      continue;
    } else {
    }
    break;
  }
  var G__21590 = args21585.length;
  switch(G__21590) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21585.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq21586) {
  var G__21587 = cljs.core.first(seq21586);
  var seq21586__$1 = cljs.core.next(seq21586);
  var G__21588 = cljs.core.first(seq21586__$1);
  var seq21586__$2 = cljs.core.next(seq21586__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__21587, G__21588, seq21586__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var args21595 = [];
  var len__19806__auto___21601 = arguments.length;
  var i__19807__auto___21602 = 0;
  while (true) {
    if (i__19807__auto___21602 < len__19806__auto___21601) {
      args21595.push(arguments[i__19807__auto___21602]);
      var G__21603 = i__19807__auto___21602 + 1;
      i__19807__auto___21602 = G__21603;
      continue;
    } else {
    }
    break;
  }
  var G__21600 = args21595.length;
  switch(G__21600) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21595.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq21596) {
  var G__21597 = cljs.core.first(seq21596);
  var seq21596__$1 = cljs.core.next(seq21596);
  var G__21598 = cljs.core.first(seq21596__$1);
  var seq21596__$2 = cljs.core.next(seq21596__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__21597, G__21598, seq21596__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var args21605 = [];
  var len__19806__auto___21611 = arguments.length;
  var i__19807__auto___21612 = 0;
  while (true) {
    if (i__19807__auto___21612 < len__19806__auto___21611) {
      args21605.push(arguments[i__19807__auto___21612]);
      var G__21613 = i__19807__auto___21612 + 1;
      i__19807__auto___21612 = G__21613;
      continue;
    } else {
    }
    break;
  }
  var G__21610 = args21605.length;
  switch(G__21610) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21605.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq21606) {
  var G__21607 = cljs.core.first(seq21606);
  var seq21606__$1 = cljs.core.next(seq21606);
  var G__21608 = cljs.core.first(seq21606__$1);
  var seq21606__$2 = cljs.core.next(seq21606__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__21607, G__21608, seq21606__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var args21615 = [];
  var len__19806__auto___21621 = arguments.length;
  var i__19807__auto___21622 = 0;
  while (true) {
    if (i__19807__auto___21622 < len__19806__auto___21621) {
      args21615.push(arguments[i__19807__auto___21622]);
      var G__21623 = i__19807__auto___21622 + 1;
      i__19807__auto___21622 = G__21623;
      continue;
    } else {
    }
    break;
  }
  var G__21620 = args21615.length;
  switch(G__21620) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21615.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq21616) {
  var G__21617 = cljs.core.first(seq21616);
  var seq21616__$1 = cljs.core.next(seq21616);
  var G__21618 = cljs.core.first(seq21616__$1);
  var seq21616__$2 = cljs.core.next(seq21616__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__21617, G__21618, seq21616__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var args21625 = [];
  var len__19806__auto___21631 = arguments.length;
  var i__19807__auto___21632 = 0;
  while (true) {
    if (i__19807__auto___21632 < len__19806__auto___21631) {
      args21625.push(arguments[i__19807__auto___21632]);
      var G__21633 = i__19807__auto___21632 + 1;
      i__19807__auto___21632 = G__21633;
      continue;
    } else {
    }
    break;
  }
  var G__21630 = args21625.length;
  switch(G__21630) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21625.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__21635 = y;
        var G__21636 = cljs.core.first(more);
        var G__21637 = cljs.core.next(more);
        x = G__21635;
        y = G__21636;
        more = G__21637;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq21626) {
  var G__21627 = cljs.core.first(seq21626);
  var seq21626__$1 = cljs.core.next(seq21626);
  var G__21628 = cljs.core.first(seq21626__$1);
  var seq21626__$2 = cljs.core.next(seq21626__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21627, G__21628, seq21626__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__21638 = n__$1 - 1;
      var G__21639 = cljs.core.next(xs);
      n__$1 = G__21638;
      xs = G__21639;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var args21640 = [];
  var len__19806__auto___21645 = arguments.length;
  var i__19807__auto___21646 = 0;
  while (true) {
    if (i__19807__auto___21646 < len__19806__auto___21645) {
      args21640.push(arguments[i__19807__auto___21646]);
      var G__21647 = i__19807__auto___21646 + 1;
      i__19807__auto___21646 = G__21647;
      continue;
    } else {
    }
    break;
  }
  var G__21644 = args21640.length;
  switch(G__21644) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21640.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19825__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__21649 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__21650 = cljs.core.next(more);
      sb = G__21649;
      more = G__21650;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq21641) {
  var G__21642 = cljs.core.first(seq21641);
  var seq21641__$1 = cljs.core.next(seq21641);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__21642, seq21641__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var args21651 = [];
  var len__19806__auto___21654 = arguments.length;
  var i__19807__auto___21655 = 0;
  while (true) {
    if (i__19807__auto___21655 < len__19806__auto___21654) {
      args21651.push(arguments[i__19807__auto___21655]);
      var G__21656 = i__19807__auto___21655 + 1;
      i__19807__auto___21655 = G__21656;
      continue;
    } else {
    }
    break;
  }
  var G__21653 = args21651.length;
  switch(G__21653) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21651.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__21658 = cljs.core.next(xs);
            var G__21659 = cljs.core.next(ys);
            xs = G__21658;
            ys = G__21659;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__21660 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__21661 = cljs.core.next(s);
        res = G__21660;
        s = G__21661;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__21662 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__21663 = cljs.core.next(s);
      h = G__21662;
      s = G__21663;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__21664 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__21665 = cljs.core.next(s__$1);
      h = G__21664;
      s__$1 = G__21665;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__21672_21678 = cljs.core.seq(fn_map);
  var chunk__21673_21679 = null;
  var count__21674_21680 = 0;
  var i__21675_21681 = 0;
  while (true) {
    if (i__21675_21681 < count__21674_21680) {
      var vec__21676_21682 = chunk__21673_21679.cljs$core$IIndexed$_nth$arity$2(null, i__21675_21681);
      var key_name_21683 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21676_21682, 0, null);
      var f_21684 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21676_21682, 1, null);
      var str_name_21685 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_21683) : cljs.core.name.call(null, key_name_21683);
      obj[str_name_21685] = f_21684;
      var G__21686 = seq__21672_21678;
      var G__21687 = chunk__21673_21679;
      var G__21688 = count__21674_21680;
      var G__21689 = i__21675_21681 + 1;
      seq__21672_21678 = G__21686;
      chunk__21673_21679 = G__21687;
      count__21674_21680 = G__21688;
      i__21675_21681 = G__21689;
      continue;
    } else {
      var temp__4657__auto___21690 = cljs.core.seq(seq__21672_21678);
      if (temp__4657__auto___21690) {
        var seq__21672_21691__$1 = temp__4657__auto___21690;
        if (cljs.core.chunked_seq_QMARK_(seq__21672_21691__$1)) {
          var c__19547__auto___21692 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__21672_21691__$1) : cljs.core.chunk_first.call(null, seq__21672_21691__$1);
          var G__21693 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__21672_21691__$1) : cljs.core.chunk_rest.call(null, seq__21672_21691__$1);
          var G__21694 = c__19547__auto___21692;
          var G__21695 = cljs.core.count(c__19547__auto___21692);
          var G__21696 = 0;
          seq__21672_21678 = G__21693;
          chunk__21673_21679 = G__21694;
          count__21674_21680 = G__21695;
          i__21675_21681 = G__21696;
          continue;
        } else {
          var vec__21677_21697 = cljs.core.first(seq__21672_21691__$1);
          var key_name_21698 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21677_21697, 0, null);
          var f_21699 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21677_21697, 1, null);
          var str_name_21700 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_21698) : cljs.core.name.call(null, key_name_21698);
          obj[str_name_21700] = f_21699;
          var G__21701 = cljs.core.next(seq__21672_21691__$1);
          var G__21702 = null;
          var G__21703 = 0;
          var G__21704 = 0;
          seq__21672_21678 = G__21701;
          chunk__21673_21679 = G__21702;
          count__21674_21680 = G__21703;
          i__21675_21681 = G__21704;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__21705 = null;
  var G__21705__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21705__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21705 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21705__1.call(this, x);
      case 2:
        return G__21705__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21705.cljs$core$IFn$_invoke$arity$1 = G__21705__1;
  G__21705.cljs$core$IFn$_invoke$arity$2 = G__21705__2;
  return G__21705;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__21706 = null;
  var G__21706__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__21706__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21706 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21706__1.call(this, x);
      case 2:
        return G__21706__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21706.cljs$core$IFn$_invoke$arity$1 = G__21706__1;
  G__21706.cljs$core$IFn$_invoke$arity$2 = G__21706__2;
  return G__21706;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__21709 = null;
  var G__21709__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21709__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21709 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21709__1.call(this, x);
      case 2:
        return G__21709__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21709.cljs$core$IFn$_invoke$arity$1 = G__21709__1;
  G__21709.cljs$core$IFn$_invoke$arity$2 = G__21709__2;
  return G__21709;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__21710 = null;
  var G__21710__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21710__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21710 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21710__1.call(this, x);
      case 2:
        return G__21710__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21710.cljs$core$IFn$_invoke$arity$1 = G__21710__1;
  G__21710.cljs$core$IFn$_invoke$arity$2 = G__21710__2;
  return G__21710;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___21714 = arguments.length;
  var i__19807__auto___21715 = 0;
  while (true) {
    if (i__19807__auto___21715 < len__19806__auto___21714) {
      args__19813__auto__.push(arguments[i__19807__auto___21715]);
      var G__21716 = i__19807__auto___21715 + 1;
      i__19807__auto___21715 = G__21716;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__21717 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__21717;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__21718 = i - 1;
      var G__21719 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__21718;
      r = G__21719;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq21713) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq21713));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__21720 = null;
  var G__21720__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21720__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21720 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21720__1.call(this, x);
      case 2:
        return G__21720__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21720.cljs$core$IFn$_invoke$arity$1 = G__21720__1;
  G__21720.cljs$core$IFn$_invoke$arity$2 = G__21720__2;
  return G__21720;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__21721 = null;
  var G__21721__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21721__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21721 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21721__1.call(this, x);
      case 2:
        return G__21721__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21721.cljs$core$IFn$_invoke$arity$1 = G__21721__1;
  G__21721.cljs$core$IFn$_invoke$arity$2 = G__21721__2;
  return G__21721;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__18736__auto__ = coll == null;
    if (or__18736__auto__) {
      return or__18736__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = cljs.core.not(a.ns);
      if (and__18724__auto__) {
        return b.ns;
      } else {
        return and__18724__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__21732 = a.ns;
            var G__21733 = b.ns;
            return goog.array.defaultCompare(G__21732, G__21733);
          }();
          if (0 === nsc) {
            var G__21734 = a.name;
            var G__21735 = b.name;
            return goog.array.defaultCompare(G__21734, G__21735);
          } else {
            return nsc;
          }
        }
      } else {
        var G__21736 = a.name;
        var G__21737 = b.name;
        return goog.array.defaultCompare(G__21736, G__21737);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__21739 = null;
  var G__21739__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__21739__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__21739 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__21739__2.call(this, self__, coll);
      case 3:
        return G__21739__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21739.cljs$core$IFn$_invoke$arity$2 = G__21739__2;
  G__21739.cljs$core$IFn$_invoke$arity$3 = G__21739__3;
  return G__21739;
}();
cljs.core.Keyword.prototype.apply = function(self__, args21738) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args21738)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__19171__auto__ = self__._hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var args21742 = [];
  var len__19806__auto___21745 = arguments.length;
  var i__19807__auto___21746 = 0;
  while (true) {
    if (i__19807__auto___21746 < len__19806__auto___21745) {
      args21742.push(arguments[i__19807__auto___21746]);
      var G__21747 = i__19807__auto___21746 + 1;
      i__19807__auto___21746 = G__21747;
      continue;
    } else {
    }
    break;
  }
  var G__21744 = args21742.length;
  switch(G__21744) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21742.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__21749 = null;
  var G__21749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21749__1.call(this, x);
      case 2:
        return G__21749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21749.cljs$core$IFn$_invoke$arity$1 = G__21749__1;
  G__21749.cljs$core$IFn$_invoke$arity$2 = G__21749__2;
  return G__21749;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__21750 = null;
  var G__21750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21750__1.call(this, x);
      case 2:
        return G__21750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21750.cljs$core$IFn$_invoke$arity$1 = G__21750__1;
  G__21750.cljs$core$IFn$_invoke$arity$2 = G__21750__2;
  return G__21750;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__21751 = ls.sval();
        ls = G__21751;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var args21752 = [];
  var len__19806__auto___21755 = arguments.length;
  var i__19807__auto___21756 = 0;
  while (true) {
    if (i__19807__auto___21756 < len__19806__auto___21755) {
      args21752.push(arguments[i__19807__auto___21756]);
      var G__21757 = i__19807__auto___21756 + 1;
      i__19807__auto___21756 = G__21757;
      continue;
    } else {
    }
    break;
  }
  var G__21754 = args21752.length;
  switch(G__21754) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21752.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__21759 = null;
  var G__21759__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21759__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21759 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21759__1.call(this, x);
      case 2:
        return G__21759__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21759.cljs$core$IFn$_invoke$arity$1 = G__21759__1;
  G__21759.cljs$core$IFn$_invoke$arity$2 = G__21759__2;
  return G__21759;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__21760 = null;
  var G__21760__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21760__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21760 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21760__1.call(this, x);
      case 2:
        return G__21760__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21760.cljs$core$IFn$_invoke$arity$1 = G__21760__1;
  G__21760.cljs$core$IFn$_invoke$arity$2 = G__21760__2;
  return G__21760;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__21763 = cljs.core.next(s__$1);
      s__$1 = G__21763;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_21764 = 0;
  var xs_21765 = cljs.core.seq(coll);
  while (true) {
    if (xs_21765) {
      ret[i_21764] = cljs.core.to_array(cljs.core.first(xs_21765));
      var G__21766 = i_21764 + 1;
      var G__21767 = cljs.core.next(xs_21765);
      i_21764 = G__21766;
      xs_21765 = G__21767;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var args21768 = [];
  var len__19806__auto___21771 = arguments.length;
  var i__19807__auto___21772 = 0;
  while (true) {
    if (i__19807__auto___21772 < len__19806__auto___21771) {
      args21768.push(arguments[i__19807__auto___21772]);
      var G__21773 = i__19807__auto___21772 + 1;
      i__19807__auto___21772 = G__21773;
      continue;
    } else {
    }
    break;
  }
  var G__21770 = args21768.length;
  switch(G__21770) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21768.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21775 = i + 1;
        var G__21776 = cljs.core.next(s__$1);
        i = G__21775;
        s__$1 = G__21776;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__19651__auto___21777 = size;
    var i_21778 = 0;
    while (true) {
      if (i_21778 < n__19651__auto___21777) {
        a[i_21778] = init_val_or_seq;
        var G__21779 = i_21778 + 1;
        i_21778 = G__21779;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var args21780 = [];
  var len__19806__auto___21783 = arguments.length;
  var i__19807__auto___21784 = 0;
  while (true) {
    if (i__19807__auto___21784 < len__19806__auto___21783) {
      args21780.push(arguments[i__19807__auto___21784]);
      var G__21785 = i__19807__auto___21784 + 1;
      i__19807__auto___21784 = G__21785;
      continue;
    } else {
    }
    break;
  }
  var G__21782 = args21780.length;
  switch(G__21782) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21780.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21787 = i + 1;
        var G__21788 = cljs.core.next(s__$1);
        i = G__21787;
        s__$1 = G__21788;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__19651__auto___21789 = size;
    var i_21790 = 0;
    while (true) {
      if (i_21790 < n__19651__auto___21789) {
        a[i_21790] = init_val_or_seq;
        var G__21791 = i_21790 + 1;
        i_21790 = G__21791;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var args21792 = [];
  var len__19806__auto___21795 = arguments.length;
  var i__19807__auto___21796 = 0;
  while (true) {
    if (i__19807__auto___21796 < len__19806__auto___21795) {
      args21792.push(arguments[i__19807__auto___21796]);
      var G__21797 = i__19807__auto___21796 + 1;
      i__19807__auto___21796 = G__21797;
      continue;
    } else {
    }
    break;
  }
  var G__21794 = args21792.length;
  switch(G__21794) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21792.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21799 = i + 1;
        var G__21800 = cljs.core.next(s__$1);
        i = G__21799;
        s__$1 = G__21800;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__19651__auto___21801 = size;
    var i_21802 = 0;
    while (true) {
      if (i_21802 < n__19651__auto___21801) {
        a[i_21802] = init_val_or_seq;
        var G__21803 = i_21802 + 1;
        i_21802 = G__21803;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var args21804 = [];
  var len__19806__auto___21807 = arguments.length;
  var i__19807__auto___21808 = 0;
  while (true) {
    if (i__19807__auto___21808 < len__19806__auto___21807) {
      args21804.push(arguments[i__19807__auto___21808]);
      var G__21809 = i__19807__auto___21808 + 1;
      i__19807__auto___21808 = G__21809;
      continue;
    } else {
    }
    break;
  }
  var G__21806 = args21804.length;
  switch(G__21806) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21804.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__21811 = i + 1;
        var G__21812 = cljs.core.next(s__$1);
        i = G__21811;
        s__$1 = G__21812;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__19651__auto___21813 = size;
    var i_21814 = 0;
    while (true) {
      if (i_21814 < n__19651__auto___21813) {
        a[i_21814] = init_val_or_seq;
        var G__21815 = i_21814 + 1;
        i_21814 = G__21815;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__21816 = cljs.core.next(s__$1);
        var G__21817 = i - 1;
        var G__21818 = sum + 1;
        s__$1 = G__21816;
        i = G__21817;
        sum = G__21818;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var args21820 = [];
  var len__19806__auto___21832 = arguments.length;
  var i__19807__auto___21833 = 0;
  while (true) {
    if (i__19807__auto___21833 < len__19806__auto___21832) {
      args21820.push(arguments[i__19807__auto___21833]);
      var G__21834 = i__19807__auto___21833 + 1;
      i__19807__auto___21833 = G__21834;
      continue;
    } else {
    }
    break;
  }
  var G__21825 = args21820.length;
  switch(G__21825) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21820.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq21821) {
  var G__21822 = cljs.core.first(seq21821);
  var seq21821__$1 = cljs.core.next(seq21821);
  var G__21823 = cljs.core.first(seq21821__$1);
  var seq21821__$2 = cljs.core.next(seq21821__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__21822, G__21823, seq21821__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var args21836 = [];
  var len__19806__auto___21844 = arguments.length;
  var i__19807__auto___21845 = 0;
  while (true) {
    if (i__19807__auto___21845 < len__19806__auto___21844) {
      args21836.push(arguments[i__19807__auto___21845]);
      var G__21846 = i__19807__auto___21845 + 1;
      i__19807__auto___21845 = G__21846;
      continue;
    } else {
    }
    break;
  }
  var G__21843 = args21836.length;
  switch(G__21843) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21836.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__19825__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq21837) {
  var G__21838 = cljs.core.first(seq21837);
  var seq21837__$1 = cljs.core.next(seq21837);
  var G__21839 = cljs.core.first(seq21837__$1);
  var seq21837__$2 = cljs.core.next(seq21837__$1);
  var G__21840 = cljs.core.first(seq21837__$2);
  var seq21837__$3 = cljs.core.next(seq21837__$2);
  var G__21841 = cljs.core.first(seq21837__$3);
  var seq21837__$4 = cljs.core.next(seq21837__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__21838, G__21839, G__21840, G__21841, seq21837__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var args21848 = [];
  var len__19806__auto___21854 = arguments.length;
  var i__19807__auto___21855 = 0;
  while (true) {
    if (i__19807__auto___21855 < len__19806__auto___21854) {
      args21848.push(arguments[i__19807__auto___21855]);
      var G__21856 = i__19807__auto___21855 + 1;
      i__19807__auto___21855 = G__21856;
      continue;
    } else {
    }
    break;
  }
  var G__21853 = args21848.length;
  switch(G__21853) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21848.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__21858 = ntcoll;
      var G__21859 = cljs.core.first(vals);
      var G__21860 = cljs.core.next(vals);
      tcoll = G__21858;
      val = G__21859;
      vals = G__21860;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq21849) {
  var G__21850 = cljs.core.first(seq21849);
  var seq21849__$1 = cljs.core.next(seq21849);
  var G__21851 = cljs.core.first(seq21849__$1);
  var seq21849__$2 = cljs.core.next(seq21849__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21850, G__21851, seq21849__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var args21861 = [];
  var len__19806__auto___21868 = arguments.length;
  var i__19807__auto___21869 = 0;
  while (true) {
    if (i__19807__auto___21869 < len__19806__auto___21868) {
      args21861.push(arguments[i__19807__auto___21869]);
      var G__21870 = i__19807__auto___21869 + 1;
      i__19807__auto___21869 = G__21870;
      continue;
    } else {
    }
    break;
  }
  var G__21867 = args21861.length;
  switch(G__21867) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21861.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__21872 = ntcoll;
      var G__21873 = cljs.core.first(kvs);
      var G__21874 = cljs.core.second(kvs);
      var G__21875 = cljs.core.nnext(kvs);
      tcoll = G__21872;
      key = G__21873;
      val = G__21874;
      kvs = G__21875;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq21862) {
  var G__21863 = cljs.core.first(seq21862);
  var seq21862__$1 = cljs.core.next(seq21862);
  var G__21864 = cljs.core.first(seq21862__$1);
  var seq21862__$2 = cljs.core.next(seq21862__$1);
  var G__21865 = cljs.core.first(seq21862__$2);
  var seq21862__$3 = cljs.core.next(seq21862__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21863, G__21864, G__21865, seq21862__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var args21876 = [];
  var len__19806__auto___21882 = arguments.length;
  var i__19807__auto___21883 = 0;
  while (true) {
    if (i__19807__auto___21883 < len__19806__auto___21882) {
      args21876.push(arguments[i__19807__auto___21883]);
      var G__21884 = i__19807__auto___21883 + 1;
      i__19807__auto___21883 = G__21884;
      continue;
    } else {
    }
    break;
  }
  var G__21881 = args21876.length;
  switch(G__21881) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21876.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__21886 = ntcoll;
      var G__21887 = cljs.core.first(ks);
      var G__21888 = cljs.core.next(ks);
      tcoll = G__21886;
      key = G__21887;
      ks = G__21888;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq21877) {
  var G__21878 = cljs.core.first(seq21877);
  var seq21877__$1 = cljs.core.next(seq21877);
  var G__21879 = cljs.core.first(seq21877__$1);
  var seq21877__$2 = cljs.core.next(seq21877__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21878, G__21879, seq21877__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var args21889 = [];
  var len__19806__auto___21895 = arguments.length;
  var i__19807__auto___21896 = 0;
  while (true) {
    if (i__19807__auto___21896 < len__19806__auto___21895) {
      args21889.push(arguments[i__19807__auto___21896]);
      var G__21897 = i__19807__auto___21896 + 1;
      i__19807__auto___21896 = G__21897;
      continue;
    } else {
    }
    break;
  }
  var G__21894 = args21889.length;
  switch(G__21894) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21889.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__21899 = ntcoll;
      var G__21900 = cljs.core.first(vals);
      var G__21901 = cljs.core.next(vals);
      tcoll = G__21899;
      val = G__21900;
      vals = G__21901;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq21890) {
  var G__21891 = cljs.core.first(seq21890);
  var seq21890__$1 = cljs.core.next(seq21890);
  var G__21892 = cljs.core.first(seq21890__$1);
  var seq21890__$2 = cljs.core.next(seq21890__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__21891, G__21892, seq21890__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a19695 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a19695);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a19695) : f.call(null, a19695);
      }
    } else {
      var b19696 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a19695, b19696);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a19695, b19696) : f.call(null, a19695, b19696);
        }
      } else {
        var c19697 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a19695, b19696, c19697);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a19695, b19696, c19697) : f.call(null, a19695, b19696, c19697);
          }
        } else {
          var d19698 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a19695, b19696, c19697, d19698);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a19695, b19696, c19697, d19698) : f.call(null, a19695, b19696, c19697, d19698);
            }
          } else {
            var e19699 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a19695, b19696, c19697, d19698, e19699);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a19695, b19696, c19697, d19698, e19699) : f.call(null, a19695, b19696, c19697, d19698, e19699);
              }
            } else {
              var f19700 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a19695, b19696, c19697, d19698, e19699, f19700);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a19695, b19696, c19697, d19698, e19699, f19700) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700);
                }
              } else {
                var g19701 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a19695, b19696, c19697, d19698, e19699, f19700, g19701);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a19695, b19696, c19697, d19698, e19699, f19700, g19701) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701);
                  }
                } else {
                  var h19702 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702);
                    }
                  } else {
                    var i19703 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703);
                      }
                    } else {
                      var j19704 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704);
                        }
                      } else {
                        var k19705 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705);
                          }
                        } else {
                          var l19706 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706);
                            }
                          } else {
                            var m19707 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707);
                              }
                            } else {
                              var n19708 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708);
                                }
                              } else {
                                var o19709 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709);
                                  }
                                } else {
                                  var p19710 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710);
                                    }
                                  } else {
                                    var q19711 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711);
                                      }
                                    } else {
                                      var r19712 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712);
                                        }
                                      } else {
                                        var s19713 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712, s19713);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712, s19713) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712, s19713);
                                          }
                                        } else {
                                          var t19714 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712, s19713, t19714);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712, s19713, t19714) : f.call(null, a19695, b19696, c19697, d19698, e19699, f19700, g19701, h19702, i19703, j19704, k19705, l19706, m19707, n19708, o19709, p19710, q19711, r19712, s19713, t19714);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply(var_args) {
  var args21902 = [];
  var len__19806__auto___21911 = arguments.length;
  var i__19807__auto___21912 = 0;
  while (true) {
    if (i__19807__auto___21912 < len__19806__auto___21911) {
      args21902.push(arguments[i__19807__auto___21912]);
      var G__21913 = i__19807__auto___21912 + 1;
      i__19807__auto___21912 = G__21913;
      continue;
    } else {
    }
    break;
  }
  var G__21910 = args21902.length;
  switch(G__21910) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21902.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__19825__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq21903) {
  var G__21904 = cljs.core.first(seq21903);
  var seq21903__$1 = cljs.core.next(seq21903);
  var G__21905 = cljs.core.first(seq21903__$1);
  var seq21903__$2 = cljs.core.next(seq21903__$1);
  var G__21906 = cljs.core.first(seq21903__$2);
  var seq21903__$3 = cljs.core.next(seq21903__$2);
  var G__21907 = cljs.core.first(seq21903__$3);
  var seq21903__$4 = cljs.core.next(seq21903__$3);
  var G__21908 = cljs.core.first(seq21903__$4);
  var seq21903__$5 = cljs.core.next(seq21903__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__21904, G__21905, G__21906, G__21907, G__21908, seq21903__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var args21915 = [];
  var len__19806__auto___21940 = arguments.length;
  var i__19807__auto___21941 = 0;
  while (true) {
    if (i__19807__auto___21941 < len__19806__auto___21940) {
      args21915.push(arguments[i__19807__auto___21941]);
      var G__21942 = i__19807__auto___21941 + 1;
      i__19807__auto___21941 = G__21942;
      continue;
    } else {
    }
    break;
  }
  var G__21924 = args21915.length;
  switch(G__21924) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21915.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__19825__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__21925 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21925) : f.call(null, G__21925);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__21926 = cljs.core.meta(obj);
    var G__21927 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21926, G__21927) : f.call(null, G__21926, G__21927);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__21928 = cljs.core.meta(obj);
    var G__21929 = a;
    var G__21930 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21928, G__21929, G__21930) : f.call(null, G__21928, G__21929, G__21930);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__21931 = cljs.core.meta(obj);
    var G__21932 = a;
    var G__21933 = b;
    var G__21934 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21931, G__21932, G__21933, G__21934) : f.call(null, G__21931, G__21932, G__21933, G__21934);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__21935 = cljs.core.meta(obj);
    var G__21936 = a;
    var G__21937 = b;
    var G__21938 = c;
    var G__21939 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__21935, G__21936, G__21937, G__21938, G__21939) : f.call(null, G__21935, G__21936, G__21937, G__21938, G__21939);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq21916) {
  var G__21917 = cljs.core.first(seq21916);
  var seq21916__$1 = cljs.core.next(seq21916);
  var G__21918 = cljs.core.first(seq21916__$1);
  var seq21916__$2 = cljs.core.next(seq21916__$1);
  var G__21919 = cljs.core.first(seq21916__$2);
  var seq21916__$3 = cljs.core.next(seq21916__$2);
  var G__21920 = cljs.core.first(seq21916__$3);
  var seq21916__$4 = cljs.core.next(seq21916__$3);
  var G__21921 = cljs.core.first(seq21916__$4);
  var seq21916__$5 = cljs.core.next(seq21916__$4);
  var G__21922 = cljs.core.first(seq21916__$5);
  var seq21916__$6 = cljs.core.next(seq21916__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__21917, G__21918, G__21919, G__21920, G__21921, G__21922, seq21916__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var args21944 = [];
  var len__19806__auto___21950 = arguments.length;
  var i__19807__auto___21951 = 0;
  while (true) {
    if (i__19807__auto___21951 < len__19806__auto___21950) {
      args21944.push(arguments[i__19807__auto___21951]);
      var G__21952 = i__19807__auto___21951 + 1;
      i__19807__auto___21951 = G__21952;
      continue;
    } else {
    }
    break;
  }
  var G__21949 = args21944.length;
  switch(G__21949) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args21944.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq21945) {
  var G__21946 = cljs.core.first(seq21945);
  var seq21945__$1 = cljs.core.next(seq21945);
  var G__21947 = cljs.core.first(seq21945__$1);
  var seq21945__$2 = cljs.core.next(seq21945__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__21946, G__21947, seq21945__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t_cljs$core21957 !== "undefined") {
  } else {
    cljs.core.t_cljs$core21957 = function(nil_iter, meta21958) {
      this.nil_iter = nil_iter;
      this.meta21958 = meta21958;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core21957.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_21959, meta21958__$1) {
      var self__ = this;
      var _21959__$1 = this;
      return new cljs.core.t_cljs$core21957(self__.nil_iter, meta21958__$1);
    };
    cljs.core.t_cljs$core21957.prototype.cljs$core$IMeta$_meta$arity$1 = function(_21959) {
      var self__ = this;
      var _21959__$1 = this;
      return self__.meta21958;
    };
    cljs.core.t_cljs$core21957.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core21957.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core21957.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core21957.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta21958", "meta21958", -2006315866, null)], 
      null);
    };
    cljs.core.t_cljs$core21957.cljs$lang$type = true;
    cljs.core.t_cljs$core21957.cljs$lang$ctorStr = "cljs.core/t_cljs$core21957";
    cljs.core.t_cljs$core21957.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write(writer__19343__auto__, "cljs.core/t_cljs$core21957");
    };
    cljs.core.__GT_t_cljs$core21957 = function cljs$core$nil_iter_$___GT_t_cljs$core21957(nil_iter__$1, meta21958) {
      return new cljs.core.t_cljs$core21957(nil_iter__$1, meta21958);
    };
  }
  return new cljs.core.t_cljs$core21957(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = !(lt.stepper == null);
      if (and__18724__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__18724__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__21960 = lt;
        var G__21961 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__21960, G__21961) : self__.xform.call(null, G__21960, G__21961);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__21962 = cljs.core.next(iters__$1);
        iters__$1 = G__21962;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__19651__auto___21963 = self__.iters.length;
  var i_21964 = 0;
  while (true) {
    if (i_21964 < n__19651__auto___21963) {
      self__.nexts[i_21964] = self__.iters[i_21964].next();
      var G__21965 = i_21964 + 1;
      i_21964 = G__21965;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = !(lt.stepper == null);
      if (and__18724__auto__) {
        return this$.hasNext();
      } else {
        return and__18724__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper(var_args) {
  var args21966 = [];
  var len__19806__auto___21969 = arguments.length;
  var i__19807__auto___21970 = 0;
  while (true) {
    if (i__19807__auto___21970 < len__19806__auto___21969) {
      args21966.push(arguments[i__19807__auto___21970]);
      var G__21971 = i__19807__auto___21970 + 1;
      i__19807__auto___21970 = G__21971;
      continue;
    } else {
    }
    break;
  }
  var G__21968 = args21966.length;
  switch(G__21968) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args21966.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.indexOf = function() {
  var G__21973 = null;
  var G__21973__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__21973__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21973 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21973__1.call(this, x);
      case 2:
        return G__21973__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21973.cljs$core$IFn$_invoke$arity$1 = G__21973__1;
  G__21973.cljs$core$IFn$_invoke$arity$2 = G__21973__2;
  return G__21973;
}();
cljs.core.LazyTransformer.prototype.lastIndexOf = function() {
  var G__21974 = null;
  var G__21974__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__21974__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__21974 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__21974__1.call(this, x);
      case 2:
        return G__21974__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__21974.cljs$core$IFn$_invoke$arity$1 = G__21974__1;
  G__21974.cljs$core$IFn$_invoke$arity$2 = G__21974__2;
  return G__21974;
}();
cljs.core.LazyTransformer.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__21975_21979 = cljs.core.seq(colls);
  var chunk__21976_21980 = null;
  var count__21977_21981 = 0;
  var i__21978_21982 = 0;
  while (true) {
    if (i__21978_21982 < count__21977_21981) {
      var coll_21983 = chunk__21976_21980.cljs$core$IIndexed$_nth$arity$2(null, i__21978_21982);
      iters.push(cljs.core.iter(coll_21983));
      var G__21984 = seq__21975_21979;
      var G__21985 = chunk__21976_21980;
      var G__21986 = count__21977_21981;
      var G__21987 = i__21978_21982 + 1;
      seq__21975_21979 = G__21984;
      chunk__21976_21980 = G__21985;
      count__21977_21981 = G__21986;
      i__21978_21982 = G__21987;
      continue;
    } else {
      var temp__4657__auto___21988 = cljs.core.seq(seq__21975_21979);
      if (temp__4657__auto___21988) {
        var seq__21975_21989__$1 = temp__4657__auto___21988;
        if (cljs.core.chunked_seq_QMARK_(seq__21975_21989__$1)) {
          var c__19547__auto___21990 = cljs.core.chunk_first(seq__21975_21989__$1);
          var G__21991 = cljs.core.chunk_rest(seq__21975_21989__$1);
          var G__21992 = c__19547__auto___21990;
          var G__21993 = cljs.core.count(c__19547__auto___21990);
          var G__21994 = 0;
          seq__21975_21979 = G__21991;
          chunk__21976_21980 = G__21992;
          count__21977_21981 = G__21993;
          i__21978_21982 = G__21994;
          continue;
        } else {
          var coll_21995 = cljs.core.first(seq__21975_21989__$1);
          iters.push(cljs.core.iter(coll_21995));
          var G__21996 = cljs.core.next(seq__21975_21989__$1);
          var G__21997 = null;
          var G__21998 = 0;
          var G__21999 = 0;
          seq__21975_21979 = G__21996;
          chunk__21976_21980 = G__21997;
          count__21977_21981 = G__21998;
          i__21978_21982 = G__21999;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var args22000 = [];
  var len__19806__auto___22006 = arguments.length;
  var i__19807__auto___22007 = 0;
  while (true) {
    if (i__19807__auto___22007 < len__19806__auto___22006) {
      args22000.push(arguments[i__19807__auto___22007]);
      var G__22008 = i__19807__auto___22007 + 1;
      i__19807__auto___22007 = G__22008;
      continue;
    } else {
    }
    break;
  }
  var G__22005 = args22000.length;
  switch(G__22005) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22000.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__18736__auto__ = cljs.core.seq(coll);
    if (or__18736__auto__) {
      return or__18736__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq22001) {
  var G__22002 = cljs.core.first(seq22001);
  var seq22001__$1 = cljs.core.next(seq22001);
  var G__22003 = cljs.core.first(seq22001__$1);
  var seq22001__$2 = cljs.core.next(seq22001__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__22002, G__22003, seq22001__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__22011 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22011) : pred.call(null, G__22011);
      }())) {
        var G__22012 = pred;
        var G__22013 = cljs.core.next(coll);
        pred = G__22012;
        coll = G__22013;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__18736__auto__ = function() {
        var G__22017 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22017) : pred.call(null, G__22017);
      }();
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var G__22018 = pred;
        var G__22019 = cljs.core.next(coll);
        pred = G__22018;
        coll = G__22019;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__22020 = null;
    var G__22020__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__22020__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__22020__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__22020__3 = function() {
      var G__22021__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__22021 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__22022__i = 0, G__22022__a = new Array(arguments.length - 2);
          while (G__22022__i < G__22022__a.length) {
            G__22022__a[G__22022__i] = arguments[G__22022__i + 2];
            ++G__22022__i;
          }
          zs = new cljs.core.IndexedSeq(G__22022__a, 0);
        }
        return G__22021__delegate.call(this, x, y, zs);
      };
      G__22021.cljs$lang$maxFixedArity = 2;
      G__22021.cljs$lang$applyTo = function(arglist__22023) {
        var x = cljs.core.first(arglist__22023);
        arglist__22023 = cljs.core.next(arglist__22023);
        var y = cljs.core.first(arglist__22023);
        var zs = cljs.core.rest(arglist__22023);
        return G__22021__delegate(x, y, zs);
      };
      G__22021.cljs$core$IFn$_invoke$arity$variadic = G__22021__delegate;
      return G__22021;
    }();
    G__22020 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__22020__0.call(this);
        case 1:
          return G__22020__1.call(this, x);
        case 2:
          return G__22020__2.call(this, x, y);
        default:
          var G__22024 = null;
          if (arguments.length > 2) {
            var G__22025__i = 0, G__22025__a = new Array(arguments.length - 2);
            while (G__22025__i < G__22025__a.length) {
              G__22025__a[G__22025__i] = arguments[G__22025__i + 2];
              ++G__22025__i;
            }
            G__22024 = new cljs.core.IndexedSeq(G__22025__a, 0);
          }
          return G__22020__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__22024);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22020.cljs$lang$maxFixedArity = 2;
    G__22020.cljs$lang$applyTo = G__22020__3.cljs$lang$applyTo;
    G__22020.cljs$core$IFn$_invoke$arity$0 = G__22020__0;
    G__22020.cljs$core$IFn$_invoke$arity$1 = G__22020__1;
    G__22020.cljs$core$IFn$_invoke$arity$2 = G__22020__2;
    G__22020.cljs$core$IFn$_invoke$arity$variadic = G__22020__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__22020;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__22026__delegate = function(args) {
      return x;
    };
    var G__22026 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__22027__i = 0, G__22027__a = new Array(arguments.length - 0);
        while (G__22027__i < G__22027__a.length) {
          G__22027__a[G__22027__i] = arguments[G__22027__i + 0];
          ++G__22027__i;
        }
        args = new cljs.core.IndexedSeq(G__22027__a, 0);
      }
      return G__22026__delegate.call(this, args);
    };
    G__22026.cljs$lang$maxFixedArity = 0;
    G__22026.cljs$lang$applyTo = function(arglist__22028) {
      var args = cljs.core.seq(arglist__22028);
      return G__22026__delegate(args);
    };
    G__22026.cljs$core$IFn$_invoke$arity$variadic = G__22026__delegate;
    return G__22026;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var args22029 = [];
  var len__19806__auto___22056 = arguments.length;
  var i__19807__auto___22057 = 0;
  while (true) {
    if (i__19807__auto___22057 < len__19806__auto___22056) {
      args22029.push(arguments[i__19807__auto___22057]);
      var G__22058 = i__19807__auto___22057 + 1;
      i__19807__auto___22057 = G__22058;
      continue;
    } else {
    }
    break;
  }
  var G__22035 = args22029.length;
  switch(G__22035) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22029.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__22060 = null;
    var G__22060__0 = function() {
      var G__22036 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22036) : f.call(null, G__22036);
    };
    var G__22060__1 = function(x) {
      var G__22037 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22037) : f.call(null, G__22037);
    };
    var G__22060__2 = function(x, y) {
      var G__22038 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22038) : f.call(null, G__22038);
    };
    var G__22060__3 = function(x, y, z) {
      var G__22039 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22039) : f.call(null, G__22039);
    };
    var G__22060__4 = function() {
      var G__22061__delegate = function(x, y, z, args) {
        var G__22040 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22040) : f.call(null, G__22040);
      };
      var G__22061 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22062__i = 0, G__22062__a = new Array(arguments.length - 3);
          while (G__22062__i < G__22062__a.length) {
            G__22062__a[G__22062__i] = arguments[G__22062__i + 3];
            ++G__22062__i;
          }
          args = new cljs.core.IndexedSeq(G__22062__a, 0);
        }
        return G__22061__delegate.call(this, x, y, z, args);
      };
      G__22061.cljs$lang$maxFixedArity = 3;
      G__22061.cljs$lang$applyTo = function(arglist__22063) {
        var x = cljs.core.first(arglist__22063);
        arglist__22063 = cljs.core.next(arglist__22063);
        var y = cljs.core.first(arglist__22063);
        arglist__22063 = cljs.core.next(arglist__22063);
        var z = cljs.core.first(arglist__22063);
        var args = cljs.core.rest(arglist__22063);
        return G__22061__delegate(x, y, z, args);
      };
      G__22061.cljs$core$IFn$_invoke$arity$variadic = G__22061__delegate;
      return G__22061;
    }();
    G__22060 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22060__0.call(this);
        case 1:
          return G__22060__1.call(this, x);
        case 2:
          return G__22060__2.call(this, x, y);
        case 3:
          return G__22060__3.call(this, x, y, z);
        default:
          var G__22064 = null;
          if (arguments.length > 3) {
            var G__22065__i = 0, G__22065__a = new Array(arguments.length - 3);
            while (G__22065__i < G__22065__a.length) {
              G__22065__a[G__22065__i] = arguments[G__22065__i + 3];
              ++G__22065__i;
            }
            G__22064 = new cljs.core.IndexedSeq(G__22065__a, 0);
          }
          return G__22060__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22064);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22060.cljs$lang$maxFixedArity = 3;
    G__22060.cljs$lang$applyTo = G__22060__4.cljs$lang$applyTo;
    G__22060.cljs$core$IFn$_invoke$arity$0 = G__22060__0;
    G__22060.cljs$core$IFn$_invoke$arity$1 = G__22060__1;
    G__22060.cljs$core$IFn$_invoke$arity$2 = G__22060__2;
    G__22060.cljs$core$IFn$_invoke$arity$3 = G__22060__3;
    G__22060.cljs$core$IFn$_invoke$arity$variadic = G__22060__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22060;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__22066 = null;
    var G__22066__0 = function() {
      var G__22042 = function() {
        var G__22043 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22043) : g.call(null, G__22043);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22042) : f.call(null, G__22042);
    };
    var G__22066__1 = function(x) {
      var G__22045 = function() {
        var G__22046 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22046) : g.call(null, G__22046);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22045) : f.call(null, G__22045);
    };
    var G__22066__2 = function(x, y) {
      var G__22048 = function() {
        var G__22049 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22049) : g.call(null, G__22049);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22048) : f.call(null, G__22048);
    };
    var G__22066__3 = function(x, y, z) {
      var G__22051 = function() {
        var G__22052 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22052) : g.call(null, G__22052);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22051) : f.call(null, G__22051);
    };
    var G__22066__4 = function() {
      var G__22067__delegate = function(x, y, z, args) {
        var G__22054 = function() {
          var G__22055 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22055) : g.call(null, G__22055);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22054) : f.call(null, G__22054);
      };
      var G__22067 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22068__i = 0, G__22068__a = new Array(arguments.length - 3);
          while (G__22068__i < G__22068__a.length) {
            G__22068__a[G__22068__i] = arguments[G__22068__i + 3];
            ++G__22068__i;
          }
          args = new cljs.core.IndexedSeq(G__22068__a, 0);
        }
        return G__22067__delegate.call(this, x, y, z, args);
      };
      G__22067.cljs$lang$maxFixedArity = 3;
      G__22067.cljs$lang$applyTo = function(arglist__22069) {
        var x = cljs.core.first(arglist__22069);
        arglist__22069 = cljs.core.next(arglist__22069);
        var y = cljs.core.first(arglist__22069);
        arglist__22069 = cljs.core.next(arglist__22069);
        var z = cljs.core.first(arglist__22069);
        var args = cljs.core.rest(arglist__22069);
        return G__22067__delegate(x, y, z, args);
      };
      G__22067.cljs$core$IFn$_invoke$arity$variadic = G__22067__delegate;
      return G__22067;
    }();
    G__22066 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22066__0.call(this);
        case 1:
          return G__22066__1.call(this, x);
        case 2:
          return G__22066__2.call(this, x, y);
        case 3:
          return G__22066__3.call(this, x, y, z);
        default:
          var G__22070 = null;
          if (arguments.length > 3) {
            var G__22071__i = 0, G__22071__a = new Array(arguments.length - 3);
            while (G__22071__i < G__22071__a.length) {
              G__22071__a[G__22071__i] = arguments[G__22071__i + 3];
              ++G__22071__i;
            }
            G__22070 = new cljs.core.IndexedSeq(G__22071__a, 0);
          }
          return G__22066__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22070);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22066.cljs$lang$maxFixedArity = 3;
    G__22066.cljs$lang$applyTo = G__22066__4.cljs$lang$applyTo;
    G__22066.cljs$core$IFn$_invoke$arity$0 = G__22066__0;
    G__22066.cljs$core$IFn$_invoke$arity$1 = G__22066__1;
    G__22066.cljs$core$IFn$_invoke$arity$2 = G__22066__2;
    G__22066.cljs$core$IFn$_invoke$arity$3 = G__22066__3;
    G__22066.cljs$core$IFn$_invoke$arity$variadic = G__22066__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22066;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__22072__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__22073 = cljs.core.first(fs__$2).call(null, ret);
            var G__22074 = cljs.core.next(fs__$2);
            ret = G__22073;
            fs__$2 = G__22074;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__22072 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__22075__i = 0, G__22075__a = new Array(arguments.length - 0);
          while (G__22075__i < G__22075__a.length) {
            G__22075__a[G__22075__i] = arguments[G__22075__i + 0];
            ++G__22075__i;
          }
          args = new cljs.core.IndexedSeq(G__22075__a, 0);
        }
        return G__22072__delegate.call(this, args);
      };
      G__22072.cljs$lang$maxFixedArity = 0;
      G__22072.cljs$lang$applyTo = function(arglist__22076) {
        var args = cljs.core.seq(arglist__22076);
        return G__22072__delegate(args);
      };
      G__22072.cljs$core$IFn$_invoke$arity$variadic = G__22072__delegate;
      return G__22072;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq22030) {
  var G__22031 = cljs.core.first(seq22030);
  var seq22030__$1 = cljs.core.next(seq22030);
  var G__22032 = cljs.core.first(seq22030__$1);
  var seq22030__$2 = cljs.core.next(seq22030__$1);
  var G__22033 = cljs.core.first(seq22030__$2);
  var seq22030__$3 = cljs.core.next(seq22030__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__22031, G__22032, G__22033, seq22030__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var args22077 = [];
  var len__19806__auto___22085 = arguments.length;
  var i__19807__auto___22086 = 0;
  while (true) {
    if (i__19807__auto___22086 < len__19806__auto___22085) {
      args22077.push(arguments[i__19807__auto___22086]);
      var G__22087 = i__19807__auto___22086 + 1;
      i__19807__auto___22086 = G__22087;
      continue;
    } else {
    }
    break;
  }
  var G__22084 = args22077.length;
  switch(G__22084) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22077.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__19825__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__22089 = null;
    var G__22089__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__22089__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__22089__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__22089__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__22089__4 = function() {
      var G__22090__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__22090 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22091__i = 0, G__22091__a = new Array(arguments.length - 3);
          while (G__22091__i < G__22091__a.length) {
            G__22091__a[G__22091__i] = arguments[G__22091__i + 3];
            ++G__22091__i;
          }
          args = new cljs.core.IndexedSeq(G__22091__a, 0);
        }
        return G__22090__delegate.call(this, x, y, z, args);
      };
      G__22090.cljs$lang$maxFixedArity = 3;
      G__22090.cljs$lang$applyTo = function(arglist__22092) {
        var x = cljs.core.first(arglist__22092);
        arglist__22092 = cljs.core.next(arglist__22092);
        var y = cljs.core.first(arglist__22092);
        arglist__22092 = cljs.core.next(arglist__22092);
        var z = cljs.core.first(arglist__22092);
        var args = cljs.core.rest(arglist__22092);
        return G__22090__delegate(x, y, z, args);
      };
      G__22090.cljs$core$IFn$_invoke$arity$variadic = G__22090__delegate;
      return G__22090;
    }();
    G__22089 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22089__0.call(this);
        case 1:
          return G__22089__1.call(this, x);
        case 2:
          return G__22089__2.call(this, x, y);
        case 3:
          return G__22089__3.call(this, x, y, z);
        default:
          var G__22093 = null;
          if (arguments.length > 3) {
            var G__22094__i = 0, G__22094__a = new Array(arguments.length - 3);
            while (G__22094__i < G__22094__a.length) {
              G__22094__a[G__22094__i] = arguments[G__22094__i + 3];
              ++G__22094__i;
            }
            G__22093 = new cljs.core.IndexedSeq(G__22094__a, 0);
          }
          return G__22089__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22093);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22089.cljs$lang$maxFixedArity = 3;
    G__22089.cljs$lang$applyTo = G__22089__4.cljs$lang$applyTo;
    G__22089.cljs$core$IFn$_invoke$arity$0 = G__22089__0;
    G__22089.cljs$core$IFn$_invoke$arity$1 = G__22089__1;
    G__22089.cljs$core$IFn$_invoke$arity$2 = G__22089__2;
    G__22089.cljs$core$IFn$_invoke$arity$3 = G__22089__3;
    G__22089.cljs$core$IFn$_invoke$arity$variadic = G__22089__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22089;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__22095 = null;
    var G__22095__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__22095__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__22095__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__22095__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__22095__4 = function() {
      var G__22096__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__22096 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22097__i = 0, G__22097__a = new Array(arguments.length - 3);
          while (G__22097__i < G__22097__a.length) {
            G__22097__a[G__22097__i] = arguments[G__22097__i + 3];
            ++G__22097__i;
          }
          args = new cljs.core.IndexedSeq(G__22097__a, 0);
        }
        return G__22096__delegate.call(this, x, y, z, args);
      };
      G__22096.cljs$lang$maxFixedArity = 3;
      G__22096.cljs$lang$applyTo = function(arglist__22098) {
        var x = cljs.core.first(arglist__22098);
        arglist__22098 = cljs.core.next(arglist__22098);
        var y = cljs.core.first(arglist__22098);
        arglist__22098 = cljs.core.next(arglist__22098);
        var z = cljs.core.first(arglist__22098);
        var args = cljs.core.rest(arglist__22098);
        return G__22096__delegate(x, y, z, args);
      };
      G__22096.cljs$core$IFn$_invoke$arity$variadic = G__22096__delegate;
      return G__22096;
    }();
    G__22095 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22095__0.call(this);
        case 1:
          return G__22095__1.call(this, x);
        case 2:
          return G__22095__2.call(this, x, y);
        case 3:
          return G__22095__3.call(this, x, y, z);
        default:
          var G__22099 = null;
          if (arguments.length > 3) {
            var G__22100__i = 0, G__22100__a = new Array(arguments.length - 3);
            while (G__22100__i < G__22100__a.length) {
              G__22100__a[G__22100__i] = arguments[G__22100__i + 3];
              ++G__22100__i;
            }
            G__22099 = new cljs.core.IndexedSeq(G__22100__a, 0);
          }
          return G__22095__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22099);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22095.cljs$lang$maxFixedArity = 3;
    G__22095.cljs$lang$applyTo = G__22095__4.cljs$lang$applyTo;
    G__22095.cljs$core$IFn$_invoke$arity$0 = G__22095__0;
    G__22095.cljs$core$IFn$_invoke$arity$1 = G__22095__1;
    G__22095.cljs$core$IFn$_invoke$arity$2 = G__22095__2;
    G__22095.cljs$core$IFn$_invoke$arity$3 = G__22095__3;
    G__22095.cljs$core$IFn$_invoke$arity$variadic = G__22095__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22095;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__22101 = null;
    var G__22101__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__22101__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__22101__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__22101__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__22101__4 = function() {
      var G__22102__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__22102 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22103__i = 0, G__22103__a = new Array(arguments.length - 3);
          while (G__22103__i < G__22103__a.length) {
            G__22103__a[G__22103__i] = arguments[G__22103__i + 3];
            ++G__22103__i;
          }
          args = new cljs.core.IndexedSeq(G__22103__a, 0);
        }
        return G__22102__delegate.call(this, x, y, z, args);
      };
      G__22102.cljs$lang$maxFixedArity = 3;
      G__22102.cljs$lang$applyTo = function(arglist__22104) {
        var x = cljs.core.first(arglist__22104);
        arglist__22104 = cljs.core.next(arglist__22104);
        var y = cljs.core.first(arglist__22104);
        arglist__22104 = cljs.core.next(arglist__22104);
        var z = cljs.core.first(arglist__22104);
        var args = cljs.core.rest(arglist__22104);
        return G__22102__delegate(x, y, z, args);
      };
      G__22102.cljs$core$IFn$_invoke$arity$variadic = G__22102__delegate;
      return G__22102;
    }();
    G__22101 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__22101__0.call(this);
        case 1:
          return G__22101__1.call(this, x);
        case 2:
          return G__22101__2.call(this, x, y);
        case 3:
          return G__22101__3.call(this, x, y, z);
        default:
          var G__22105 = null;
          if (arguments.length > 3) {
            var G__22106__i = 0, G__22106__a = new Array(arguments.length - 3);
            while (G__22106__i < G__22106__a.length) {
              G__22106__a[G__22106__i] = arguments[G__22106__i + 3];
              ++G__22106__i;
            }
            G__22105 = new cljs.core.IndexedSeq(G__22106__a, 0);
          }
          return G__22101__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22105);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22101.cljs$lang$maxFixedArity = 3;
    G__22101.cljs$lang$applyTo = G__22101__4.cljs$lang$applyTo;
    G__22101.cljs$core$IFn$_invoke$arity$0 = G__22101__0;
    G__22101.cljs$core$IFn$_invoke$arity$1 = G__22101__1;
    G__22101.cljs$core$IFn$_invoke$arity$2 = G__22101__2;
    G__22101.cljs$core$IFn$_invoke$arity$3 = G__22101__3;
    G__22101.cljs$core$IFn$_invoke$arity$variadic = G__22101__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22101;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__22107__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__22107 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__22108__i = 0, G__22108__a = new Array(arguments.length - 0);
        while (G__22108__i < G__22108__a.length) {
          G__22108__a[G__22108__i] = arguments[G__22108__i + 0];
          ++G__22108__i;
        }
        args = new cljs.core.IndexedSeq(G__22108__a, 0);
      }
      return G__22107__delegate.call(this, args);
    };
    G__22107.cljs$lang$maxFixedArity = 0;
    G__22107.cljs$lang$applyTo = function(arglist__22109) {
      var args = cljs.core.seq(arglist__22109);
      return G__22107__delegate(args);
    };
    G__22107.cljs$core$IFn$_invoke$arity$variadic = G__22107__delegate;
    return G__22107;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq22078) {
  var G__22079 = cljs.core.first(seq22078);
  var seq22078__$1 = cljs.core.next(seq22078);
  var G__22080 = cljs.core.first(seq22078__$1);
  var seq22078__$2 = cljs.core.next(seq22078__$1);
  var G__22081 = cljs.core.first(seq22078__$2);
  var seq22078__$3 = cljs.core.next(seq22078__$2);
  var G__22082 = cljs.core.first(seq22078__$3);
  var seq22078__$4 = cljs.core.next(seq22078__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__22079, G__22080, G__22081, G__22082, seq22078__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var args22110 = [];
  var len__19806__auto___22129 = arguments.length;
  var i__19807__auto___22130 = 0;
  while (true) {
    if (i__19807__auto___22130 < len__19806__auto___22129) {
      args22110.push(arguments[i__19807__auto___22130]);
      var G__22131 = i__19807__auto___22130 + 1;
      i__19807__auto___22130 = G__22131;
      continue;
    } else {
    }
    break;
  }
  var G__22112 = args22110.length;
  switch(G__22112) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22110.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__22133 = null;
    var G__22133__1 = function(a) {
      var G__22113 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22113) : f.call(null, G__22113);
    };
    var G__22133__2 = function(a, b) {
      var G__22114 = a == null ? x : a;
      var G__22115 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22114, G__22115) : f.call(null, G__22114, G__22115);
    };
    var G__22133__3 = function(a, b, c) {
      var G__22116 = a == null ? x : a;
      var G__22117 = b;
      var G__22118 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22116, G__22117, G__22118) : f.call(null, G__22116, G__22117, G__22118);
    };
    var G__22133__4 = function() {
      var G__22134__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__22134 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__22135__i = 0, G__22135__a = new Array(arguments.length - 3);
          while (G__22135__i < G__22135__a.length) {
            G__22135__a[G__22135__i] = arguments[G__22135__i + 3];
            ++G__22135__i;
          }
          ds = new cljs.core.IndexedSeq(G__22135__a, 0);
        }
        return G__22134__delegate.call(this, a, b, c, ds);
      };
      G__22134.cljs$lang$maxFixedArity = 3;
      G__22134.cljs$lang$applyTo = function(arglist__22136) {
        var a = cljs.core.first(arglist__22136);
        arglist__22136 = cljs.core.next(arglist__22136);
        var b = cljs.core.first(arglist__22136);
        arglist__22136 = cljs.core.next(arglist__22136);
        var c = cljs.core.first(arglist__22136);
        var ds = cljs.core.rest(arglist__22136);
        return G__22134__delegate(a, b, c, ds);
      };
      G__22134.cljs$core$IFn$_invoke$arity$variadic = G__22134__delegate;
      return G__22134;
    }();
    G__22133 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__22133__1.call(this, a);
        case 2:
          return G__22133__2.call(this, a, b);
        case 3:
          return G__22133__3.call(this, a, b, c);
        default:
          var G__22137 = null;
          if (arguments.length > 3) {
            var G__22138__i = 0, G__22138__a = new Array(arguments.length - 3);
            while (G__22138__i < G__22138__a.length) {
              G__22138__a[G__22138__i] = arguments[G__22138__i + 3];
              ++G__22138__i;
            }
            G__22137 = new cljs.core.IndexedSeq(G__22138__a, 0);
          }
          return G__22133__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__22137);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22133.cljs$lang$maxFixedArity = 3;
    G__22133.cljs$lang$applyTo = G__22133__4.cljs$lang$applyTo;
    G__22133.cljs$core$IFn$_invoke$arity$1 = G__22133__1;
    G__22133.cljs$core$IFn$_invoke$arity$2 = G__22133__2;
    G__22133.cljs$core$IFn$_invoke$arity$3 = G__22133__3;
    G__22133.cljs$core$IFn$_invoke$arity$variadic = G__22133__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22133;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__22139 = null;
    var G__22139__2 = function(a, b) {
      var G__22119 = a == null ? x : a;
      var G__22120 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22119, G__22120) : f.call(null, G__22119, G__22120);
    };
    var G__22139__3 = function(a, b, c) {
      var G__22121 = a == null ? x : a;
      var G__22122 = b == null ? y : b;
      var G__22123 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22121, G__22122, G__22123) : f.call(null, G__22121, G__22122, G__22123);
    };
    var G__22139__4 = function() {
      var G__22140__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__22140 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__22141__i = 0, G__22141__a = new Array(arguments.length - 3);
          while (G__22141__i < G__22141__a.length) {
            G__22141__a[G__22141__i] = arguments[G__22141__i + 3];
            ++G__22141__i;
          }
          ds = new cljs.core.IndexedSeq(G__22141__a, 0);
        }
        return G__22140__delegate.call(this, a, b, c, ds);
      };
      G__22140.cljs$lang$maxFixedArity = 3;
      G__22140.cljs$lang$applyTo = function(arglist__22142) {
        var a = cljs.core.first(arglist__22142);
        arglist__22142 = cljs.core.next(arglist__22142);
        var b = cljs.core.first(arglist__22142);
        arglist__22142 = cljs.core.next(arglist__22142);
        var c = cljs.core.first(arglist__22142);
        var ds = cljs.core.rest(arglist__22142);
        return G__22140__delegate(a, b, c, ds);
      };
      G__22140.cljs$core$IFn$_invoke$arity$variadic = G__22140__delegate;
      return G__22140;
    }();
    G__22139 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__22139__2.call(this, a, b);
        case 3:
          return G__22139__3.call(this, a, b, c);
        default:
          var G__22143 = null;
          if (arguments.length > 3) {
            var G__22144__i = 0, G__22144__a = new Array(arguments.length - 3);
            while (G__22144__i < G__22144__a.length) {
              G__22144__a[G__22144__i] = arguments[G__22144__i + 3];
              ++G__22144__i;
            }
            G__22143 = new cljs.core.IndexedSeq(G__22144__a, 0);
          }
          return G__22139__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__22143);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22139.cljs$lang$maxFixedArity = 3;
    G__22139.cljs$lang$applyTo = G__22139__4.cljs$lang$applyTo;
    G__22139.cljs$core$IFn$_invoke$arity$2 = G__22139__2;
    G__22139.cljs$core$IFn$_invoke$arity$3 = G__22139__3;
    G__22139.cljs$core$IFn$_invoke$arity$variadic = G__22139__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22139;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__22145 = null;
    var G__22145__2 = function(a, b) {
      var G__22124 = a == null ? x : a;
      var G__22125 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22124, G__22125) : f.call(null, G__22124, G__22125);
    };
    var G__22145__3 = function(a, b, c) {
      var G__22126 = a == null ? x : a;
      var G__22127 = b == null ? y : b;
      var G__22128 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22126, G__22127, G__22128) : f.call(null, G__22126, G__22127, G__22128);
    };
    var G__22145__4 = function() {
      var G__22146__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__22146 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__22147__i = 0, G__22147__a = new Array(arguments.length - 3);
          while (G__22147__i < G__22147__a.length) {
            G__22147__a[G__22147__i] = arguments[G__22147__i + 3];
            ++G__22147__i;
          }
          ds = new cljs.core.IndexedSeq(G__22147__a, 0);
        }
        return G__22146__delegate.call(this, a, b, c, ds);
      };
      G__22146.cljs$lang$maxFixedArity = 3;
      G__22146.cljs$lang$applyTo = function(arglist__22148) {
        var a = cljs.core.first(arglist__22148);
        arglist__22148 = cljs.core.next(arglist__22148);
        var b = cljs.core.first(arglist__22148);
        arglist__22148 = cljs.core.next(arglist__22148);
        var c = cljs.core.first(arglist__22148);
        var ds = cljs.core.rest(arglist__22148);
        return G__22146__delegate(a, b, c, ds);
      };
      G__22146.cljs$core$IFn$_invoke$arity$variadic = G__22146__delegate;
      return G__22146;
    }();
    G__22145 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__22145__2.call(this, a, b);
        case 3:
          return G__22145__3.call(this, a, b, c);
        default:
          var G__22149 = null;
          if (arguments.length > 3) {
            var G__22150__i = 0, G__22150__a = new Array(arguments.length - 3);
            while (G__22150__i < G__22150__a.length) {
              G__22150__a[G__22150__i] = arguments[G__22150__i + 3];
              ++G__22150__i;
            }
            G__22149 = new cljs.core.IndexedSeq(G__22150__a, 0);
          }
          return G__22145__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__22149);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__22145.cljs$lang$maxFixedArity = 3;
    G__22145.cljs$lang$applyTo = G__22145__4.cljs$lang$applyTo;
    G__22145.cljs$core$IFn$_invoke$arity$2 = G__22145__2;
    G__22145.cljs$core$IFn$_invoke$arity$3 = G__22145__3;
    G__22145.cljs$core$IFn$_invoke$arity$variadic = G__22145__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__22145;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var args22151 = [];
  var len__19806__auto___22184 = arguments.length;
  var i__19807__auto___22185 = 0;
  while (true) {
    if (i__19807__auto___22185 < len__19806__auto___22184) {
      args22151.push(arguments[i__19807__auto___22185]);
      var G__22186 = i__19807__auto___22185 + 1;
      i__19807__auto___22185 = G__22186;
      continue;
    } else {
    }
    break;
  }
  var G__22153 = args22151.length;
  switch(G__22153) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22151.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__22188 = null;
        var G__22188__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22188__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22188__2 = function(result, input) {
          var G__22156 = result;
          var G__22157 = function() {
            var G__22158 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__22159 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22158, G__22159) : f.call(null, G__22158, G__22159);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22156, G__22157) : rf.call(null, G__22156, G__22157);
        };
        G__22188 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22188__0.call(this);
            case 1:
              return G__22188__1.call(this, result);
            case 2:
              return G__22188__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22188.cljs$core$IFn$_invoke$arity$0 = G__22188__0;
        G__22188.cljs$core$IFn$_invoke$arity$1 = G__22188__1;
        G__22188.cljs$core$IFn$_invoke$arity$2 = G__22188__2;
        return G__22188;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__19651__auto___22189 = size;
          var i_22190 = 0;
          while (true) {
            if (i_22190 < n__19651__auto___22189) {
              cljs.core.chunk_append(b, function() {
                var G__22180 = idx + i_22190;
                var G__22181 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22190);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22180, G__22181) : f.call(null, G__22180, G__22181);
              }());
              var G__22191 = i_22190 + 1;
              i_22190 = G__22191;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__22182 = idx;
            var G__22183 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22182, G__22183) : f.call(null, G__22182, G__22183);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var args22192 = [];
  var len__19806__auto___22197 = arguments.length;
  var i__19807__auto___22198 = 0;
  while (true) {
    if (i__19807__auto___22198 < len__19806__auto___22197) {
      args22192.push(arguments[i__19807__auto___22198]);
      var G__22199 = i__19807__auto___22198 + 1;
      i__19807__auto___22198 = G__22199;
      continue;
    } else {
    }
    break;
  }
  var G__22194 = args22192.length;
  switch(G__22194) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22192.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__22201 = null;
      var G__22201__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22201__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22201__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__22201 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22201__0.call(this);
          case 1:
            return G__22201__1.call(this, result);
          case 2:
            return G__22201__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22201.cljs$core$IFn$_invoke$arity$0 = G__22201__0;
      G__22201.cljs$core$IFn$_invoke$arity$1 = G__22201__1;
      G__22201.cljs$core$IFn$_invoke$arity$2 = G__22201__2;
      return G__22201;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__19651__auto___22202 = size;
        var i_22203 = 0;
        while (true) {
          if (i_22203 < n__19651__auto___22202) {
            var x_22204 = function() {
              var G__22195 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22203);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22195) : f.call(null, G__22195);
            }();
            if (x_22204 == null) {
            } else {
              cljs.core.chunk_append(b, x_22204);
            }
            var G__22205 = i_22203 + 1;
            i_22203 = G__22205;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__22196 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22196) : f.call(null, G__22196);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__22206 = cljs.core.seq(self__.watches);
  var chunk__22207 = null;
  var count__22208 = 0;
  var i__22209 = 0;
  while (true) {
    if (i__22209 < count__22208) {
      var vec__22210 = chunk__22207.cljs$core$IIndexed$_nth$arity$2(null, i__22209);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22210, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22210, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__22212 = seq__22206;
      var G__22213 = chunk__22207;
      var G__22214 = count__22208;
      var G__22215 = i__22209 + 1;
      seq__22206 = G__22212;
      chunk__22207 = G__22213;
      count__22208 = G__22214;
      i__22209 = G__22215;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22206);
      if (temp__4657__auto__) {
        var seq__22206__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22206__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__22206__$1);
          var G__22216 = cljs.core.chunk_rest(seq__22206__$1);
          var G__22217 = c__19547__auto__;
          var G__22218 = cljs.core.count(c__19547__auto__);
          var G__22219 = 0;
          seq__22206 = G__22216;
          chunk__22207 = G__22217;
          count__22208 = G__22218;
          i__22209 = G__22219;
          continue;
        } else {
          var vec__22211 = cljs.core.first(seq__22206__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22211, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22211, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__22220 = cljs.core.next(seq__22206__$1);
          var G__22221 = null;
          var G__22222 = 0;
          var G__22223 = 0;
          seq__22206 = G__22220;
          chunk__22207 = G__22221;
          count__22208 = G__22222;
          i__22209 = G__22223;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var args22224 = [];
  var len__19806__auto___22232 = arguments.length;
  var i__19807__auto___22233 = 0;
  while (true) {
    if (i__19807__auto___22233 < len__19806__auto___22232) {
      args22224.push(arguments[i__19807__auto___22233]);
      var G__22234 = i__19807__auto___22233 + 1;
      i__19807__auto___22233 = G__22234;
      continue;
    } else {
    }
    break;
  }
  var G__22228 = args22224.length;
  switch(G__22228) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22224.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19825__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__22229) {
  var map__22230 = p__22229;
  var map__22230__$1 = (!(map__22230 == null) ? map__22230.cljs$lang$protocol_mask$partition0$ & 64 || map__22230.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__22230) : map__22230;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22230__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22230__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq22225) {
  var G__22226 = cljs.core.first(seq22225);
  var seq22225__$1 = cljs.core.next(seq22225);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__22226, seq22225__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str("(validate new-value)")].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var args22236 = [];
  var len__19806__auto___22250 = arguments.length;
  var i__19807__auto___22251 = 0;
  while (true) {
    if (i__19807__auto___22251 < len__19806__auto___22250) {
      args22236.push(arguments[i__19807__auto___22251]);
      var G__22252 = i__19807__auto___22251 + 1;
      i__19807__auto___22251 = G__22252;
      continue;
    } else {
    }
    break;
  }
  var G__22243 = args22236.length;
  switch(G__22243) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22236.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__19825__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__22244 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22244) : f.call(null, G__22244);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__22245 = a.state;
      var G__22246 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22245, G__22246) : f.call(null, G__22245, G__22246);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__22247 = a.state;
      var G__22248 = x;
      var G__22249 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22247, G__22248, G__22249) : f.call(null, G__22247, G__22248, G__22249);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq22237) {
  var G__22238 = cljs.core.first(seq22237);
  var seq22237__$1 = cljs.core.next(seq22237);
  var G__22239 = cljs.core.first(seq22237__$1);
  var seq22237__$2 = cljs.core.next(seq22237__$1);
  var G__22240 = cljs.core.first(seq22237__$2);
  var seq22237__$3 = cljs.core.next(seq22237__$2);
  var G__22241 = cljs.core.first(seq22237__$3);
  var seq22237__$4 = cljs.core.next(seq22237__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__22238, G__22239, G__22240, G__22241, seq22237__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var args22254 = [];
  var len__19806__auto___22285 = arguments.length;
  var i__19807__auto___22286 = 0;
  while (true) {
    if (i__19807__auto___22286 < len__19806__auto___22285) {
      args22254.push(arguments[i__19807__auto___22286]);
      var G__22287 = i__19807__auto___22286 + 1;
      i__19807__auto___22286 = G__22287;
      continue;
    } else {
    }
    break;
  }
  var G__22256 = args22254.length;
  switch(G__22256) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22254.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__22289 = null;
        var G__22289__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22289__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22289__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__22289 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22289__0.call(this);
            case 1:
              return G__22289__1.call(this, result);
            case 2:
              return G__22289__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22289.cljs$core$IFn$_invoke$arity$0 = G__22289__0;
        G__22289.cljs$core$IFn$_invoke$arity$1 = G__22289__1;
        G__22289.cljs$core$IFn$_invoke$arity$2 = G__22289__2;
        return G__22289;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__19651__auto___22290 = size;
          var i_22291 = 0;
          while (true) {
            if (i_22291 < n__19651__auto___22290) {
              var x_22292 = function() {
                var G__22281 = idx + i_22291;
                var G__22282 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22291);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22281, G__22282) : f.call(null, G__22281, G__22282);
              }();
              if (x_22292 == null) {
              } else {
                cljs.core.chunk_append(b, x_22292);
              }
              var G__22293 = i_22291 + 1;
              i_22291 = G__22293;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__22283 = idx;
            var G__22284 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22283, G__22284) : f.call(null, G__22283, G__22284);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var args22300 = [];
  var len__19806__auto___22307 = arguments.length;
  var i__19807__auto___22308 = 0;
  while (true) {
    if (i__19807__auto___22308 < len__19806__auto___22307) {
      args22300.push(arguments[i__19807__auto___22308]);
      var G__22309 = i__19807__auto___22308 + 1;
      i__19807__auto___22308 = G__22309;
      continue;
    } else {
    }
    break;
  }
  var G__22306 = args22300.length;
  switch(G__22306) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22300.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__18724__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__22311__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__18724__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__18724__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__18724__auto__;
          }
        }());
      };
      var G__22311 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22312__i = 0, G__22312__a = new Array(arguments.length - 3);
          while (G__22312__i < G__22312__a.length) {
            G__22312__a[G__22312__i] = arguments[G__22312__i + 3];
            ++G__22312__i;
          }
          args = new cljs.core.IndexedSeq(G__22312__a, 0);
        }
        return G__22311__delegate.call(this, x, y, z, args);
      };
      G__22311.cljs$lang$maxFixedArity = 3;
      G__22311.cljs$lang$applyTo = function(arglist__22313) {
        var x = cljs.core.first(arglist__22313);
        arglist__22313 = cljs.core.next(arglist__22313);
        var y = cljs.core.first(arglist__22313);
        arglist__22313 = cljs.core.next(arglist__22313);
        var z = cljs.core.first(arglist__22313);
        var args = cljs.core.rest(arglist__22313);
        return G__22311__delegate(x, y, z, args);
      };
      G__22311.cljs$core$IFn$_invoke$arity$variadic = G__22311__delegate;
      return G__22311;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__22314 = null;
          if (arguments.length > 3) {
            var G__22315__i = 0, G__22315__a = new Array(arguments.length - 3);
            while (G__22315__i < G__22315__a.length) {
              G__22315__a[G__22315__i] = arguments[G__22315__i + 3];
              ++G__22315__i;
            }
            G__22314 = new cljs.core.IndexedSeq(G__22315__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22314);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__18724__auto____$1)) {
            var and__18724__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__18724__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__18724__auto____$2;
            }
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__18724__auto____$1)) {
            var and__18724__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__18724__auto____$2)) {
              var and__18724__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__18724__auto____$3)) {
                var and__18724__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__18724__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__18724__auto____$4;
                }
              } else {
                return and__18724__auto____$3;
              }
            } else {
              return and__18724__auto____$2;
            }
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__22316__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__18724__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__18724__auto__)) {
            return cljs.core.every_QMARK_(function(and__18724__auto__) {
              return function(p1__22294_SHARP_) {
                var and__18724__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22294_SHARP_) : p1.call(null, p1__22294_SHARP_);
                if (cljs.core.truth_(and__18724__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22294_SHARP_) : p2.call(null, p1__22294_SHARP_);
                } else {
                  return and__18724__auto____$1;
                }
              };
            }(and__18724__auto__), args);
          } else {
            return and__18724__auto__;
          }
        }());
      };
      var G__22316 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22317__i = 0, G__22317__a = new Array(arguments.length - 3);
          while (G__22317__i < G__22317__a.length) {
            G__22317__a[G__22317__i] = arguments[G__22317__i + 3];
            ++G__22317__i;
          }
          args = new cljs.core.IndexedSeq(G__22317__a, 0);
        }
        return G__22316__delegate.call(this, x, y, z, args);
      };
      G__22316.cljs$lang$maxFixedArity = 3;
      G__22316.cljs$lang$applyTo = function(arglist__22318) {
        var x = cljs.core.first(arglist__22318);
        arglist__22318 = cljs.core.next(arglist__22318);
        var y = cljs.core.first(arglist__22318);
        arglist__22318 = cljs.core.next(arglist__22318);
        var z = cljs.core.first(arglist__22318);
        var args = cljs.core.rest(arglist__22318);
        return G__22316__delegate(x, y, z, args);
      };
      G__22316.cljs$core$IFn$_invoke$arity$variadic = G__22316__delegate;
      return G__22316;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__22319 = null;
          if (arguments.length > 3) {
            var G__22320__i = 0, G__22320__a = new Array(arguments.length - 3);
            while (G__22320__i < G__22320__a.length) {
              G__22320__a[G__22320__i] = arguments[G__22320__i + 3];
              ++G__22320__i;
            }
            G__22319 = new cljs.core.IndexedSeq(G__22320__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22319);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__18724__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__18724__auto____$1)) {
            var and__18724__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__18724__auto____$2)) {
              var and__18724__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__18724__auto____$3)) {
                var and__18724__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__18724__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__18724__auto____$4;
                }
              } else {
                return and__18724__auto____$3;
              }
            } else {
              return and__18724__auto____$2;
            }
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__18724__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__18724__auto____$1)) {
            var and__18724__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__18724__auto____$2)) {
              var and__18724__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__18724__auto____$3)) {
                var and__18724__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__18724__auto____$4)) {
                  var and__18724__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__18724__auto____$5)) {
                    var and__18724__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__18724__auto____$6)) {
                      var and__18724__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__18724__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__18724__auto____$7;
                      }
                    } else {
                      return and__18724__auto____$6;
                    }
                  } else {
                    return and__18724__auto____$5;
                  }
                } else {
                  return and__18724__auto____$4;
                }
              } else {
                return and__18724__auto____$3;
              }
            } else {
              return and__18724__auto____$2;
            }
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__22321__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__18724__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__18724__auto__)) {
            return cljs.core.every_QMARK_(function(and__18724__auto__) {
              return function(p1__22295_SHARP_) {
                var and__18724__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22295_SHARP_) : p1.call(null, p1__22295_SHARP_);
                if (cljs.core.truth_(and__18724__auto____$1)) {
                  var and__18724__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22295_SHARP_) : p2.call(null, p1__22295_SHARP_);
                  if (cljs.core.truth_(and__18724__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__22295_SHARP_) : p3.call(null, p1__22295_SHARP_);
                  } else {
                    return and__18724__auto____$2;
                  }
                } else {
                  return and__18724__auto____$1;
                }
              };
            }(and__18724__auto__), args);
          } else {
            return and__18724__auto__;
          }
        }());
      };
      var G__22321 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22322__i = 0, G__22322__a = new Array(arguments.length - 3);
          while (G__22322__i < G__22322__a.length) {
            G__22322__a[G__22322__i] = arguments[G__22322__i + 3];
            ++G__22322__i;
          }
          args = new cljs.core.IndexedSeq(G__22322__a, 0);
        }
        return G__22321__delegate.call(this, x, y, z, args);
      };
      G__22321.cljs$lang$maxFixedArity = 3;
      G__22321.cljs$lang$applyTo = function(arglist__22323) {
        var x = cljs.core.first(arglist__22323);
        arglist__22323 = cljs.core.next(arglist__22323);
        var y = cljs.core.first(arglist__22323);
        arglist__22323 = cljs.core.next(arglist__22323);
        var z = cljs.core.first(arglist__22323);
        var args = cljs.core.rest(arglist__22323);
        return G__22321__delegate(x, y, z, args);
      };
      G__22321.cljs$core$IFn$_invoke$arity$variadic = G__22321__delegate;
      return G__22321;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__22324 = null;
          if (arguments.length > 3) {
            var G__22325__i = 0, G__22325__a = new Array(arguments.length - 3);
            while (G__22325__i < G__22325__a.length) {
              G__22325__a[G__22325__i] = arguments[G__22325__i + 3];
              ++G__22325__i;
            }
            G__22324 = new cljs.core.IndexedSeq(G__22325__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22324);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__22296_SHARP_) {
            return p1__22296_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22296_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22296_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__22297_SHARP_) {
            var and__18724__auto__ = p1__22297_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22297_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22297_SHARP_.call(null, x);
            if (cljs.core.truth_(and__18724__auto__)) {
              return p1__22297_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22297_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22297_SHARP_.call(null, y);
            } else {
              return and__18724__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__22298_SHARP_) {
            var and__18724__auto__ = p1__22298_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22298_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22298_SHARP_.call(null, x);
            if (cljs.core.truth_(and__18724__auto__)) {
              var and__18724__auto____$1 = p1__22298_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22298_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22298_SHARP_.call(null, y);
              if (cljs.core.truth_(and__18724__auto____$1)) {
                return p1__22298_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22298_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__22298_SHARP_.call(null, z);
              } else {
                return and__18724__auto____$1;
              }
            } else {
              return and__18724__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__22326__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__18724__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__18724__auto__)) {
              return cljs.core.every_QMARK_(function(and__18724__auto__, ps__$1) {
                return function(p1__22299_SHARP_) {
                  return cljs.core.every_QMARK_(p1__22299_SHARP_, args);
                };
              }(and__18724__auto__, ps__$1), ps__$1);
            } else {
              return and__18724__auto__;
            }
          }());
        };
        var G__22326 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22327__i = 0, G__22327__a = new Array(arguments.length - 3);
            while (G__22327__i < G__22327__a.length) {
              G__22327__a[G__22327__i] = arguments[G__22327__i + 3];
              ++G__22327__i;
            }
            args = new cljs.core.IndexedSeq(G__22327__a, 0);
          }
          return G__22326__delegate.call(this, x, y, z, args);
        };
        G__22326.cljs$lang$maxFixedArity = 3;
        G__22326.cljs$lang$applyTo = function(arglist__22328) {
          var x = cljs.core.first(arglist__22328);
          arglist__22328 = cljs.core.next(arglist__22328);
          var y = cljs.core.first(arglist__22328);
          arglist__22328 = cljs.core.next(arglist__22328);
          var z = cljs.core.first(arglist__22328);
          var args = cljs.core.rest(arglist__22328);
          return G__22326__delegate(x, y, z, args);
        };
        G__22326.cljs$core$IFn$_invoke$arity$variadic = G__22326__delegate;
        return G__22326;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__22329 = null;
            if (arguments.length > 3) {
              var G__22330__i = 0, G__22330__a = new Array(arguments.length - 3);
              while (G__22330__i < G__22330__a.length) {
                G__22330__a[G__22330__i] = arguments[G__22330__i + 3];
                ++G__22330__i;
              }
              G__22329 = new cljs.core.IndexedSeq(G__22330__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22329);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq22301) {
  var G__22302 = cljs.core.first(seq22301);
  var seq22301__$1 = cljs.core.next(seq22301);
  var G__22303 = cljs.core.first(seq22301__$1);
  var seq22301__$2 = cljs.core.next(seq22301__$1);
  var G__22304 = cljs.core.first(seq22301__$2);
  var seq22301__$3 = cljs.core.next(seq22301__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__22302, G__22303, G__22304, seq22301__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var args22337 = [];
  var len__19806__auto___22344 = arguments.length;
  var i__19807__auto___22345 = 0;
  while (true) {
    if (i__19807__auto___22345 < len__19806__auto___22344) {
      args22337.push(arguments[i__19807__auto___22345]);
      var G__22346 = i__19807__auto___22345 + 1;
      i__19807__auto___22345 = G__22346;
      continue;
    } else {
    }
    break;
  }
  var G__22343 = args22337.length;
  switch(G__22343) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22337.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__18736__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__18736__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var or__18736__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__18736__auto____$1)) {
          return or__18736__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__22348__delegate = function(x, y, z, args) {
        var or__18736__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__22348 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22349__i = 0, G__22349__a = new Array(arguments.length - 3);
          while (G__22349__i < G__22349__a.length) {
            G__22349__a[G__22349__i] = arguments[G__22349__i + 3];
            ++G__22349__i;
          }
          args = new cljs.core.IndexedSeq(G__22349__a, 0);
        }
        return G__22348__delegate.call(this, x, y, z, args);
      };
      G__22348.cljs$lang$maxFixedArity = 3;
      G__22348.cljs$lang$applyTo = function(arglist__22350) {
        var x = cljs.core.first(arglist__22350);
        arglist__22350 = cljs.core.next(arglist__22350);
        var y = cljs.core.first(arglist__22350);
        arglist__22350 = cljs.core.next(arglist__22350);
        var z = cljs.core.first(arglist__22350);
        var args = cljs.core.rest(arglist__22350);
        return G__22348__delegate(x, y, z, args);
      };
      G__22348.cljs$core$IFn$_invoke$arity$variadic = G__22348__delegate;
      return G__22348;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__22351 = null;
          if (arguments.length > 3) {
            var G__22352__i = 0, G__22352__a = new Array(arguments.length - 3);
            while (G__22352__i < G__22352__a.length) {
              G__22352__a[G__22352__i] = arguments[G__22352__i + 3];
              ++G__22352__i;
            }
            G__22351 = new cljs.core.IndexedSeq(G__22352__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22351);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__18736__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__18736__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var or__18736__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__18736__auto____$1)) {
          return or__18736__auto____$1;
        } else {
          var or__18736__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__18736__auto____$2)) {
            return or__18736__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__18736__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var or__18736__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__18736__auto____$1)) {
          return or__18736__auto____$1;
        } else {
          var or__18736__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__18736__auto____$2)) {
            return or__18736__auto____$2;
          } else {
            var or__18736__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__18736__auto____$3)) {
              return or__18736__auto____$3;
            } else {
              var or__18736__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__18736__auto____$4)) {
                return or__18736__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__22353__delegate = function(x, y, z, args) {
        var or__18736__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          return cljs.core.some(function(or__18736__auto__) {
            return function(p1__22331_SHARP_) {
              var or__18736__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22331_SHARP_) : p1.call(null, p1__22331_SHARP_);
              if (cljs.core.truth_(or__18736__auto____$1)) {
                return or__18736__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22331_SHARP_) : p2.call(null, p1__22331_SHARP_);
              }
            };
          }(or__18736__auto__), args);
        }
      };
      var G__22353 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22354__i = 0, G__22354__a = new Array(arguments.length - 3);
          while (G__22354__i < G__22354__a.length) {
            G__22354__a[G__22354__i] = arguments[G__22354__i + 3];
            ++G__22354__i;
          }
          args = new cljs.core.IndexedSeq(G__22354__a, 0);
        }
        return G__22353__delegate.call(this, x, y, z, args);
      };
      G__22353.cljs$lang$maxFixedArity = 3;
      G__22353.cljs$lang$applyTo = function(arglist__22355) {
        var x = cljs.core.first(arglist__22355);
        arglist__22355 = cljs.core.next(arglist__22355);
        var y = cljs.core.first(arglist__22355);
        arglist__22355 = cljs.core.next(arglist__22355);
        var z = cljs.core.first(arglist__22355);
        var args = cljs.core.rest(arglist__22355);
        return G__22353__delegate(x, y, z, args);
      };
      G__22353.cljs$core$IFn$_invoke$arity$variadic = G__22353__delegate;
      return G__22353;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__22356 = null;
          if (arguments.length > 3) {
            var G__22357__i = 0, G__22357__a = new Array(arguments.length - 3);
            while (G__22357__i < G__22357__a.length) {
              G__22357__a[G__22357__i] = arguments[G__22357__i + 3];
              ++G__22357__i;
            }
            G__22356 = new cljs.core.IndexedSeq(G__22357__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22356);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__18736__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var or__18736__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__18736__auto____$1)) {
          return or__18736__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__18736__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var or__18736__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__18736__auto____$1)) {
          return or__18736__auto____$1;
        } else {
          var or__18736__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__18736__auto____$2)) {
            return or__18736__auto____$2;
          } else {
            var or__18736__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__18736__auto____$3)) {
              return or__18736__auto____$3;
            } else {
              var or__18736__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__18736__auto____$4)) {
                return or__18736__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__18736__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        var or__18736__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__18736__auto____$1)) {
          return or__18736__auto____$1;
        } else {
          var or__18736__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__18736__auto____$2)) {
            return or__18736__auto____$2;
          } else {
            var or__18736__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__18736__auto____$3)) {
              return or__18736__auto____$3;
            } else {
              var or__18736__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__18736__auto____$4)) {
                return or__18736__auto____$4;
              } else {
                var or__18736__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__18736__auto____$5)) {
                  return or__18736__auto____$5;
                } else {
                  var or__18736__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__18736__auto____$6)) {
                    return or__18736__auto____$6;
                  } else {
                    var or__18736__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__18736__auto____$7)) {
                      return or__18736__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__22358__delegate = function(x, y, z, args) {
        var or__18736__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          return cljs.core.some(function(or__18736__auto__) {
            return function(p1__22332_SHARP_) {
              var or__18736__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__22332_SHARP_) : p1.call(null, p1__22332_SHARP_);
              if (cljs.core.truth_(or__18736__auto____$1)) {
                return or__18736__auto____$1;
              } else {
                var or__18736__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__22332_SHARP_) : p2.call(null, p1__22332_SHARP_);
                if (cljs.core.truth_(or__18736__auto____$2)) {
                  return or__18736__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__22332_SHARP_) : p3.call(null, p1__22332_SHARP_);
                }
              }
            };
          }(or__18736__auto__), args);
        }
      };
      var G__22358 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__22359__i = 0, G__22359__a = new Array(arguments.length - 3);
          while (G__22359__i < G__22359__a.length) {
            G__22359__a[G__22359__i] = arguments[G__22359__i + 3];
            ++G__22359__i;
          }
          args = new cljs.core.IndexedSeq(G__22359__a, 0);
        }
        return G__22358__delegate.call(this, x, y, z, args);
      };
      G__22358.cljs$lang$maxFixedArity = 3;
      G__22358.cljs$lang$applyTo = function(arglist__22360) {
        var x = cljs.core.first(arglist__22360);
        arglist__22360 = cljs.core.next(arglist__22360);
        var y = cljs.core.first(arglist__22360);
        arglist__22360 = cljs.core.next(arglist__22360);
        var z = cljs.core.first(arglist__22360);
        var args = cljs.core.rest(arglist__22360);
        return G__22358__delegate(x, y, z, args);
      };
      G__22358.cljs$core$IFn$_invoke$arity$variadic = G__22358__delegate;
      return G__22358;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__22361 = null;
          if (arguments.length > 3) {
            var G__22362__i = 0, G__22362__a = new Array(arguments.length - 3);
            while (G__22362__i < G__22362__a.length) {
              G__22362__a[G__22362__i] = arguments[G__22362__i + 3];
              ++G__22362__i;
            }
            G__22361 = new cljs.core.IndexedSeq(G__22362__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22361);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__22333_SHARP_) {
            return p1__22333_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22333_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22333_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__22334_SHARP_) {
            var or__18736__auto__ = p1__22334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22334_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22334_SHARP_.call(null, x);
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              return p1__22334_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22334_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22334_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__22335_SHARP_) {
            var or__18736__auto__ = p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__22335_SHARP_.call(null, x);
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              var or__18736__auto____$1 = p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__22335_SHARP_.call(null, y);
              if (cljs.core.truth_(or__18736__auto____$1)) {
                return or__18736__auto____$1;
              } else {
                return p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__22335_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__22335_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__22363__delegate = function(x, y, z, args) {
          var or__18736__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__18736__auto__)) {
            return or__18736__auto__;
          } else {
            return cljs.core.some(function(or__18736__auto__, ps__$1) {
              return function(p1__22336_SHARP_) {
                return cljs.core.some(p1__22336_SHARP_, args);
              };
            }(or__18736__auto__, ps__$1), ps__$1);
          }
        };
        var G__22363 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__22364__i = 0, G__22364__a = new Array(arguments.length - 3);
            while (G__22364__i < G__22364__a.length) {
              G__22364__a[G__22364__i] = arguments[G__22364__i + 3];
              ++G__22364__i;
            }
            args = new cljs.core.IndexedSeq(G__22364__a, 0);
          }
          return G__22363__delegate.call(this, x, y, z, args);
        };
        G__22363.cljs$lang$maxFixedArity = 3;
        G__22363.cljs$lang$applyTo = function(arglist__22365) {
          var x = cljs.core.first(arglist__22365);
          arglist__22365 = cljs.core.next(arglist__22365);
          var y = cljs.core.first(arglist__22365);
          arglist__22365 = cljs.core.next(arglist__22365);
          var z = cljs.core.first(arglist__22365);
          var args = cljs.core.rest(arglist__22365);
          return G__22363__delegate(x, y, z, args);
        };
        G__22363.cljs$core$IFn$_invoke$arity$variadic = G__22363__delegate;
        return G__22363;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__22366 = null;
            if (arguments.length > 3) {
              var G__22367__i = 0, G__22367__a = new Array(arguments.length - 3);
              while (G__22367__i < G__22367__a.length) {
                G__22367__a[G__22367__i] = arguments[G__22367__i + 3];
                ++G__22367__i;
              }
              G__22366 = new cljs.core.IndexedSeq(G__22367__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__22366);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq22338) {
  var G__22339 = cljs.core.first(seq22338);
  var seq22338__$1 = cljs.core.next(seq22338);
  var G__22340 = cljs.core.first(seq22338__$1);
  var seq22338__$2 = cljs.core.next(seq22338__$1);
  var G__22341 = cljs.core.first(seq22338__$2);
  var seq22338__$3 = cljs.core.next(seq22338__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__22339, G__22340, G__22341, seq22338__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var args22369 = [];
  var len__19806__auto___22389 = arguments.length;
  var i__19807__auto___22390 = 0;
  while (true) {
    if (i__19807__auto___22390 < len__19806__auto___22389) {
      args22369.push(arguments[i__19807__auto___22390]);
      var G__22391 = i__19807__auto___22390 + 1;
      i__19807__auto___22390 = G__22391;
      continue;
    } else {
    }
    break;
  }
  var G__22376 = args22369.length;
  switch(G__22376) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22369.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__19825__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__22393 = null;
      var G__22393__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22393__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22393__2 = function(result, input) {
        var G__22377 = result;
        var G__22378 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22377, G__22378) : rf.call(null, G__22377, G__22378);
      };
      var G__22393__3 = function() {
        var G__22394__delegate = function(result, input, inputs) {
          var G__22379 = result;
          var G__22380 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22379, G__22380) : rf.call(null, G__22379, G__22380);
        };
        var G__22394 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__22395__i = 0, G__22395__a = new Array(arguments.length - 2);
            while (G__22395__i < G__22395__a.length) {
              G__22395__a[G__22395__i] = arguments[G__22395__i + 2];
              ++G__22395__i;
            }
            inputs = new cljs.core.IndexedSeq(G__22395__a, 0);
          }
          return G__22394__delegate.call(this, result, input, inputs);
        };
        G__22394.cljs$lang$maxFixedArity = 2;
        G__22394.cljs$lang$applyTo = function(arglist__22396) {
          var result = cljs.core.first(arglist__22396);
          arglist__22396 = cljs.core.next(arglist__22396);
          var input = cljs.core.first(arglist__22396);
          var inputs = cljs.core.rest(arglist__22396);
          return G__22394__delegate(result, input, inputs);
        };
        G__22394.cljs$core$IFn$_invoke$arity$variadic = G__22394__delegate;
        return G__22394;
      }();
      G__22393 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__22393__0.call(this);
          case 1:
            return G__22393__1.call(this, result);
          case 2:
            return G__22393__2.call(this, result, input);
          default:
            var G__22397 = null;
            if (arguments.length > 2) {
              var G__22398__i = 0, G__22398__a = new Array(arguments.length - 2);
              while (G__22398__i < G__22398__a.length) {
                G__22398__a[G__22398__i] = arguments[G__22398__i + 2];
                ++G__22398__i;
              }
              G__22397 = new cljs.core.IndexedSeq(G__22398__a, 0);
            }
            return G__22393__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__22397);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22393.cljs$lang$maxFixedArity = 2;
      G__22393.cljs$lang$applyTo = G__22393__3.cljs$lang$applyTo;
      G__22393.cljs$core$IFn$_invoke$arity$0 = G__22393__0;
      G__22393.cljs$core$IFn$_invoke$arity$1 = G__22393__1;
      G__22393.cljs$core$IFn$_invoke$arity$2 = G__22393__2;
      G__22393.cljs$core$IFn$_invoke$arity$variadic = G__22393__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__22393;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__19651__auto___22399 = size;
        var i_22400 = 0;
        while (true) {
          if (i_22400 < n__19651__auto___22399) {
            cljs.core.chunk_append(b, function() {
              var G__22381 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22400);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22381) : f.call(null, G__22381);
            }());
            var G__22401 = i_22400 + 1;
            i_22400 = G__22401;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__22382 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22382) : f.call(null, G__22382);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__22383 = cljs.core.first(s1);
        var G__22384 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22383, G__22384) : f.call(null, G__22383, G__22384);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__22385 = cljs.core.first(s1);
        var G__22386 = cljs.core.first(s2);
        var G__22387 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22385, G__22386, G__22387) : f.call(null, G__22385, G__22386, G__22387);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__22368_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__22368_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq22370) {
  var G__22371 = cljs.core.first(seq22370);
  var seq22370__$1 = cljs.core.next(seq22370);
  var G__22372 = cljs.core.first(seq22370__$1);
  var seq22370__$2 = cljs.core.next(seq22370__$1);
  var G__22373 = cljs.core.first(seq22370__$2);
  var seq22370__$3 = cljs.core.next(seq22370__$2);
  var G__22374 = cljs.core.first(seq22370__$3);
  var seq22370__$4 = cljs.core.next(seq22370__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__22371, G__22372, G__22373, G__22374, seq22370__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var args22402 = [];
  var len__19806__auto___22405 = arguments.length;
  var i__19807__auto___22406 = 0;
  while (true) {
    if (i__19807__auto___22406 < len__19806__auto___22405) {
      args22402.push(arguments[i__19807__auto___22406]);
      var G__22407 = i__19807__auto___22406 + 1;
      i__19807__auto___22406 = G__22407;
      continue;
    } else {
    }
    break;
  }
  var G__22404 = args22402.length;
  switch(G__22404) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22402.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__22409 = null;
        var G__22409__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22409__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22409__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__22409 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22409__0.call(this);
            case 1:
              return G__22409__1.call(this, result);
            case 2:
              return G__22409__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22409.cljs$core$IFn$_invoke$arity$0 = G__22409__0;
        G__22409.cljs$core$IFn$_invoke$arity$1 = G__22409__1;
        G__22409.cljs$core$IFn$_invoke$arity$2 = G__22409__2;
        return G__22409;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var args22410 = [];
  var len__19806__auto___22413 = arguments.length;
  var i__19807__auto___22414 = 0;
  while (true) {
    if (i__19807__auto___22414 < len__19806__auto___22413) {
      args22410.push(arguments[i__19807__auto___22414]);
      var G__22415 = i__19807__auto___22414 + 1;
      i__19807__auto___22414 = G__22415;
      continue;
    } else {
    }
    break;
  }
  var G__22412 = args22410.length;
  switch(G__22412) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22410.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__22417 = null;
        var G__22417__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22417__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22417__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__22417 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22417__0.call(this);
            case 1:
              return G__22417__1.call(this, result);
            case 2:
              return G__22417__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22417.cljs$core$IFn$_invoke$arity$0 = G__22417__0;
        G__22417.cljs$core$IFn$_invoke$arity$1 = G__22417__1;
        G__22417.cljs$core$IFn$_invoke$arity$2 = G__22417__2;
        return G__22417;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__22418 = n__$1 - 1;
        var G__22419 = cljs.core.rest(s);
        n__$1 = G__22418;
        coll__$1 = G__22419;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var args22420 = [];
  var len__19806__auto___22423 = arguments.length;
  var i__19807__auto___22424 = 0;
  while (true) {
    if (i__19807__auto___22424 < len__19806__auto___22423) {
      args22420.push(arguments[i__19807__auto___22424]);
      var G__22425 = i__19807__auto___22424 + 1;
      i__19807__auto___22424 = G__22425;
      continue;
    } else {
    }
    break;
  }
  var G__22422 = args22420.length;
  switch(G__22422) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22420.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__22427 = cljs.core.next(s);
      var G__22428 = cljs.core.next(lead);
      s = G__22427;
      lead = G__22428;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var args22429 = [];
  var len__19806__auto___22434 = arguments.length;
  var i__19807__auto___22435 = 0;
  while (true) {
    if (i__19807__auto___22435 < len__19806__auto___22434) {
      args22429.push(arguments[i__19807__auto___22435]);
      var G__22436 = i__19807__auto___22435 + 1;
      i__19807__auto___22435 = G__22436;
      continue;
    } else {
    }
    break;
  }
  var G__22431 = args22429.length;
  switch(G__22431) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22429.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__22438 = null;
        var G__22438__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22438__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22438__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__18724__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__18724__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__18724__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__22438 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22438__0.call(this);
            case 1:
              return G__22438__1.call(this, result);
            case 2:
              return G__22438__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22438.cljs$core$IFn$_invoke$arity$0 = G__22438__0;
        G__22438.cljs$core$IFn$_invoke$arity$1 = G__22438__1;
        G__22438.cljs$core$IFn$_invoke$arity$2 = G__22438__2;
        return G__22438;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__18724__auto__ = s;
        if (and__18724__auto__) {
          var G__22433 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__22433) : pred__$1.call(null, G__22433);
        } else {
          return and__18724__auto__;
        }
      }())) {
        var G__22439 = pred__$1;
        var G__22440 = cljs.core.rest(s);
        pred__$1 = G__22439;
        coll__$1 = G__22440;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var args22441 = [];
  var len__19806__auto___22444 = arguments.length;
  var i__19807__auto___22445 = 0;
  while (true) {
    if (i__19807__auto___22445 < len__19806__auto___22444) {
      args22441.push(arguments[i__19807__auto___22445]);
      var G__22446 = i__19807__auto___22445 + 1;
      i__19807__auto___22445 = G__22446;
      continue;
    } else {
    }
    break;
  }
  var G__22443 = args22441.length;
  switch(G__22443) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22441.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var args22448 = [];
  var len__19806__auto___22451 = arguments.length;
  var i__19807__auto___22452 = 0;
  while (true) {
    if (i__19807__auto___22452 < len__19806__auto___22451) {
      args22448.push(arguments[i__19807__auto___22452]);
      var G__22453 = i__19807__auto___22452 + 1;
      i__19807__auto___22452 = G__22453;
      continue;
    } else {
    }
    break;
  }
  var G__22450 = args22448.length;
  switch(G__22450) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22448.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var args22457 = [];
  var len__19806__auto___22463 = arguments.length;
  var i__19807__auto___22464 = 0;
  while (true) {
    if (i__19807__auto___22464 < len__19806__auto___22463) {
      args22457.push(arguments[i__19807__auto___22464]);
      var G__22465 = i__19807__auto___22464 + 1;
      i__19807__auto___22464 = G__22465;
      continue;
    } else {
    }
    break;
  }
  var G__22462 = args22457.length;
  switch(G__22462) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22457.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19825__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq22458) {
  var G__22459 = cljs.core.first(seq22458);
  var seq22458__$1 = cljs.core.next(seq22458);
  var G__22460 = cljs.core.first(seq22458__$1);
  var seq22458__$2 = cljs.core.next(seq22458__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__22459, G__22460, seq22458__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var args22467 = [];
  var len__19806__auto___22470 = arguments.length;
  var i__19807__auto___22471 = 0;
  while (true) {
    if (i__19807__auto___22471 < len__19806__auto___22470) {
      args22467.push(arguments[i__19807__auto___22471]);
      var G__22472 = i__19807__auto___22471 + 1;
      i__19807__auto___22471 = G__22472;
      continue;
    } else {
    }
    break;
  }
  var G__22469 = args22467.length;
  switch(G__22469) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22467.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__22474 = null;
        var G__22474__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__22474__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__22474__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__22474 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__22474__0.call(this);
            case 1:
              return G__22474__1.call(this, result);
            case 2:
              return G__22474__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__22474.cljs$core$IFn$_invoke$arity$0 = G__22474__0;
        G__22474.cljs$core$IFn$_invoke$arity$1 = G__22474__1;
        G__22474.cljs$core$IFn$_invoke$arity$2 = G__22474__2;
        return G__22474;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var args22483 = [];
  var len__19806__auto___22488 = arguments.length;
  var i__19807__auto___22489 = 0;
  while (true) {
    if (i__19807__auto___22489 < len__19806__auto___22488) {
      args22483.push(arguments[i__19807__auto___22489]);
      var G__22490 = i__19807__auto___22489 + 1;
      i__19807__auto___22489 = G__22490;
      continue;
    } else {
    }
    break;
  }
  var G__22487 = args22483.length;
  switch(G__22487) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22483.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19825__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq22484) {
  var G__22485 = cljs.core.first(seq22484);
  var seq22484__$1 = cljs.core.next(seq22484);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__22485, seq22484__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var args22492 = [];
  var len__19806__auto___22496 = arguments.length;
  var i__19807__auto___22497 = 0;
  while (true) {
    if (i__19807__auto___22497 < len__19806__auto___22496) {
      args22492.push(arguments[i__19807__auto___22497]);
      var G__22498 = i__19807__auto___22497 + 1;
      i__19807__auto___22497 = G__22498;
      continue;
    } else {
    }
    break;
  }
  var G__22494 = args22492.length;
  switch(G__22494) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22492.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__22500 = null;
      var G__22500__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__22500__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__22500__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__22500 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__22500__0.call(this);
          case 1:
            return G__22500__1.call(this, result);
          case 2:
            return G__22500__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__22500.cljs$core$IFn$_invoke$arity$0 = G__22500__0;
      G__22500.cljs$core$IFn$_invoke$arity$1 = G__22500__1;
      G__22500.cljs$core$IFn$_invoke$arity$2 = G__22500__2;
      return G__22500;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__19651__auto___22501 = size;
        var i_22502 = 0;
        while (true) {
          if (i_22502 < n__19651__auto___22501) {
            if (cljs.core.truth_(function() {
              var G__22495 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22502);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22495) : pred.call(null, G__22495);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_22502));
            } else {
            }
            var G__22503 = i_22502 + 1;
            i_22502 = G__22503;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var args22504 = [];
  var len__19806__auto___22507 = arguments.length;
  var i__19807__auto___22508 = 0;
  while (true) {
    if (i__19807__auto___22508 < len__19806__auto___22507) {
      args22504.push(arguments[i__19807__auto___22508]);
      var G__22509 = i__19807__auto___22508 + 1;
      i__19807__auto___22508 = G__22509;
      continue;
    } else {
    }
    break;
  }
  var G__22506 = args22504.length;
  switch(G__22506) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22504.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__22511_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__22511_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var args22512 = [];
  var len__19806__auto___22517 = arguments.length;
  var i__19807__auto___22518 = 0;
  while (true) {
    if (i__19807__auto___22518 < len__19806__auto___22517) {
      args22512.push(arguments[i__19807__auto___22518]);
      var G__22519 = i__19807__auto___22518 + 1;
      i__19807__auto___22518 = G__22519;
      continue;
    } else {
    }
    break;
  }
  var G__22514 = args22512.length;
  switch(G__22514) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22512.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var args22521 = [];
  var len__19806__auto___22529 = arguments.length;
  var i__19807__auto___22530 = 0;
  while (true) {
    if (i__19807__auto___22530 < len__19806__auto___22529) {
      args22521.push(arguments[i__19807__auto___22530]);
      var G__22531 = i__19807__auto___22530 + 1;
      i__19807__auto___22530 = G__22531;
      continue;
    } else {
    }
    break;
  }
  var G__22528 = args22521.length;
  switch(G__22528) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22521.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__19825__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq22522) {
  var G__22523 = cljs.core.first(seq22522);
  var seq22522__$1 = cljs.core.next(seq22522);
  var G__22524 = cljs.core.first(seq22522__$1);
  var seq22522__$2 = cljs.core.next(seq22522__$1);
  var G__22525 = cljs.core.first(seq22522__$2);
  var seq22522__$3 = cljs.core.next(seq22522__$2);
  var G__22526 = cljs.core.first(seq22522__$3);
  var seq22522__$4 = cljs.core.next(seq22522__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__22523, G__22524, G__22525, G__22526, seq22522__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var args22533 = [];
  var len__19806__auto___22536 = arguments.length;
  var i__19807__auto___22537 = 0;
  while (true) {
    if (i__19807__auto___22537 < len__19806__auto___22536) {
      args22533.push(arguments[i__19807__auto___22537]);
      var G__22538 = i__19807__auto___22537 + 1;
      i__19807__auto___22537 = G__22538;
      continue;
    } else {
    }
    break;
  }
  var G__22535 = args22533.length;
  switch(G__22535) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22533.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        var x__19570__auto__ = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad));
        return cljs.core._conj(cljs.core.List.EMPTY, x__19570__auto__);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var args22540 = [];
  var len__19806__auto___22544 = arguments.length;
  var i__19807__auto___22545 = 0;
  while (true) {
    if (i__19807__auto___22545 < len__19806__auto___22544) {
      args22540.push(arguments[i__19807__auto___22545]);
      var G__22546 = i__19807__auto___22545 + 1;
      i__19807__auto___22545 = G__22546;
      continue;
    } else {
    }
    break;
  }
  var G__22542 = args22540.length;
  switch(G__22542) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22540.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__22548 = sentinel;
          var G__22549 = m__$2;
          var G__22550 = cljs.core.next(ks__$1);
          sentinel = G__22548;
          m__$1 = G__22549;
          ks__$1 = G__22550;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__22551, v) {
  var vec__22556 = p__22551;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22556, 0, null);
  var ks = cljs.core.nthnext(vec__22556, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var args22557 = [];
  var len__19806__auto___22587 = arguments.length;
  var i__19807__auto___22588 = 0;
  while (true) {
    if (i__19807__auto___22588 < len__19806__auto___22587) {
      args22557.push(arguments[i__19807__auto___22588]);
      var G__22589 = i__19807__auto___22588 + 1;
      i__19807__auto___22588 = G__22589;
      continue;
    } else {
    }
    break;
  }
  var G__22566 = args22557.length;
  switch(G__22566) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22557.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__19825__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__22567, f) {
  var vec__22568 = p__22567;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22568, 0, null);
  var ks = cljs.core.nthnext(vec__22568, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22569 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22569) : f.call(null, G__22569);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__22570, f, a) {
  var vec__22571 = p__22570;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22571, 0, null);
  var ks = cljs.core.nthnext(vec__22571, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22572 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__22573 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22572, G__22573) : f.call(null, G__22572, G__22573);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__22574, f, a, b) {
  var vec__22575 = p__22574;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22575, 0, null);
  var ks = cljs.core.nthnext(vec__22575, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22576 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__22577 = a;
      var G__22578 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22576, G__22577, G__22578) : f.call(null, G__22576, G__22577, G__22578);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__22579, f, a, b, c) {
  var vec__22580 = p__22579;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22580, 0, null);
  var ks = cljs.core.nthnext(vec__22580, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__22581 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__22582 = a;
      var G__22583 = b;
      var G__22584 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22581, G__22582, G__22583, G__22584) : f.call(null, G__22581, G__22582, G__22583, G__22584);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__22585, f, a, b, c, args) {
  var vec__22586 = p__22585;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22586, 0, null);
  var ks = cljs.core.nthnext(vec__22586, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq22558) {
  var G__22559 = cljs.core.first(seq22558);
  var seq22558__$1 = cljs.core.next(seq22558);
  var G__22560 = cljs.core.first(seq22558__$1);
  var seq22558__$2 = cljs.core.next(seq22558__$1);
  var G__22561 = cljs.core.first(seq22558__$2);
  var seq22558__$3 = cljs.core.next(seq22558__$2);
  var G__22562 = cljs.core.first(seq22558__$3);
  var seq22558__$4 = cljs.core.next(seq22558__$3);
  var G__22563 = cljs.core.first(seq22558__$4);
  var seq22558__$5 = cljs.core.next(seq22558__$4);
  var G__22564 = cljs.core.first(seq22558__$5);
  var seq22558__$6 = cljs.core.next(seq22558__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__22559, G__22560, G__22561, G__22562, G__22563, G__22564, seq22558__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var args22591 = [];
  var len__19806__auto___22611 = arguments.length;
  var i__19807__auto___22612 = 0;
  while (true) {
    if (i__19807__auto___22612 < len__19806__auto___22611) {
      args22591.push(arguments[i__19807__auto___22612]);
      var G__22613 = i__19807__auto___22612 + 1;
      i__19807__auto___22612 = G__22613;
      continue;
    } else {
    }
    break;
  }
  var G__22600 = args22591.length;
  switch(G__22600) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args22591.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__19825__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22601 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22601) : f.call(null, G__22601);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22602 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__22603 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22602, G__22603) : f.call(null, G__22602, G__22603);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22604 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__22605 = x;
    var G__22606 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22604, G__22605, G__22606) : f.call(null, G__22604, G__22605, G__22606);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__22607 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__22608 = x;
    var G__22609 = y;
    var G__22610 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22607, G__22608, G__22609, G__22610) : f.call(null, G__22607, G__22608, G__22609, G__22610);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq22592) {
  var G__22593 = cljs.core.first(seq22592);
  var seq22592__$1 = cljs.core.next(seq22592);
  var G__22594 = cljs.core.first(seq22592__$1);
  var seq22592__$2 = cljs.core.next(seq22592__$1);
  var G__22595 = cljs.core.first(seq22592__$2);
  var seq22592__$3 = cljs.core.next(seq22592__$2);
  var G__22596 = cljs.core.first(seq22592__$3);
  var seq22592__$4 = cljs.core.next(seq22592__$3);
  var G__22597 = cljs.core.first(seq22592__$4);
  var seq22592__$5 = cljs.core.next(seq22592__$4);
  var G__22598 = cljs.core.first(seq22592__$5);
  var seq22592__$6 = cljs.core.next(seq22592__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__22593, G__22594, G__22595, G__22596, G__22597, G__22598, seq22592__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__22615 = ll - 5;
      var G__22616 = r;
      ll = G__22615;
      ret = G__22616;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__22621 = cljs.core.pv_aget(node, 0);
      var G__22622 = level - 5;
      node = G__22621;
      level = G__22622;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__22623 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__22624 = level - 5;
        node = G__22623;
        level = G__22624;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__22643 = null;
  var G__22643__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22643__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22643 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22643__1.call(this, x);
      case 2:
        return G__22643__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22643.cljs$core$IFn$_invoke$arity$1 = G__22643__1;
  G__22643.cljs$core$IFn$_invoke$arity$2 = G__22643__2;
  return G__22643;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__22644 = null;
  var G__22644__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22644__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22644 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22644__1.call(this, x);
      case 2:
        return G__22644__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22644.cljs$core$IFn$_invoke$arity$1 = G__22644__1;
  G__22644.cljs$core$IFn$_invoke$arity$2 = G__22644__2;
  return G__22644;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__22634 = init__$2;
              var G__22635 = j + i;
              var G__22636 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22634, G__22635, G__22636) : f.call(null, G__22634, G__22635, G__22636);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__22645 = j + 1;
              var G__22646 = init__$3;
              j = G__22645;
              init__$2 = G__22646;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22647 = i + len;
        var G__22648 = init__$2;
        i = G__22647;
        init__$1 = G__22648;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__22637 = init__$2;
              var G__22638 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22637, G__22638) : f.call(null, G__22637, G__22638);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__22649 = j + 1;
              var G__22650 = init__$3;
              j = G__22649;
              init__$2 = G__22650;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22651 = i + len;
        var G__22652 = init__$2;
        i = G__22651;
        init__$1 = G__22652;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      var G__22639 = coll__$1;
      var G__22640 = cljs.core.first_array_for_longvec(coll__$1);
      var G__22641 = 0;
      var G__22642 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22639, G__22640, G__22641, G__22642) : cljs.core.chunked_seq.call(null, G__22639, G__22640, G__22641, G__22642);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__19651__auto___22653 = len;
    var i_22654 = 0;
    while (true) {
      if (i_22654 < n__19651__auto___22653) {
        new_tail[i_22654] = self__.tail[i_22654];
        var G__22655 = i_22654 + 1;
        i_22654 = G__22655;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__22656 = null;
  var G__22656__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__22656__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__22656 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22656__2.call(this, self__, k);
      case 3:
        return G__22656__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22656.cljs$core$IFn$_invoke$arity$2 = G__22656__2;
  G__22656.cljs$core$IFn$_invoke$arity$3 = G__22656__3;
  return G__22656;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args22633) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22633)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__22657 = i + 1;
        var G__22658 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__22657;
        out = G__22658;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___22660 = arguments.length;
  var i__19807__auto___22661 = 0;
  while (true) {
    if (i__19807__auto___22661 < len__19806__auto___22660) {
      args__19813__auto__.push(arguments[i__19807__auto___22661]);
      var G__22662 = i__19807__auto___22661 + 1;
      i__19807__auto___22661 = G__22662;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq22659) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq22659));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__22685 = null;
  var G__22685__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22685__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22685 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22685__1.call(this, x);
      case 2:
        return G__22685__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22685.cljs$core$IFn$_invoke$arity$1 = G__22685__1;
  G__22685.cljs$core$IFn$_invoke$arity$2 = G__22685__2;
  return G__22685;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__22686 = null;
  var G__22686__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22686__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22686 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22686__1.call(this, x);
      case 2:
        return G__22686__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22686.cljs$core$IFn$_invoke$arity$1 = G__22686__1;
  G__22686.cljs$core$IFn$_invoke$arity$2 = G__22686__2;
  return G__22686;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__22663 = self__.vec;
      var G__22664 = self__.node;
      var G__22665 = self__.i;
      var G__22666 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22663, G__22664, G__22665, G__22666) : cljs.core.chunked_seq.call(null, G__22663, G__22664, G__22665, G__22666);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__22667 = self__.vec;
    var G__22668 = self__.i + self__.off;
    var G__22669 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22667, G__22668, G__22669) : cljs.core.subvec.call(null, G__22667, G__22668, G__22669);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__22670 = self__.vec;
    var G__22671 = self__.i + self__.off;
    var G__22672 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22670, G__22671, G__22672) : cljs.core.subvec.call(null, G__22670, G__22671, G__22672);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__22673 = self__.vec;
      var G__22674 = self__.node;
      var G__22675 = self__.i;
      var G__22676 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22673, G__22674, G__22675, G__22676) : cljs.core.chunked_seq.call(null, G__22673, G__22674, G__22675, G__22676);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__22677 = self__.vec;
    var G__22678 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__22679 = end;
    var G__22680 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22677, G__22678, G__22679, G__22680) : cljs.core.chunked_seq.call(null, G__22677, G__22678, G__22679, G__22680);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__22681 = self__.vec;
    var G__22682 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__22683 = end;
    var G__22684 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22681, G__22682, G__22683, G__22684) : cljs.core.chunked_seq.call(null, G__22681, G__22682, G__22683, G__22684);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var args22687 = [];
  var len__19806__auto___22690 = arguments.length;
  var i__19807__auto___22691 = 0;
  while (true) {
    if (i__19807__auto___22691 < len__19806__auto___22690) {
      args22687.push(arguments[i__19807__auto___22691]);
      var G__22692 = i__19807__auto___22691 + 1;
      i__19807__auto___22691 = G__22692;
      continue;
    } else {
    }
    break;
  }
  var G__22689 = args22687.length;
  switch(G__22689) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22687.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__22714 = null;
  var G__22714__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22714__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__22714 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__22714__1.call(this, x);
      case 2:
        return G__22714__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22714.cljs$core$IFn$_invoke$arity$1 = G__22714__1;
  G__22714.cljs$core$IFn$_invoke$arity$2 = G__22714__2;
  return G__22714;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__22715 = null;
  var G__22715__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22715__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__22715 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__22715__1.call(this, x);
      case 2:
        return G__22715__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22715.cljs$core$IFn$_invoke$arity$1 = G__22715__1;
  G__22715.cljs$core$IFn$_invoke$arity$2 = G__22715__2;
  return G__22715;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__22695 = init__$1;
        var G__22696 = j;
        var G__22697 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22695, G__22696, G__22697) : f.call(null, G__22695, G__22696, G__22697);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22716 = i + 1;
        var G__22717 = j + 1;
        var G__22718 = init__$2;
        i = G__22716;
        j = G__22717;
        init__$1 = G__22718;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__22698 = self__.meta;
  var G__22699 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__22700 = self__.start;
  var G__22701 = function() {
    var x__19067__auto__ = self__.end;
    var y__19068__auto__ = v_pos + 1;
    return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
  }();
  var G__22702 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22698, G__22699, G__22700, G__22701, G__22702) : cljs.core.build_subvec.call(null, G__22698, G__22699, G__22700, G__22701, G__22702);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__22703 = self__.meta;
    var G__22704 = self__.v;
    var G__22705 = self__.start;
    var G__22706 = self__.end - 1;
    var G__22707 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22703, G__22704, G__22705, G__22706, G__22707) : cljs.core.build_subvec.call(null, G__22703, G__22704, G__22705, G__22706, G__22707);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__22709 = self__.meta;
  var G__22710 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__22711 = self__.start;
  var G__22712 = self__.end + 1;
  var G__22713 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22709, G__22710, G__22711, G__22712, G__22713) : cljs.core.build_subvec.call(null, G__22709, G__22710, G__22711, G__22712, G__22713);
};
cljs.core.Subvec.prototype.call = function() {
  var G__22719 = null;
  var G__22719__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__22719__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__22719 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22719__2.call(this, self__, k);
      case 3:
        return G__22719__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22719.cljs$core$IFn$_invoke$arity$2 = G__22719__2;
  G__22719.cljs$core$IFn$_invoke$arity$3 = G__22719__3;
  return G__22719;
}();
cljs.core.Subvec.prototype.apply = function(self__, args22694) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22694)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__22720 = meta;
      var G__22721 = v.v;
      var G__22722 = v.start + start;
      var G__22723 = v.start + end;
      var G__22724 = __hash;
      meta = G__22720;
      v = G__22721;
      start = G__22722;
      end = G__22723;
      __hash = G__22724;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var args22725 = [];
  var len__19806__auto___22728 = arguments.length;
  var i__19807__auto___22729 = 0;
  while (true) {
    if (i__19807__auto___22729 < len__19806__auto___22728) {
      args22725.push(arguments[i__19807__auto___22729]);
      var G__22730 = i__19807__auto___22729 + 1;
      i__19807__auto___22729 = G__22730;
      continue;
    } else {
    }
    break;
  }
  var G__22727 = args22725.length;
  switch(G__22727) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22725.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__22743 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__22744 = level - 5;
        node = G__22743;
        level = G__22744;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__22748 = null;
  var G__22748__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22748__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22748 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22748__2.call(this, self__, k);
      case 3:
        return G__22748__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22748.cljs$core$IFn$_invoke$arity$2 = G__22748__2;
  G__22748.cljs$core$IFn$_invoke$arity$3 = G__22748__3;
  return G__22748;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args22745) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22745)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__18736__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__18736__auto__) {
    return or__18736__auto__;
  } else {
    var and__18724__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__18724__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__18724__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__22749 = null;
  var G__22749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22749__1.call(this, x);
      case 2:
        return G__22749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22749.cljs$core$IFn$_invoke$arity$1 = G__22749__1;
  G__22749.cljs$core$IFn$_invoke$arity$2 = G__22749__2;
  return G__22749;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__22750 = null;
  var G__22750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22750__1.call(this, x);
      case 2:
        return G__22750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22750.cljs$core$IFn$_invoke$arity$1 = G__22750__1;
  G__22750.cljs$core$IFn$_invoke$arity$2 = G__22750__2;
  return G__22750;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__22751 = null;
  var G__22751__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22751__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22751 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22751__1.call(this, x);
      case 2:
        return G__22751__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22751.cljs$core$IFn$_invoke$arity$1 = G__22751__1;
  G__22751.cljs$core$IFn$_invoke$arity$2 = G__22751__2;
  return G__22751;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__22752 = null;
  var G__22752__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__22752__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22752 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22752__1.call(this, x);
      case 2:
        return G__22752__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22752.cljs$core$IFn$_invoke$arity$1 = G__22752__1;
  G__22752.cljs$core$IFn$_invoke$arity$2 = G__22752__2;
  return G__22752;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__18736__auto__ = self__.front;
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__18736__auto__ = self__.rear;
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__22753 = i + incr;
        i = G__22753;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__22754 = i + 1;
      var G__22755 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__22754;
      out = G__22755;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_22760 = 0;
  while (true) {
    if (i_22760 < l) {
      var k_22761 = ks[i_22760];
      new_obj[k_22761] = obj[k_22761];
      var G__22762 = i_22760 + 1;
      i_22760 = G__22762;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__22765 = init__$1;
        var G__22766 = k;
        var G__22767 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22765, G__22766, G__22767) : f.call(null, G__22765, G__22766, G__22767);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22768 = cljs.core.rest(keys__$1);
        var G__22769 = init__$2;
        keys__$1 = G__22768;
        init__$1 = G__22769;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__22763_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__22763_SHARP_, self__.strobj[p1__22763_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__22770 = null;
  var G__22770__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22770__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22770 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22770__2.call(this, self__, k);
      case 3:
        return G__22770__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22770.cljs$core$IFn$_invoke$arity$2 = G__22770__2;
  G__22770.cljs$core$IFn$_invoke$arity$3 = G__22770__3;
  return G__22770;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args22764) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22764)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__18736__auto__ = self__.i < self__.base_count;
  if (or__18736__auto__) {
    return or__18736__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__22773 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22773, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22773, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__22774 = i + 2;
        i = G__22774;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__22775 = i + 2;
        i = G__22775;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__22776 = i + 2;
        i = G__22776;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__22777 = i + 2;
        i = G__22777;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__22778 = i + 2;
        i = G__22778;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_22779 = 0;
  while (true) {
    if (i_22779 < l) {
      narr[i_22779] = arr[i_22779];
      var G__22780 = i_22779 + 1;
      i_22779 = G__22780;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__22781 = null;
  var G__22781__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22781__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22781 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22781__1.call(this, x);
      case 2:
        return G__22781__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22781.cljs$core$IFn$_invoke$arity$1 = G__22781__1;
  G__22781.cljs$core$IFn$_invoke$arity$2 = G__22781__2;
  return G__22781;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__22782 = null;
  var G__22782__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22782__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22782 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22782__1.call(this, x);
      case 2:
        return G__22782__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22782.cljs$core$IFn$_invoke$arity$1 = G__22782__1;
  G__22782.cljs$core$IFn$_invoke$arity$2 = G__22782__2;
  return G__22782;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22784 = cljs.core.seq(coll);
  var chunk__22785 = null;
  var count__22786 = 0;
  var i__22787 = 0;
  while (true) {
    if (i__22787 < count__22786) {
      var vec__22788 = chunk__22785.cljs$core$IIndexed$_nth$arity$2(null, i__22787);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22788, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22788, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22797 = seq__22784;
      var G__22798 = chunk__22785;
      var G__22799 = count__22786;
      var G__22800 = i__22787 + 1;
      seq__22784 = G__22797;
      chunk__22785 = G__22798;
      count__22786 = G__22799;
      i__22787 = G__22800;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22784);
      if (temp__4657__auto__) {
        var seq__22784__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22784__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__22784__$1);
          var G__22801 = cljs.core.chunk_rest(seq__22784__$1);
          var G__22802 = c__19547__auto__;
          var G__22803 = cljs.core.count(c__19547__auto__);
          var G__22804 = 0;
          seq__22784 = G__22801;
          chunk__22785 = G__22802;
          count__22786 = G__22803;
          i__22787 = G__22804;
          continue;
        } else {
          var vec__22789 = cljs.core.first(seq__22784__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22789, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22789, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22805 = cljs.core.next(seq__22784__$1);
          var G__22806 = null;
          var G__22807 = 0;
          var G__22808 = 0;
          seq__22784 = G__22805;
          chunk__22785 = G__22806;
          count__22786 = G__22807;
          i__22787 = G__22808;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__22790 = init__$1;
        var G__22791 = self__.arr[i];
        var G__22792 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22790, G__22791, G__22792) : f.call(null, G__22790, G__22791, G__22792);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22809 = i + 2;
        var G__22810 = init__$2;
        i = G__22809;
        init__$1 = G__22810;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__22811 = i + 2;
              i = G__22811;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__22812 = s + 2;
            var G__22813 = d;
            s = G__22812;
            d = G__22813;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__22814 = s + 2;
            var G__22815 = d + 2;
            s = G__22814;
            d = G__22815;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__22796 = cljs.core.aclone(self__.arr);
        G__22796[idx + 1] = v;
        return G__22796;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22816 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__22817 = cljs.core.next(es);
          ret = G__22816;
          es = G__22817;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__22818 = null;
  var G__22818__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22818__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22818 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22818__2.call(this, self__, k);
      case 3:
        return G__22818__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22818.cljs$core$IFn$_invoke$arity$2 = G__22818__2;
  G__22818.cljs$core$IFn$_invoke$arity$3 = G__22818__3;
  return G__22818;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args22783) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22783)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_22819 = 0;
    while (true) {
      if (i_22819 < arr__$1.length) {
        var k_22820 = arr__$1[i_22819];
        var v_22821 = arr__$1[i_22819 + 1];
        var idx_22822 = cljs.core.array_index_of(ret, k_22820);
        if (idx_22822 === -1) {
          ret.push(k_22820);
          ret.push(v_22821);
        } else {
        }
        var G__22823 = i_22819 + 2;
        i_22819 = G__22823;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__22826 = cljs.core.next(es);
          var G__22827 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__22826;
          tcoll__$2 = G__22827;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__22825_22828 = self__.arr;
      G__22825_22828.pop();
      G__22825_22828.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__22829 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__22830 = i + 2;
      out = G__22829;
      i = G__22830;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var args22831 = [];
  var len__19806__auto___22836 = arguments.length;
  var i__19807__auto___22837 = 0;
  while (true) {
    if (i__19807__auto___22837 < len__19806__auto___22836) {
      args22831.push(arguments[i__19807__auto___22837]);
      var G__22838 = i__19807__auto___22837 + 1;
      i__19807__auto___22837 = G__22838;
      continue;
    } else {
    }
    break;
  }
  var G__22833 = args22831.length;
  switch(G__22833) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22831.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__22834 = cljs.core.aclone(arr);
  G__22834[i] = a;
  return G__22834;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__22835 = cljs.core.aclone(arr);
  G__22835[i] = a;
  G__22835[j] = b;
  return G__22835;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var args22840 = [];
  var len__19806__auto___22843 = arguments.length;
  var i__19807__auto___22844 = 0;
  while (true) {
    if (i__19807__auto___22844 < len__19806__auto___22843) {
      args22840.push(arguments[i__19807__auto___22844]);
      var G__22845 = i__19807__auto___22844 + 1;
      i__19807__auto___22844 = G__22845;
      continue;
    } else {
    }
    break;
  }
  var G__22842 = args22840.length;
  switch(G__22842) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22840.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__22850 = init__$1;
          var G__22851 = k;
          var G__22852 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22850, G__22851, G__22852) : f.call(null, G__22850, G__22851, G__22852);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__22853 = i + 2;
        var G__22854 = init__$2;
        i = G__22853;
        init__$1 = G__22854;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__18736__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__18736__auto__) {
    return or__18736__auto__;
  } else {
    var or__18736__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__18736__auto____$1) {
      return or__18736__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_22868 = 0;
        var j_22869 = 0;
        while (true) {
          if (i_22868 < 32) {
            if ((self__.bitmap >>> i_22868 & 1) === 0) {
              var G__22870 = i_22868 + 1;
              var G__22871 = j_22869;
              i_22868 = G__22870;
              j_22869 = G__22871;
              continue;
            } else {
              nodes[i_22868] = !(self__.arr[j_22869] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_22869]), self__.arr[j_22869], self__.arr[j_22869 + 1], added_leaf_QMARK_) : self__.arr[j_22869 + 1];
              var G__22872 = i_22868 + 1;
              var G__22873 = j_22869 + 2;
              i_22868 = G__22872;
              j_22869 = G__22873;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__22855 = edit__$1;
          var G__22856 = shift + 5;
          var G__22857 = key_or_nil;
          var G__22858 = val_or_node;
          var G__22859 = hash;
          var G__22860 = key;
          var G__22861 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22855, G__22856, G__22857, G__22858, G__22859, G__22860, G__22861) : cljs.core.create_node.call(null, G__22855, G__22856, G__22857, G__22858, G__22859, G__22860, G__22861);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_22874 = 0;
      var j_22875 = 0;
      while (true) {
        if (i_22874 < 32) {
          if ((self__.bitmap >>> i_22874 & 1) === 0) {
            var G__22876 = i_22874 + 1;
            var G__22877 = j_22875;
            i_22874 = G__22876;
            j_22875 = G__22877;
            continue;
          } else {
            nodes[i_22874] = !(self__.arr[j_22875] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_22875]), self__.arr[j_22875], self__.arr[j_22875 + 1], added_leaf_QMARK_) : self__.arr[j_22875 + 1];
            var G__22878 = i_22874 + 1;
            var G__22879 = j_22875 + 2;
            i_22874 = G__22878;
            j_22875 = G__22879;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__22862 = shift + 5;
          var G__22863 = key_or_nil;
          var G__22864 = val_or_node;
          var G__22865 = hash;
          var G__22866 = key;
          var G__22867 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22862, G__22863, G__22864, G__22865, G__22866, G__22867) : cljs.core.create_node.call(null, G__22862, G__22863, G__22864, G__22865, G__22866, G__22867);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__22880 = i + 1;
        var G__22881 = j + 2;
        var G__22882 = bitmap | 1 << i;
        i = G__22880;
        j = G__22881;
        bitmap = G__22882;
        continue;
      } else {
        var G__22883 = i + 1;
        var G__22884 = j;
        var G__22885 = bitmap;
        i = G__22883;
        j = G__22884;
        bitmap = G__22885;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__22886 = i + 1;
          var G__22887 = init__$2;
          i = G__22886;
          init__$1 = G__22887;
          continue;
        }
      } else {
        var G__22888 = i + 1;
        var G__22889 = init__$1;
        i = G__22888;
        init__$1 = G__22889;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__22890 = i + 2;
        i = G__22890;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var args22891 = [];
  var len__19806__auto___22894 = arguments.length;
  var i__19807__auto___22895 = 0;
  while (true) {
    if (i__19807__auto___22895 < len__19806__auto___22894) {
      args22891.push(arguments[i__19807__auto___22895]);
      var G__22896 = i__19807__auto___22895 + 1;
      i__19807__auto___22895 = G__22896;
      continue;
    } else {
    }
    break;
  }
  var G__22893 = args22891.length;
  switch(G__22893) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22891.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__22904 = null;
  var G__22904__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22904__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22904 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22904__1.call(this, x);
      case 2:
        return G__22904__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22904.cljs$core$IFn$_invoke$arity$1 = G__22904__1;
  G__22904.cljs$core$IFn$_invoke$arity$2 = G__22904__2;
  return G__22904;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__22905 = null;
  var G__22905__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22905__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22905 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22905__1.call(this, x);
      case 2:
        return G__22905__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22905.cljs$core$IFn$_invoke$arity$1 = G__22905__1;
  G__22905.cljs$core$IFn$_invoke$arity$2 = G__22905__2;
  return G__22905;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__22898 = self__.nodes;
    var G__22899 = self__.i + 2;
    var G__22900 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22898, G__22899, G__22900) : cljs.core.create_inode_seq.call(null, G__22898, G__22899, G__22900);
  } else {
    var G__22901 = self__.nodes;
    var G__22902 = self__.i;
    var G__22903 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22901, G__22902, G__22903) : cljs.core.create_inode_seq.call(null, G__22901, G__22902, G__22903);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var args22906 = [];
  var len__19806__auto___22909 = arguments.length;
  var i__19807__auto___22910 = 0;
  while (true) {
    if (i__19807__auto___22910 < len__19806__auto___22909) {
      args22906.push(arguments[i__19807__auto___22910]);
      var G__22911 = i__19807__auto___22910 + 1;
      i__19807__auto___22910 = G__22911;
      continue;
    } else {
    }
    break;
  }
  var G__22908 = args22906.length;
  switch(G__22908) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22906.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__22913 = j + 2;
              j = G__22913;
              continue;
            }
          } else {
            var G__22914 = j + 2;
            j = G__22914;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__22919 = null;
  var G__22919__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22919__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22919 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22919__1.call(this, x);
      case 2:
        return G__22919__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22919.cljs$core$IFn$_invoke$arity$1 = G__22919__1;
  G__22919.cljs$core$IFn$_invoke$arity$2 = G__22919__2;
  return G__22919;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__22920 = null;
  var G__22920__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22920__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22920 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22920__1.call(this, x);
      case 2:
        return G__22920__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22920.cljs$core$IFn$_invoke$arity$1 = G__22920__1;
  G__22920.cljs$core$IFn$_invoke$arity$2 = G__22920__2;
  return G__22920;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__22915 = null;
  var G__22916 = self__.nodes;
  var G__22917 = self__.i;
  var G__22918 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22915, G__22916, G__22917, G__22918) : cljs.core.create_array_node_seq.call(null, G__22915, G__22916, G__22917, G__22918);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var args22921 = [];
  var len__19806__auto___22924 = arguments.length;
  var i__19807__auto___22925 = 0;
  while (true) {
    if (i__19807__auto___22925 < len__19806__auto___22924) {
      args22921.push(arguments[i__19807__auto___22925]);
      var G__22926 = i__19807__auto___22925 + 1;
      i__19807__auto___22925 = G__22926;
      continue;
    } else {
    }
    break;
  }
  var G__22923 = args22921.length;
  switch(G__22923) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args22921.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__22928 = j + 1;
            j = G__22928;
            continue;
          }
        } else {
          var G__22929 = j + 1;
          j = G__22929;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__22931 = cljs.core.seq(coll);
  var chunk__22932 = null;
  var count__22933 = 0;
  var i__22934 = 0;
  while (true) {
    if (i__22934 < count__22933) {
      var vec__22935 = chunk__22932.cljs$core$IIndexed$_nth$arity$2(null, i__22934);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22935, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22935, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__22939 = seq__22931;
      var G__22940 = chunk__22932;
      var G__22941 = count__22933;
      var G__22942 = i__22934 + 1;
      seq__22931 = G__22939;
      chunk__22932 = G__22940;
      count__22933 = G__22941;
      i__22934 = G__22942;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__22931);
      if (temp__4657__auto__) {
        var seq__22931__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__22931__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__22931__$1);
          var G__22943 = cljs.core.chunk_rest(seq__22931__$1);
          var G__22944 = c__19547__auto__;
          var G__22945 = cljs.core.count(c__19547__auto__);
          var G__22946 = 0;
          seq__22931 = G__22943;
          chunk__22932 = G__22944;
          count__22933 = G__22945;
          i__22934 = G__22946;
          continue;
        } else {
          var vec__22936 = cljs.core.first(seq__22931__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22936, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22936, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__22947 = cljs.core.next(seq__22931__$1);
          var G__22948 = null;
          var G__22949 = 0;
          var G__22950 = 0;
          seq__22931 = G__22947;
          chunk__22932 = G__22948;
          count__22933 = G__22949;
          i__22934 = G__22950;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__22951 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__22952 = cljs.core.next(es);
          ret = G__22951;
          es = G__22952;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__22953 = null;
  var G__22953__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22953__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22953 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22953__2.call(this, self__, k);
      case 3:
        return G__22953__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22953.cljs$core$IFn$_invoke$arity$2 = G__22953__2;
  G__22953.cljs$core$IFn$_invoke$arity$3 = G__22953__3;
  return G__22953;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args22930) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22930)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__22954 = i + 2;
      var G__22955 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__22954;
      ret = G__22955;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__22956 = i + 1;
      var G__22957 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__22956;
      out = G__22957;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4655__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          var G__22959 = cljs.core.next(es);
          var G__22960 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__22959;
          tcoll__$1 = G__22960;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__22961 = ascending_QMARK_ ? t.left : t.right;
      var G__22962 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__22961;
      stack__$1 = G__22962;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__22963 = null;
  var G__22963__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22963__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22963 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22963__1.call(this, x);
      case 2:
        return G__22963__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22963.cljs$core$IFn$_invoke$arity$1 = G__22963__1;
  G__22963.cljs$core$IFn$_invoke$arity$2 = G__22963__2;
  return G__22963;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__22964 = null;
  var G__22964__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22964__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22964 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22964__1.call(this, x);
      case 2:
        return G__22964__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22964.cljs$core$IFn$_invoke$arity$1 = G__22964__1;
  G__22964.cljs$core$IFn$_invoke$arity$2 = G__22964__2;
  return G__22964;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__22974 = init__$1;
      var G__22975 = node.key;
      var G__22976 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22974, G__22975, G__22976) : f.call(null, G__22974, G__22975, G__22976);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__22978 = null;
  var G__22978__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22978__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22978 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22978__1.call(this, x);
      case 2:
        return G__22978__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22978.cljs$core$IFn$_invoke$arity$1 = G__22978__1;
  G__22978.cljs$core$IFn$_invoke$arity$2 = G__22978__2;
  return G__22978;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__22979 = null;
  var G__22979__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22979__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22979 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22979__1.call(this, x);
      case 2:
        return G__22979__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22979.cljs$core$IFn$_invoke$arity$1 = G__22979__1;
  G__22979.cljs$core$IFn$_invoke$arity$2 = G__22979__2;
  return G__22979;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__19570__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__19570__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__19570__auto____$1);
  }(), x__19570__auto__);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__22980 = null;
  var G__22980__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22980__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22980 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22980__2.call(this, self__, k);
      case 3:
        return G__22980__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22980.cljs$core$IFn$_invoke$arity$2 = G__22980__2;
  G__22980.cljs$core$IFn$_invoke$arity$3 = G__22980__3;
  return G__22980;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args22977) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22977)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__22982 = null;
  var G__22982__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__22982__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22982 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22982__1.call(this, x);
      case 2:
        return G__22982__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22982.cljs$core$IFn$_invoke$arity$1 = G__22982__1;
  G__22982.cljs$core$IFn$_invoke$arity$2 = G__22982__2;
  return G__22982;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__22983 = null;
  var G__22983__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__22983__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__22983 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__22983__1.call(this, x);
      case 2:
        return G__22983__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22983.cljs$core$IFn$_invoke$arity$1 = G__22983__1;
  G__22983.cljs$core$IFn$_invoke$arity$2 = G__22983__2;
  return G__22983;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  var x__19570__auto__ = self__.key;
  return cljs.core._conj(function() {
    var x__19570__auto____$1 = self__.val;
    return cljs.core._conj(cljs.core.List.EMPTY, x__19570__auto____$1);
  }(), x__19570__auto__);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__22984 = null;
  var G__22984__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__22984__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__22984 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__22984__2.call(this, self__, k);
      case 3:
        return G__22984__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__22984.cljs$core$IFn$_invoke$arity$2 = G__22984__2;
  G__22984.cljs$core$IFn$_invoke$arity$3 = G__22984__3;
  return G__22984;
}();
cljs.core.RedNode.prototype.apply = function(self__, args22981) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args22981)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__22997 = k;
      var G__22998 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22997, G__22998) : comp.call(null, G__22997, G__22998);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__23017 = k;
      var G__23018 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23017, G__23018) : comp.call(null, G__23017, G__23018);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__23028 = cljs.core.seq(coll);
  var chunk__23029 = null;
  var count__23030 = 0;
  var i__23031 = 0;
  while (true) {
    if (i__23031 < count__23030) {
      var vec__23032 = chunk__23029.cljs$core$IIndexed$_nth$arity$2(null, i__23031);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23032, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23032, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__23038 = seq__23028;
      var G__23039 = chunk__23029;
      var G__23040 = count__23030;
      var G__23041 = i__23031 + 1;
      seq__23028 = G__23038;
      chunk__23029 = G__23039;
      count__23030 = G__23040;
      i__23031 = G__23041;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23028);
      if (temp__4657__auto__) {
        var seq__23028__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23028__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__23028__$1);
          var G__23042 = cljs.core.chunk_rest(seq__23028__$1);
          var G__23043 = c__19547__auto__;
          var G__23044 = cljs.core.count(c__19547__auto__);
          var G__23045 = 0;
          seq__23028 = G__23042;
          chunk__23029 = G__23043;
          count__23030 = G__23044;
          i__23031 = G__23045;
          continue;
        } else {
          var vec__23033 = cljs.core.first(seq__23028__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23033, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23033, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__23046 = cljs.core.next(seq__23028__$1);
          var G__23047 = null;
          var G__23048 = 0;
          var G__23049 = 0;
          seq__23028 = G__23046;
          chunk__23029 = G__23047;
          count__23030 = G__23048;
          i__23031 = G__23049;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__23034 = k;
        var G__23035 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23034, G__23035) : self__.comp.call(null, G__23034, G__23035);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__23050 = t.left;
          t = G__23050;
          continue;
        } else {
          var G__23051 = t.right;
          t = G__23051;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__23052 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__23053 = cljs.core.next(es);
          ret = G__23052;
          es = G__23053;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__23054 = null;
  var G__23054__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23054__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23054 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23054__2.call(this, self__, k);
      case 3:
        return G__23054__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23054.cljs$core$IFn$_invoke$arity$2 = G__23054__2;
  G__23054.cljs$core$IFn$_invoke$arity$3 = G__23054__3;
  return G__23054;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args23027) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23027)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__23036 = k;
          var G__23037 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__23036, G__23037) : self__.comp.call(null, G__23036, G__23037);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__23055 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__23056 = t.left;
              stack = G__23055;
              t = G__23056;
              continue;
            } else {
              var G__23057 = stack;
              var G__23058 = t.right;
              stack = G__23057;
              t = G__23058;
              continue;
            }
          } else {
            if (c > 0) {
              var G__23059 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__23060 = t.right;
              stack = G__23059;
              t = G__23060;
              continue;
            } else {
              var G__23061 = stack;
              var G__23062 = t.left;
              stack = G__23061;
              t = G__23062;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23064 = arguments.length;
  var i__19807__auto___23065 = 0;
  while (true) {
    if (i__19807__auto___23065 < len__19806__auto___23064) {
      args__19813__auto__.push(arguments[i__19807__auto___23065]);
      var G__23066 = i__19807__auto___23065 + 1;
      i__19807__auto___23065 = G__23066;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__23067 = cljs.core.nnext(in$);
      var G__23068 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__23067;
      out = G__23068;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq23063) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23063));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23070 = arguments.length;
  var i__19807__auto___23071 = 0;
  while (true) {
    if (i__19807__auto___23071 < len__19806__auto___23070) {
      args__19813__auto__.push(arguments[i__19807__auto___23071]);
      var G__23072 = i__19807__auto___23071 + 1;
      i__19807__auto___23071 = G__23072;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq23069) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23069));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23076 = arguments.length;
  var i__19807__auto___23077 = 0;
  while (true) {
    if (i__19807__auto___23077 < len__19806__auto___23076) {
      args__19813__auto__.push(arguments[i__19807__auto___23077]);
      var G__23078 = i__19807__auto___23077 + 1;
      i__19807__auto___23077 = G__23078;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__23079 = cljs.core.nnext(kvs);
      kvs = G__23079;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq23073) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23073));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23081 = arguments.length;
  var i__19807__auto___23082 = 0;
  while (true) {
    if (i__19807__auto___23082 < len__19806__auto___23081) {
      args__19813__auto__.push(arguments[i__19807__auto___23082]);
      var G__23083 = i__19807__auto___23082 + 1;
      i__19807__auto___23082 = G__23083;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__23084 = cljs.core.nnext(in$);
      var G__23085 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__23084;
      out = G__23085;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq23080) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23080));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23088 = arguments.length;
  var i__19807__auto___23089 = 0;
  while (true) {
    if (i__19807__auto___23089 < len__19806__auto___23088) {
      args__19813__auto__.push(arguments[i__19807__auto___23089]);
      var G__23090 = i__19807__auto___23089 + 1;
      i__19807__auto___23089 = G__23090;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__23091 = cljs.core.nnext(in$);
      var G__23092 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__23091;
      out = G__23092;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq23086) {
  var G__23087 = cljs.core.first(seq23086);
  var seq23086__$1 = cljs.core.next(seq23086);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__23087, seq23086__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__23095 = null;
  var G__23095__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__23095__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__23095 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__23095__1.call(this, x);
      case 2:
        return G__23095__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23095.cljs$core$IFn$_invoke$arity$1 = G__23095__1;
  G__23095.cljs$core$IFn$_invoke$arity$2 = G__23095__2;
  return G__23095;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__23096 = null;
  var G__23096__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__23096__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__23096 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__23096__1.call(this, x);
      case 2:
        return G__23096__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23096.cljs$core$IFn$_invoke$arity$1 = G__23096__1;
  G__23096.cljs$core$IFn$_invoke$arity$2 = G__23096__2;
  return G__23096;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__23099 = null;
  var G__23099__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__23099__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__23099 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__23099__1.call(this, x);
      case 2:
        return G__23099__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23099.cljs$core$IFn$_invoke$arity$1 = G__23099__1;
  G__23099.cljs$core$IFn$_invoke$arity$2 = G__23099__2;
  return G__23099;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__23100 = null;
  var G__23100__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__23100__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__23100 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__23100__1.call(this, x);
      case 2:
        return G__23100__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23100.cljs$core$IFn$_invoke$arity$1 = G__23100__1;
  G__23100.cljs$core$IFn$_invoke$arity$2 = G__23100__2;
  return G__23100;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4657__auto__ = cljs.core.seq(hash_map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23104 = arguments.length;
  var i__19807__auto___23105 = 0;
  while (true) {
    if (i__19807__auto___23105 < len__19806__auto___23104) {
      args__19813__auto__.push(arguments[i__19807__auto___23105]);
      var G__23106 = i__19807__auto___23105 + 1;
      i__19807__auto___23105 = G__23106;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__23101_SHARP_, p2__23102_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__18736__auto__ = p1__23101_SHARP_;
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__23102_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq23103) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23103));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23111 = arguments.length;
  var i__19807__auto___23112 = 0;
  while (true) {
    if (i__19807__auto___23112 < len__19806__auto___23111) {
      args__19813__auto__.push(arguments[i__19807__auto___23112]);
      var G__23113 = i__19807__auto___23112 + 1;
      i__19807__auto___23112 = G__23113;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__23109 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__23110 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23109, G__23110) : f.call(null, G__23109, G__23110);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__18736__auto__ = m1;
          if (cljs.core.truth_(or__18736__auto__)) {
            return or__18736__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq23107) {
  var G__23108 = cljs.core.first(seq23107);
  var seq23107__$1 = cljs.core.next(seq23107);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__23108, seq23107__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__23114 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__23115 = cljs.core.next(keys);
      ret = G__23114;
      keys = G__23115;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__23118 = cljs.core.seq(coll);
  var chunk__23119 = null;
  var count__23120 = 0;
  var i__23121 = 0;
  while (true) {
    if (i__23121 < count__23120) {
      var vec__23122 = chunk__23119.cljs$core$IIndexed$_nth$arity$2(null, i__23121);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23122, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23122, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__23124 = seq__23118;
      var G__23125 = chunk__23119;
      var G__23126 = count__23120;
      var G__23127 = i__23121 + 1;
      seq__23118 = G__23124;
      chunk__23119 = G__23125;
      count__23120 = G__23126;
      i__23121 = G__23127;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23118);
      if (temp__4657__auto__) {
        var seq__23118__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23118__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__23118__$1);
          var G__23128 = cljs.core.chunk_rest(seq__23118__$1);
          var G__23129 = c__19547__auto__;
          var G__23130 = cljs.core.count(c__19547__auto__);
          var G__23131 = 0;
          seq__23118 = G__23128;
          chunk__23119 = G__23129;
          count__23120 = G__23130;
          i__23121 = G__23131;
          continue;
        } else {
          var vec__23123 = cljs.core.first(seq__23118__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23123, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23123, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__23132 = cljs.core.next(seq__23118__$1);
          var G__23133 = null;
          var G__23134 = 0;
          var G__23135 = 0;
          seq__23118 = G__23132;
          chunk__23119 = G__23133;
          count__23120 = G__23134;
          i__23121 = G__23135;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__23116_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__23116_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__23136 = null;
  var G__23136__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23136__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23136 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23136__2.call(this, self__, k);
      case 3:
        return G__23136__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23136.cljs$core$IFn$_invoke$arity$2 = G__23136__2;
  G__23136.cljs$core$IFn$_invoke$arity$3 = G__23136__3;
  return G__23136;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args23117) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23117)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__23137 = i + 1;
        var G__23138 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__23137;
        out = G__23138;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__23139 = i + 1;
        var G__23140 = cljs.core._conj_BANG_(out, items[i]);
        i = G__23139;
        out = G__23140;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__23142 = null;
  var G__23142__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__23142__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__23142 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23142__2.call(this, self__, k);
      case 3:
        return G__23142__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23142.cljs$core$IFn$_invoke$arity$2 = G__23142__2;
  G__23142.cljs$core$IFn$_invoke$arity$3 = G__23142__3;
  return G__23142;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args23141) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23141)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__23145 = cljs.core.seq(coll);
  var chunk__23146 = null;
  var count__23147 = 0;
  var i__23148 = 0;
  while (true) {
    if (i__23148 < count__23147) {
      var vec__23149 = chunk__23146.cljs$core$IIndexed$_nth$arity$2(null, i__23148);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23149, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23149, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__23151 = seq__23145;
      var G__23152 = chunk__23146;
      var G__23153 = count__23147;
      var G__23154 = i__23148 + 1;
      seq__23145 = G__23151;
      chunk__23146 = G__23152;
      count__23147 = G__23153;
      i__23148 = G__23154;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23145);
      if (temp__4657__auto__) {
        var seq__23145__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23145__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__23145__$1);
          var G__23155 = cljs.core.chunk_rest(seq__23145__$1);
          var G__23156 = c__19547__auto__;
          var G__23157 = cljs.core.count(c__19547__auto__);
          var G__23158 = 0;
          seq__23145 = G__23155;
          chunk__23146 = G__23156;
          count__23147 = G__23157;
          i__23148 = G__23158;
          continue;
        } else {
          var vec__23150 = cljs.core.first(seq__23145__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23150, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23150, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__23159 = cljs.core.next(seq__23145__$1);
          var G__23160 = null;
          var G__23161 = 0;
          var G__23162 = 0;
          seq__23145 = G__23159;
          chunk__23146 = G__23160;
          count__23147 = G__23161;
          i__23148 = G__23162;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__23143_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__23143_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__23163 = null;
  var G__23163__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__23163__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__23163 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__23163__2.call(this, self__, k);
      case 3:
        return G__23163__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23163.cljs$core$IFn$_invoke$arity$2 = G__23163__2;
  G__23163.cljs$core$IFn$_invoke$arity$3 = G__23163__3;
  return G__23163;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args23144) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23144)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__19645__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__19645__auto__.length) {
        var G__23164 = i + 1;
        var G__23165 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__23164;
        res = G__23165;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__23166 = cljs.core.next(in$__$1);
          var G__23167 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__23166;
          out = G__23167;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var args23168 = [];
  var len__19806__auto___23172 = arguments.length;
  var i__19807__auto___23173 = 0;
  while (true) {
    if (i__19807__auto___23173 < len__19806__auto___23172) {
      args23168.push(arguments[i__19807__auto___23173]);
      var G__23174 = i__19807__auto___23173 + 1;
      i__19807__auto___23173 = G__23174;
      continue;
    } else {
    }
    break;
  }
  var G__23171 = args23168.length;
  switch(G__23171) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args23168.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__19825__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq23169) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23169));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23177 = arguments.length;
  var i__19807__auto___23178 = 0;
  while (true) {
    if (i__19807__auto___23178 < len__19806__auto___23177) {
      args__19813__auto__.push(arguments[i__19807__auto___23178]);
      var G__23179 = i__19807__auto___23178 + 1;
      i__19807__auto___23178 = G__23179;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq23176) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23176));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23182 = arguments.length;
  var i__19807__auto___23183 = 0;
  while (true) {
    if (i__19807__auto___23183 < len__19806__auto___23182) {
      args__19813__auto__.push(arguments[i__19807__auto___23183]);
      var G__23184 = i__19807__auto___23183 + 1;
      i__19807__auto___23183 = G__23184;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq23180) {
  var G__23181 = cljs.core.first(seq23180);
  var seq23180__$1 = cljs.core.next(seq23180);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__23181, seq23180__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var args23187 = [];
  var len__19806__auto___23190 = arguments.length;
  var i__19807__auto___23191 = 0;
  while (true) {
    if (i__19807__auto___23191 < len__19806__auto___23190) {
      args23187.push(arguments[i__19807__auto___23191]);
      var G__23192 = i__19807__auto___23191 + 1;
      i__19807__auto___23191 = G__23192;
      continue;
    } else {
    }
    break;
  }
  var G__23189 = args23187.length;
  switch(G__23189) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23187.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__23185_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__23185_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__23185_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4655__auto__)) {
          var e = temp__4655__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__23186_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__23186_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__23186_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var args23194 = [];
  var len__19806__auto___23203 = arguments.length;
  var i__19807__auto___23204 = 0;
  while (true) {
    if (i__19807__auto___23204 < len__19806__auto___23203) {
      args23194.push(arguments[i__19807__auto___23204]);
      var G__23205 = i__19807__auto___23204 + 1;
      i__19807__auto___23204 = G__23205;
      continue;
    } else {
    }
    break;
  }
  var G__23196 = args23194.length;
  switch(G__23196) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23194.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__23207 = null;
        var G__23207__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23207__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23207__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23207 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23207__0.call(this);
            case 1:
              return G__23207__1.call(this, result);
            case 2:
              return G__23207__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23207.cljs$core$IFn$_invoke$arity$0 = G__23207__0;
        G__23207.cljs$core$IFn$_invoke$arity$1 = G__23207__1;
        G__23207.cljs$core$IFn$_invoke$arity$2 = G__23207__2;
        return G__23207;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__23201, seen__$1) {
        while (true) {
          var vec__23202 = p__23201;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23202, 0, null);
          var xs__$1 = vec__23202;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__23208 = cljs.core.rest(s);
              var G__23209 = seen__$1;
              p__23201 = G__23208;
              seen__$1 = G__23209;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__23210 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__23211 = cljs.core.next(s__$1);
      ret = G__23210;
      s__$1 = G__23211;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__23214 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__23215 = cljs.core.next(ks);
      var G__23216 = cljs.core.next(vs);
      map = G__23214;
      ks = G__23215;
      vs = G__23216;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var args23219 = [];
  var len__19806__auto___23226 = arguments.length;
  var i__19807__auto___23227 = 0;
  while (true) {
    if (i__19807__auto___23227 < len__19806__auto___23226) {
      args23219.push(arguments[i__19807__auto___23227]);
      var G__23228 = i__19807__auto___23227 + 1;
      i__19807__auto___23227 = G__23228;
      continue;
    } else {
    }
    break;
  }
  var G__23225 = args23219.length;
  switch(G__23225) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args23219.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23217_SHARP_, p2__23218_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__23217_SHARP_, p2__23218_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq23220) {
  var G__23221 = cljs.core.first(seq23220);
  var seq23220__$1 = cljs.core.next(seq23220);
  var G__23222 = cljs.core.first(seq23220__$1);
  var seq23220__$2 = cljs.core.next(seq23220__$1);
  var G__23223 = cljs.core.first(seq23220__$2);
  var seq23220__$3 = cljs.core.next(seq23220__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__23221, G__23222, G__23223, seq23220__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var args23232 = [];
  var len__19806__auto___23239 = arguments.length;
  var i__19807__auto___23240 = 0;
  while (true) {
    if (i__19807__auto___23240 < len__19806__auto___23239) {
      args23232.push(arguments[i__19807__auto___23240]);
      var G__23241 = i__19807__auto___23240 + 1;
      i__19807__auto___23240 = G__23241;
      continue;
    } else {
    }
    break;
  }
  var G__23238 = args23232.length;
  switch(G__23238) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args23232.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23230_SHARP_, p2__23231_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__23230_SHARP_, p2__23231_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq23233) {
  var G__23234 = cljs.core.first(seq23233);
  var seq23233__$1 = cljs.core.next(seq23233);
  var G__23235 = cljs.core.first(seq23233__$1);
  var seq23233__$2 = cljs.core.next(seq23233__$1);
  var G__23236 = cljs.core.first(seq23233__$2);
  var seq23233__$3 = cljs.core.next(seq23233__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__23234, G__23235, G__23236, seq23233__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var args23243 = [];
  var len__19806__auto___23246 = arguments.length;
  var i__19807__auto___23247 = 0;
  while (true) {
    if (i__19807__auto___23247 < len__19806__auto___23246) {
      args23243.push(arguments[i__19807__auto___23247]);
      var G__23248 = i__19807__auto___23247 + 1;
      i__19807__auto___23247 = G__23248;
      continue;
    } else {
    }
    break;
  }
  var G__23245 = args23243.length;
  switch(G__23245) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23243.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__23250 = null;
        var G__23250__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23250__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__23250__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__23250 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23250__0.call(this);
            case 1:
              return G__23250__1.call(this, result);
            case 2:
              return G__23250__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23250.cljs$core$IFn$_invoke$arity$0 = G__23250__0;
        G__23250.cljs$core$IFn$_invoke$arity$1 = G__23250__1;
        G__23250.cljs$core$IFn$_invoke$arity$2 = G__23250__2;
        return G__23250;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var args23251 = [];
  var len__19806__auto___23255 = arguments.length;
  var i__19807__auto___23256 = 0;
  while (true) {
    if (i__19807__auto___23256 < len__19806__auto___23255) {
      args23251.push(arguments[i__19807__auto___23256]);
      var G__23257 = i__19807__auto___23256 + 1;
      i__19807__auto___23256 = G__23257;
      continue;
    } else {
    }
    break;
  }
  var G__23253 = args23251.length;
  switch(G__23253) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23251.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__23259 = null;
      var G__23259__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23259__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23259__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__23259 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__23259__0.call(this);
          case 1:
            return G__23259__1.call(this, result);
          case 2:
            return G__23259__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23259.cljs$core$IFn$_invoke$arity$0 = G__23259__0;
      G__23259.cljs$core$IFn$_invoke$arity$1 = G__23259__1;
      G__23259.cljs$core$IFn$_invoke$arity$2 = G__23259__2;
      return G__23259;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__23254 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__23254) : pred.call(null, G__23254);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__23268 = function() {
      var G__23270 = cljs.core._entry_key(sc, e);
      var G__23271 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__23270, G__23271) : comp.call(null, G__23270, G__23271);
    }();
    var G__23269 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__23268, G__23269) : test.call(null, G__23268, G__23269);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var args23272 = [];
  var len__19806__auto___23277 = arguments.length;
  var i__19807__auto___23278 = 0;
  while (true) {
    if (i__19807__auto___23278 < len__19806__auto___23277) {
      args23272.push(arguments[i__19807__auto___23278]);
      var G__23279 = i__19807__auto___23278 + 1;
      i__19807__auto___23278 = G__23279;
      continue;
    } else {
    }
    break;
  }
  var G__23274 = args23272.length;
  switch(G__23274) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23272.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__23275 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23275, 0, null);
      var s = vec__23275;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__23276 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23276, 0, null);
    var s = vec__23276;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var args23281 = [];
  var len__19806__auto___23286 = arguments.length;
  var i__19807__auto___23287 = 0;
  while (true) {
    if (i__19807__auto___23287 < len__19806__auto___23286) {
      args23281.push(arguments[i__19807__auto___23287]);
      var G__23288 = i__19807__auto___23287 + 1;
      i__19807__auto___23287 = G__23288;
      continue;
    } else {
    }
    break;
  }
  var G__23283 = args23281.length;
  switch(G__23283) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23281.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__23284 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23284, 0, null);
      var s = vec__23284;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__23285 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23285, 0, null);
    var s = vec__23285;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__23291 = null;
  var G__23291__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__23291__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__23291 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__23291__1.call(this, x);
      case 2:
        return G__23291__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23291.cljs$core$IFn$_invoke$arity$1 = G__23291__1;
  G__23291.cljs$core$IFn$_invoke$arity$2 = G__23291__2;
  return G__23291;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__23292 = null;
  var G__23292__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__23292__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__23292 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__23292__1.call(this, x);
      case 2:
        return G__23292__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23292.cljs$core$IFn$_invoke$arity$1 = G__23292__1;
  G__23292.cljs$core$IFn$_invoke$arity$2 = G__23292__2;
  return G__23292;
}();
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__23290 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__23290);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__23293 = i + self__.step;
        var G__23294 = ret__$1;
        i = G__23293;
        ret = G__23294;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.step < 0) {
      if (self__.start > self__.end) {
        return rng__$1;
      } else {
        return null;
      }
    } else {
      if (self__.start === self__.end) {
        return null;
      } else {
        return rng__$1;
      }
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.range = function cljs$core$range(var_args) {
  var args23295 = [];
  var len__19806__auto___23298 = arguments.length;
  var i__19807__auto___23299 = 0;
  while (true) {
    if (i__19807__auto___23299 < len__19806__auto___23298) {
      args23295.push(arguments[i__19807__auto___23299]);
      var G__23300 = i__19807__auto___23299 + 1;
      i__19807__auto___23299 = G__23300;
      continue;
    } else {
    }
    break;
  }
  var G__23297 = args23295.length;
  switch(G__23297) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23295.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var args23302 = [];
  var len__19806__auto___23305 = arguments.length;
  var i__19807__auto___23306 = 0;
  while (true) {
    if (i__19807__auto___23306 < len__19806__auto___23305) {
      args23302.push(arguments[i__19807__auto___23306]);
      var G__23307 = i__19807__auto___23306 + 1;
      i__19807__auto___23306 = G__23307;
      continue;
    } else {
    }
    break;
  }
  var G__23304 = args23302.length;
  switch(G__23304) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23302.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__23309 = null;
        var G__23309__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23309__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23309__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__23309 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23309__0.call(this);
            case 1:
              return G__23309__1.call(this, result);
            case 2:
              return G__23309__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23309.cljs$core$IFn$_invoke$arity$0 = G__23309__0;
        G__23309.cljs$core$IFn$_invoke$arity$1 = G__23309__1;
        G__23309.cljs$core$IFn$_invoke$arity$2 = G__23309__2;
        return G__23309;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var args23311 = [];
  var len__19806__auto___23314 = arguments.length;
  var i__19807__auto___23315 = 0;
  while (true) {
    if (i__19807__auto___23315 < len__19806__auto___23314) {
      args23311.push(arguments[i__19807__auto___23315]);
      var G__23316 = i__19807__auto___23315 + 1;
      i__19807__auto___23315 = G__23316;
      continue;
    } else {
    }
    break;
  }
  var G__23313 = args23311.length;
  switch(G__23313) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23311.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__23318 = null;
        var G__23318__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23318__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__23318__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__23318 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23318__0.call(this);
            case 1:
              return G__23318__1.call(this, result);
            case 2:
              return G__23318__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23318.cljs$core$IFn$_invoke$arity$0 = G__23318__0;
        G__23318.cljs$core$IFn$_invoke$arity$1 = G__23318__1;
        G__23318.cljs$core$IFn$_invoke$arity$2 = G__23318__2;
        return G__23318;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4657__auto__) {
        return function(p1__23310_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__23310_SHARP_) : f.call(null, p1__23310_SHARP_));
        };
      }(fst, fv, s, temp__4657__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var args23319 = [];
  var len__19806__auto___23324 = arguments.length;
  var i__19807__auto___23325 = 0;
  while (true) {
    if (i__19807__auto___23325 < len__19806__auto___23324) {
      args23319.push(arguments[i__19807__auto___23325]);
      var G__23326 = i__19807__auto___23325 + 1;
      i__19807__auto___23325 = G__23326;
      continue;
    } else {
    }
    break;
  }
  var G__23321 = args23319.length;
  switch(G__23321) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23319.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      var x__19570__auto__ = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      return cljs.core._conj(cljs.core.List.EMPTY, x__19570__auto__);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__23322 = init;
        var G__23323 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23322, G__23323) : f.call(null, G__23322, G__23323);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var args23338 = [];
  var len__19806__auto___23345 = arguments.length;
  var i__19807__auto___23346 = 0;
  while (true) {
    if (i__19807__auto___23346 < len__19806__auto___23345) {
      args23338.push(arguments[i__19807__auto___23346]);
      var G__23347 = i__19807__auto___23346 + 1;
      i__19807__auto___23346 = G__23347;
      continue;
    } else {
    }
    break;
  }
  var G__23344 = args23338.length;
  switch(G__23344) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args23338.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19825__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__23349 = null;
    var G__23349__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__23349__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__23349__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__23349__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__23349__4 = function() {
      var G__23350__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__23350 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23351__i = 0, G__23351__a = new Array(arguments.length - 3);
          while (G__23351__i < G__23351__a.length) {
            G__23351__a[G__23351__i] = arguments[G__23351__i + 3];
            ++G__23351__i;
          }
          args = new cljs.core.IndexedSeq(G__23351__a, 0);
        }
        return G__23350__delegate.call(this, x, y, z, args);
      };
      G__23350.cljs$lang$maxFixedArity = 3;
      G__23350.cljs$lang$applyTo = function(arglist__23352) {
        var x = cljs.core.first(arglist__23352);
        arglist__23352 = cljs.core.next(arglist__23352);
        var y = cljs.core.first(arglist__23352);
        arglist__23352 = cljs.core.next(arglist__23352);
        var z = cljs.core.first(arglist__23352);
        var args = cljs.core.rest(arglist__23352);
        return G__23350__delegate(x, y, z, args);
      };
      G__23350.cljs$core$IFn$_invoke$arity$variadic = G__23350__delegate;
      return G__23350;
    }();
    G__23349 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23349__0.call(this);
        case 1:
          return G__23349__1.call(this, x);
        case 2:
          return G__23349__2.call(this, x, y);
        case 3:
          return G__23349__3.call(this, x, y, z);
        default:
          var G__23353 = null;
          if (arguments.length > 3) {
            var G__23354__i = 0, G__23354__a = new Array(arguments.length - 3);
            while (G__23354__i < G__23354__a.length) {
              G__23354__a[G__23354__i] = arguments[G__23354__i + 3];
              ++G__23354__i;
            }
            G__23353 = new cljs.core.IndexedSeq(G__23354__a, 0);
          }
          return G__23349__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23353);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23349.cljs$lang$maxFixedArity = 3;
    G__23349.cljs$lang$applyTo = G__23349__4.cljs$lang$applyTo;
    G__23349.cljs$core$IFn$_invoke$arity$0 = G__23349__0;
    G__23349.cljs$core$IFn$_invoke$arity$1 = G__23349__1;
    G__23349.cljs$core$IFn$_invoke$arity$2 = G__23349__2;
    G__23349.cljs$core$IFn$_invoke$arity$3 = G__23349__3;
    G__23349.cljs$core$IFn$_invoke$arity$variadic = G__23349__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23349;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__23355 = null;
    var G__23355__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__23355__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__23355__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__23355__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__23355__4 = function() {
      var G__23356__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__23356 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23357__i = 0, G__23357__a = new Array(arguments.length - 3);
          while (G__23357__i < G__23357__a.length) {
            G__23357__a[G__23357__i] = arguments[G__23357__i + 3];
            ++G__23357__i;
          }
          args = new cljs.core.IndexedSeq(G__23357__a, 0);
        }
        return G__23356__delegate.call(this, x, y, z, args);
      };
      G__23356.cljs$lang$maxFixedArity = 3;
      G__23356.cljs$lang$applyTo = function(arglist__23358) {
        var x = cljs.core.first(arglist__23358);
        arglist__23358 = cljs.core.next(arglist__23358);
        var y = cljs.core.first(arglist__23358);
        arglist__23358 = cljs.core.next(arglist__23358);
        var z = cljs.core.first(arglist__23358);
        var args = cljs.core.rest(arglist__23358);
        return G__23356__delegate(x, y, z, args);
      };
      G__23356.cljs$core$IFn$_invoke$arity$variadic = G__23356__delegate;
      return G__23356;
    }();
    G__23355 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23355__0.call(this);
        case 1:
          return G__23355__1.call(this, x);
        case 2:
          return G__23355__2.call(this, x, y);
        case 3:
          return G__23355__3.call(this, x, y, z);
        default:
          var G__23359 = null;
          if (arguments.length > 3) {
            var G__23360__i = 0, G__23360__a = new Array(arguments.length - 3);
            while (G__23360__i < G__23360__a.length) {
              G__23360__a[G__23360__i] = arguments[G__23360__i + 3];
              ++G__23360__i;
            }
            G__23359 = new cljs.core.IndexedSeq(G__23360__a, 0);
          }
          return G__23355__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23359);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23355.cljs$lang$maxFixedArity = 3;
    G__23355.cljs$lang$applyTo = G__23355__4.cljs$lang$applyTo;
    G__23355.cljs$core$IFn$_invoke$arity$0 = G__23355__0;
    G__23355.cljs$core$IFn$_invoke$arity$1 = G__23355__1;
    G__23355.cljs$core$IFn$_invoke$arity$2 = G__23355__2;
    G__23355.cljs$core$IFn$_invoke$arity$3 = G__23355__3;
    G__23355.cljs$core$IFn$_invoke$arity$variadic = G__23355__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23355;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__23361 = null;
    var G__23361__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__23361__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__23361__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__23361__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__23361__4 = function() {
      var G__23362__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__23362 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__23363__i = 0, G__23363__a = new Array(arguments.length - 3);
          while (G__23363__i < G__23363__a.length) {
            G__23363__a[G__23363__i] = arguments[G__23363__i + 3];
            ++G__23363__i;
          }
          args = new cljs.core.IndexedSeq(G__23363__a, 0);
        }
        return G__23362__delegate.call(this, x, y, z, args);
      };
      G__23362.cljs$lang$maxFixedArity = 3;
      G__23362.cljs$lang$applyTo = function(arglist__23364) {
        var x = cljs.core.first(arglist__23364);
        arglist__23364 = cljs.core.next(arglist__23364);
        var y = cljs.core.first(arglist__23364);
        arglist__23364 = cljs.core.next(arglist__23364);
        var z = cljs.core.first(arglist__23364);
        var args = cljs.core.rest(arglist__23364);
        return G__23362__delegate(x, y, z, args);
      };
      G__23362.cljs$core$IFn$_invoke$arity$variadic = G__23362__delegate;
      return G__23362;
    }();
    G__23361 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__23361__0.call(this);
        case 1:
          return G__23361__1.call(this, x);
        case 2:
          return G__23361__2.call(this, x, y);
        case 3:
          return G__23361__3.call(this, x, y, z);
        default:
          var G__23365 = null;
          if (arguments.length > 3) {
            var G__23366__i = 0, G__23366__a = new Array(arguments.length - 3);
            while (G__23366__i < G__23366__a.length) {
              G__23366__a[G__23366__i] = arguments[G__23366__i + 3];
              ++G__23366__i;
            }
            G__23365 = new cljs.core.IndexedSeq(G__23366__a, 0);
          }
          return G__23361__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23365);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__23361.cljs$lang$maxFixedArity = 3;
    G__23361.cljs$lang$applyTo = G__23361__4.cljs$lang$applyTo;
    G__23361.cljs$core$IFn$_invoke$arity$0 = G__23361__0;
    G__23361.cljs$core$IFn$_invoke$arity$1 = G__23361__1;
    G__23361.cljs$core$IFn$_invoke$arity$2 = G__23361__2;
    G__23361.cljs$core$IFn$_invoke$arity$3 = G__23361__3;
    G__23361.cljs$core$IFn$_invoke$arity$variadic = G__23361__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__23361;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__23367 = null;
      var G__23367__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23328_SHARP_, p2__23329_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23328_SHARP_, p2__23329_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23329_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23329_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23367__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23330_SHARP_, p2__23331_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23330_SHARP_, p2__23331_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23331_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__23331_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23367__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23332_SHARP_, p2__23333_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23332_SHARP_, p2__23333_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23333_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__23333_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23367__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__23334_SHARP_, p2__23335_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23334_SHARP_, p2__23335_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23335_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__23335_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__23367__4 = function() {
        var G__23368__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__23336_SHARP_, p2__23337_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23336_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23337_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__23368 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__23369__i = 0, G__23369__a = new Array(arguments.length - 3);
            while (G__23369__i < G__23369__a.length) {
              G__23369__a[G__23369__i] = arguments[G__23369__i + 3];
              ++G__23369__i;
            }
            args = new cljs.core.IndexedSeq(G__23369__a, 0);
          }
          return G__23368__delegate.call(this, x, y, z, args);
        };
        G__23368.cljs$lang$maxFixedArity = 3;
        G__23368.cljs$lang$applyTo = function(arglist__23370) {
          var x = cljs.core.first(arglist__23370);
          arglist__23370 = cljs.core.next(arglist__23370);
          var y = cljs.core.first(arglist__23370);
          arglist__23370 = cljs.core.next(arglist__23370);
          var z = cljs.core.first(arglist__23370);
          var args = cljs.core.rest(arglist__23370);
          return G__23368__delegate(x, y, z, args);
        };
        G__23368.cljs$core$IFn$_invoke$arity$variadic = G__23368__delegate;
        return G__23368;
      }();
      G__23367 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__23367__0.call(this);
          case 1:
            return G__23367__1.call(this, x);
          case 2:
            return G__23367__2.call(this, x, y);
          case 3:
            return G__23367__3.call(this, x, y, z);
          default:
            var G__23371 = null;
            if (arguments.length > 3) {
              var G__23372__i = 0, G__23372__a = new Array(arguments.length - 3);
              while (G__23372__i < G__23372__a.length) {
                G__23372__a[G__23372__i] = arguments[G__23372__i + 3];
                ++G__23372__i;
              }
              G__23371 = new cljs.core.IndexedSeq(G__23372__a, 0);
            }
            return G__23367__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__23371);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23367.cljs$lang$maxFixedArity = 3;
      G__23367.cljs$lang$applyTo = G__23367__4.cljs$lang$applyTo;
      G__23367.cljs$core$IFn$_invoke$arity$0 = G__23367__0;
      G__23367.cljs$core$IFn$_invoke$arity$1 = G__23367__1;
      G__23367.cljs$core$IFn$_invoke$arity$2 = G__23367__2;
      G__23367.cljs$core$IFn$_invoke$arity$3 = G__23367__3;
      G__23367.cljs$core$IFn$_invoke$arity$variadic = G__23367__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__23367;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq23339) {
  var G__23340 = cljs.core.first(seq23339);
  var seq23339__$1 = cljs.core.next(seq23339);
  var G__23341 = cljs.core.first(seq23339__$1);
  var seq23339__$2 = cljs.core.next(seq23339__$1);
  var G__23342 = cljs.core.first(seq23339__$2);
  var seq23339__$3 = cljs.core.next(seq23339__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__23340, G__23341, G__23342, seq23339__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var args23373 = [];
  var len__19806__auto___23376 = arguments.length;
  var i__19807__auto___23377 = 0;
  while (true) {
    if (i__19807__auto___23377 < len__19806__auto___23376) {
      args23373.push(arguments[i__19807__auto___23377]);
      var G__23378 = i__19807__auto___23377 + 1;
      i__19807__auto___23377 = G__23378;
      continue;
    } else {
    }
    break;
  }
  var G__23375 = args23373.length;
  switch(G__23375) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23373.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__23380 = cljs.core.next(coll);
      coll = G__23380;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__23381 = n - 1;
      var G__23382 = cljs.core.next(coll);
      n = G__23381;
      coll = G__23382;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var args23383 = [];
  var len__19806__auto___23386 = arguments.length;
  var i__19807__auto___23387 = 0;
  while (true) {
    if (i__19807__auto___23387 < len__19806__auto___23386) {
      args23383.push(arguments[i__19807__auto___23387]);
      var G__23388 = i__19807__auto___23387 + 1;
      i__19807__auto___23387 = G__23388;
      continue;
    } else {
    }
    break;
  }
  var G__23385 = args23383.length;
  switch(G__23385) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23383.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__23391 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23391, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23391, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__18736__auto__ = flags;
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_23399 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__18736__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__23400_23406 = cljs.core.first(coll);
          var G__23401_23407 = writer;
          var G__23402_23408 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23400_23406, G__23401_23407, G__23402_23408) : print_one.call(null, G__23400_23406, G__23401_23407, G__23402_23408);
        } else {
        }
        var coll_23409__$1 = cljs.core.next(coll);
        var n_23410 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_23409__$1 && (n_23410 == null || !(n_23410 === 0))) {
            cljs.core._write(writer, sep);
            var G__23403_23411 = cljs.core.first(coll_23409__$1);
            var G__23404_23412 = writer;
            var G__23405_23413 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23403_23411, G__23404_23412, G__23405_23413) : print_one.call(null, G__23403_23411, G__23404_23412, G__23405_23413);
            var G__23414 = cljs.core.next(coll_23409__$1);
            var G__23415 = n_23410 - 1;
            coll_23409__$1 = G__23414;
            n_23410 = G__23415;
            continue;
          } else {
            if (cljs.core.seq(coll_23409__$1) && n_23410 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__18736__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__18736__auto__)) {
                  return or__18736__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23399;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23422 = arguments.length;
  var i__19807__auto___23423 = 0;
  while (true) {
    if (i__19807__auto___23423 < len__19806__auto___23422) {
      args__19813__auto__.push(arguments[i__19807__auto___23423]);
      var G__23424 = i__19807__auto___23423 + 1;
      i__19807__auto___23423 = G__23424;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__23418 = cljs.core.seq(ss);
  var chunk__23419 = null;
  var count__23420 = 0;
  var i__23421 = 0;
  while (true) {
    if (i__23421 < count__23420) {
      var s = chunk__23419.cljs$core$IIndexed$_nth$arity$2(null, i__23421);
      cljs.core._write(writer, s);
      var G__23425 = seq__23418;
      var G__23426 = chunk__23419;
      var G__23427 = count__23420;
      var G__23428 = i__23421 + 1;
      seq__23418 = G__23425;
      chunk__23419 = G__23426;
      count__23420 = G__23427;
      i__23421 = G__23428;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23418);
      if (temp__4657__auto__) {
        var seq__23418__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23418__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__23418__$1);
          var G__23429 = cljs.core.chunk_rest(seq__23418__$1);
          var G__23430 = c__19547__auto__;
          var G__23431 = cljs.core.count(c__19547__auto__);
          var G__23432 = 0;
          seq__23418 = G__23429;
          chunk__23419 = G__23430;
          count__23420 = G__23431;
          i__23421 = G__23432;
          continue;
        } else {
          var s = cljs.core.first(seq__23418__$1);
          cljs.core._write(writer, s);
          var G__23433 = cljs.core.next(seq__23418__$1);
          var G__23434 = null;
          var G__23435 = 0;
          var G__23436 = 0;
          seq__23418 = G__23433;
          chunk__23419 = G__23434;
          count__23420 = G__23435;
          i__23421 = G__23436;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq23416) {
  var G__23417 = cljs.core.first(seq23416);
  var seq23416__$1 = cljs.core.next(seq23416);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__23417, seq23416__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj23438 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj23438;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__18724__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__18724__auto__) {
    var and__18724__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__18724__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__18724__auto____$1;
    }
  } else {
    return and__18724__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__23453_23461 = cljs.core.meta(obj);
      var G__23454_23462 = writer;
      var G__23455_23463 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__23453_23461, G__23454_23462, G__23455_23463) : cljs.core.pr_writer.call(null, G__23453_23461, G__23454_23462, G__23455_23463);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__23457 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__23458 = cljs.core.pr_writer;
            var G__23459 = writer;
            var G__23460 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23457, G__23458, G__23459, G__23460) : cljs.core.print_map.call(null, G__23457, G__23458, G__23459, G__23460);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__18736__auto__ = name == null;
                    if (or__18736__auto__) {
                      return or__18736__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__23464 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__23464;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                      } else {
                        var name = obj.constructor.name;
                        var name__$1 = cljs.core.truth_(function() {
                          var or__18736__auto__ = name == null;
                          if (or__18736__auto__) {
                            return or__18736__auto__;
                          } else {
                            return goog.string.isEmpty(name);
                          }
                        }()) ? "Object" : name;
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__23468 = obj;
    var G__23469 = writer;
    var G__23470 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__23468, G__23469, G__23470) : alt_impl.call(null, G__23468, G__23469, G__23470);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__23475 = cljs.core.seq(cljs.core.next(objs));
  var chunk__23476 = null;
  var count__23477 = 0;
  var i__23478 = 0;
  while (true) {
    if (i__23478 < count__23477) {
      var obj = chunk__23476.cljs$core$IIndexed$_nth$arity$2(null, i__23478);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__23479 = seq__23475;
      var G__23480 = chunk__23476;
      var G__23481 = count__23477;
      var G__23482 = i__23478 + 1;
      seq__23475 = G__23479;
      chunk__23476 = G__23480;
      count__23477 = G__23481;
      i__23478 = G__23482;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__23475);
      if (temp__4657__auto__) {
        var seq__23475__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__23475__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first(seq__23475__$1);
          var G__23483 = cljs.core.chunk_rest(seq__23475__$1);
          var G__23484 = c__19547__auto__;
          var G__23485 = cljs.core.count(c__19547__auto__);
          var G__23486 = 0;
          seq__23475 = G__23483;
          chunk__23476 = G__23484;
          count__23477 = G__23485;
          i__23478 = G__23486;
          continue;
        } else {
          var obj = cljs.core.first(seq__23475__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__23487 = cljs.core.next(seq__23475__$1);
          var G__23488 = null;
          var G__23489 = 0;
          var G__23490 = 0;
          seq__23475 = G__23487;
          chunk__23476 = G__23488;
          count__23477 = G__23489;
          i__23478 = G__23490;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var args23491 = [];
  var len__19806__auto___23494 = arguments.length;
  var i__19807__auto___23495 = 0;
  while (true) {
    if (i__19807__auto___23495 < len__19806__auto___23494) {
      args23491.push(arguments[i__19807__auto___23495]);
      var G__23496 = i__19807__auto___23495 + 1;
      i__19807__auto___23495 = G__23496;
      continue;
    } else {
    }
    break;
  }
  var G__23493 = args23491.length;
  switch(G__23493) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23491.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23499 = arguments.length;
  var i__19807__auto___23500 = 0;
  while (true) {
    if (i__19807__auto___23500 < len__19806__auto___23499) {
      args__19813__auto__.push(arguments[i__19807__auto___23500]);
      var G__23501 = i__19807__auto___23500 + 1;
      i__19807__auto___23500 = G__23501;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq23498) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23498));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23503 = arguments.length;
  var i__19807__auto___23504 = 0;
  while (true) {
    if (i__19807__auto___23504 < len__19806__auto___23503) {
      args__19813__auto__.push(arguments[i__19807__auto___23504]);
      var G__23505 = i__19807__auto___23504 + 1;
      i__19807__auto___23504 = G__23505;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq23502) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23502));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23507 = arguments.length;
  var i__19807__auto___23508 = 0;
  while (true) {
    if (i__19807__auto___23508 < len__19806__auto___23507) {
      args__19813__auto__.push(arguments[i__19807__auto___23508]);
      var G__23509 = i__19807__auto___23508 + 1;
      i__19807__auto___23508 = G__23509;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq23506) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23506));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__23510__i = 0, G__23510__a = new Array(arguments.length - 0);
      while (G__23510__i < G__23510__a.length) {
        G__23510__a[G__23510__i] = arguments[G__23510__i + 0];
        ++G__23510__i;
      }
      objs = new cljs.core.IndexedSeq(G__23510__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__23511) {
    var objs = cljs.core.seq(arglist__23511);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23513 = arguments.length;
  var i__19807__auto___23514 = 0;
  while (true) {
    if (i__19807__auto___23514 < len__19806__auto___23513) {
      args__19813__auto__.push(arguments[i__19807__auto___23514]);
      var G__23515 = i__19807__auto___23514 + 1;
      i__19807__auto___23514 = G__23515;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq23512) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23512));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23517 = arguments.length;
  var i__19807__auto___23518 = 0;
  while (true) {
    if (i__19807__auto___23518 < len__19806__auto___23517) {
      args__19813__auto__.push(arguments[i__19807__auto___23518]);
      var G__23519 = i__19807__auto___23518 + 1;
      i__19807__auto___23518 = G__23519;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq23516) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23516));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23521 = arguments.length;
  var i__19807__auto___23522 = 0;
  while (true) {
    if (i__19807__auto___23522 < len__19806__auto___23521) {
      args__19813__auto__.push(arguments[i__19807__auto___23522]);
      var G__23523 = i__19807__auto___23522 + 1;
      i__19807__auto___23522 = G__23523;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq23520) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23520));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23525 = arguments.length;
  var i__19807__auto___23526 = 0;
  while (true) {
    if (i__19807__auto___23526 < len__19806__auto___23525) {
      args__19813__auto__.push(arguments[i__19807__auto___23526]);
      var G__23527 = i__19807__auto___23526 + 1;
      i__19807__auto___23526 = G__23527;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq23524) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23524));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__23534_23540 = cljs.core.key(e);
    var G__23535_23541 = w;
    var G__23536_23542 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23534_23540, G__23535_23541, G__23536_23542) : print_one.call(null, G__23534_23540, G__23535_23541, G__23536_23542);
    cljs.core._write(w, " ");
    var G__23537 = cljs.core.val(e);
    var G__23538 = w;
    var G__23539 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23537, G__23538, G__23539) : print_one.call(null, G__23537, G__23538, G__23539);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23546 = arguments.length;
  var i__19807__auto___23547 = 0;
  while (true) {
    if (i__19807__auto___23547 < len__19806__auto___23546) {
      args__19813__auto__.push(arguments[i__19807__auto___23547]);
      var G__23548 = i__19807__auto___23547 + 1;
      i__19807__auto___23547 = G__23548;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 2 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19814__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq23543) {
  var G__23544 = cljs.core.first(seq23543);
  var seq23543__$1 = cljs.core.next(seq23543);
  var G__23545 = cljs.core.first(seq23543__$1);
  var seq23543__$2 = cljs.core.next(seq23543__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23544, G__23545, seq23543__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var args23549 = [];
  var len__19806__auto___23552 = arguments.length;
  var i__19807__auto___23553 = 0;
  while (true) {
    if (i__19807__auto___23553 < len__19806__auto___23552) {
      args23549.push(arguments[i__19807__auto___23553]);
      var G__23554 = i__19807__auto___23553 + 1;
      i__19807__auto___23553 = G__23554;
      continue;
    } else {
    }
    break;
  }
  var G__23551 = args23549.length;
  switch(G__23551) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23549.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__23556_SHARP_, p2__23557_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__23556_SHARP_, p2__23557_SHARP_) : rf.call(null, p1__23556_SHARP_, p2__23557_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__23558 = null;
      var G__23558__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__23558__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__23558__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__23558 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__23558__0.call(this);
          case 1:
            return G__23558__1.call(this, result);
          case 2:
            return G__23558__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__23558.cljs$core$IFn$_invoke$arity$0 = G__23558__0;
      G__23558.cljs$core$IFn$_invoke$arity$1 = G__23558__1;
      G__23558.cljs$core$IFn$_invoke$arity$2 = G__23558__2;
      return G__23558;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var args23559 = [];
  var len__19806__auto___23562 = arguments.length;
  var i__19807__auto___23563 = 0;
  while (true) {
    if (i__19807__auto___23563 < len__19806__auto___23562) {
      args23559.push(arguments[i__19807__auto___23563]);
      var G__23564 = i__19807__auto___23563 + 1;
      i__19807__auto___23563 = G__23564;
      continue;
    } else {
    }
    break;
  }
  var G__23561 = args23559.length;
  switch(G__23561) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23559.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__23566 = null;
        var G__23566__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__23566__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__23566__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__23566 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__23566__0.call(this);
            case 1:
              return G__23566__1.call(this, result);
            case 2:
              return G__23566__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23566.cljs$core$IFn$_invoke$arity$0 = G__23566__0;
        G__23566.cljs$core$IFn$_invoke$arity$1 = G__23566__1;
        G__23566.cljs$core$IFn$_invoke$arity$2 = G__23566__2;
        return G__23566;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var args23567 = [];
  var len__19806__auto___23570 = arguments.length;
  var i__19807__auto___23571 = 0;
  while (true) {
    if (i__19807__auto___23571 < len__19806__auto___23570) {
      args23567.push(arguments[i__19807__auto___23571]);
      var G__23572 = i__19807__auto___23571 + 1;
      i__19807__auto___23571 = G__23572;
      continue;
    } else {
    }
    break;
  }
  var G__23569 = args23567.length;
  switch(G__23569) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23567.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__23574 = null;
  var G__23574__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__23574__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__23574 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__23574__1.call(this, x);
      case 2:
        return G__23574__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23574.cljs$core$IFn$_invoke$arity$1 = G__23574__1;
  G__23574.cljs$core$IFn$_invoke$arity$2 = G__23574__2;
  return G__23574;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__23575 = null;
  var G__23575__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__23575__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__23575 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__23575__1.call(this, x);
      case 2:
        return G__23575__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23575.cljs$core$IFn$_invoke$arity$1 = G__23575__1;
  G__23575.cljs$core$IFn$_invoke$arity$2 = G__23575__2;
  return G__23575;
}();
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__19742__auto__ = this;
  return cljs.core.es6_iterator(this__19742__auto__);
};
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23577 = arguments.length;
  var i__19807__auto___23578 = 0;
  while (true) {
    if (i__19807__auto___23578 < len__19806__auto___23577) {
      args__19813__auto__.push(arguments[i__19807__auto___23578]);
      var G__23579 = i__19807__auto___23578 + 1;
      i__19807__auto___23578 = G__23579;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq23576) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23576));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23581_SHARP_, p2__23580_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__23580_SHARP_) : proc.call(null, p2__23580_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto__.call(null, x);
    } else {
      var m__19400__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._key__GT_js[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto__.call(null, x);
    } else {
      var m__19400__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__19400__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__23600_23610 = cljs.core.seq(x);
            var chunk__23601_23611 = null;
            var count__23602_23612 = 0;
            var i__23603_23613 = 0;
            while (true) {
              if (i__23603_23613 < count__23602_23612) {
                var vec__23604_23614 = chunk__23601_23611.cljs$core$IIndexed$_nth$arity$2(null, i__23603_23613);
                var k_23615 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23604_23614, 0, null);
                var v_23616 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23604_23614, 1, null);
                m[cljs.core.key__GT_js(k_23615)] = cljs$core$clj__GT_js(v_23616);
                var G__23617 = seq__23600_23610;
                var G__23618 = chunk__23601_23611;
                var G__23619 = count__23602_23612;
                var G__23620 = i__23603_23613 + 1;
                seq__23600_23610 = G__23617;
                chunk__23601_23611 = G__23618;
                count__23602_23612 = G__23619;
                i__23603_23613 = G__23620;
                continue;
              } else {
                var temp__4657__auto___23621 = cljs.core.seq(seq__23600_23610);
                if (temp__4657__auto___23621) {
                  var seq__23600_23622__$1 = temp__4657__auto___23621;
                  if (cljs.core.chunked_seq_QMARK_(seq__23600_23622__$1)) {
                    var c__19547__auto___23623 = cljs.core.chunk_first(seq__23600_23622__$1);
                    var G__23624 = cljs.core.chunk_rest(seq__23600_23622__$1);
                    var G__23625 = c__19547__auto___23623;
                    var G__23626 = cljs.core.count(c__19547__auto___23623);
                    var G__23627 = 0;
                    seq__23600_23610 = G__23624;
                    chunk__23601_23611 = G__23625;
                    count__23602_23612 = G__23626;
                    i__23603_23613 = G__23627;
                    continue;
                  } else {
                    var vec__23605_23628 = cljs.core.first(seq__23600_23622__$1);
                    var k_23629 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23605_23628, 0, null);
                    var v_23630 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23605_23628, 1, null);
                    m[cljs.core.key__GT_js(k_23629)] = cljs$core$clj__GT_js(v_23630);
                    var G__23631 = cljs.core.next(seq__23600_23622__$1);
                    var G__23632 = null;
                    var G__23633 = 0;
                    var G__23634 = 0;
                    seq__23600_23610 = G__23631;
                    chunk__23601_23611 = G__23632;
                    count__23602_23612 = G__23633;
                    i__23603_23613 = G__23634;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__23606_23635 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__23607_23636 = null;
              var count__23608_23637 = 0;
              var i__23609_23638 = 0;
              while (true) {
                if (i__23609_23638 < count__23608_23637) {
                  var x_23639__$1 = chunk__23607_23636.cljs$core$IIndexed$_nth$arity$2(null, i__23609_23638);
                  arr.push(x_23639__$1);
                  var G__23640 = seq__23606_23635;
                  var G__23641 = chunk__23607_23636;
                  var G__23642 = count__23608_23637;
                  var G__23643 = i__23609_23638 + 1;
                  seq__23606_23635 = G__23640;
                  chunk__23607_23636 = G__23641;
                  count__23608_23637 = G__23642;
                  i__23609_23638 = G__23643;
                  continue;
                } else {
                  var temp__4657__auto___23644 = cljs.core.seq(seq__23606_23635);
                  if (temp__4657__auto___23644) {
                    var seq__23606_23645__$1 = temp__4657__auto___23644;
                    if (cljs.core.chunked_seq_QMARK_(seq__23606_23645__$1)) {
                      var c__19547__auto___23646 = cljs.core.chunk_first(seq__23606_23645__$1);
                      var G__23647 = cljs.core.chunk_rest(seq__23606_23645__$1);
                      var G__23648 = c__19547__auto___23646;
                      var G__23649 = cljs.core.count(c__19547__auto___23646);
                      var G__23650 = 0;
                      seq__23606_23635 = G__23647;
                      chunk__23607_23636 = G__23648;
                      count__23608_23637 = G__23649;
                      i__23609_23638 = G__23650;
                      continue;
                    } else {
                      var x_23651__$1 = cljs.core.first(seq__23606_23645__$1);
                      arr.push(x_23651__$1);
                      var G__23652 = cljs.core.next(seq__23606_23645__$1);
                      var G__23653 = null;
                      var G__23654 = 0;
                      var G__23655 = 0;
                      seq__23606_23635 = G__23652;
                      chunk__23607_23636 = G__23653;
                      count__23608_23637 = G__23654;
                      i__23609_23638 = G__23655;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__19399__auto__ = x == null ? null : x;
    var m__19400__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__19400__auto__.call(null, x, options);
    } else {
      var m__19400__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__19400__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var args23656 = [];
  var len__19806__auto___23681 = arguments.length;
  var i__19807__auto___23682 = 0;
  while (true) {
    if (i__19807__auto___23682 < len__19806__auto___23681) {
      args23656.push(arguments[i__19807__auto___23682]);
      var G__23683 = i__19807__auto___23682 + 1;
      i__19807__auto___23682 = G__23683;
      continue;
    } else {
    }
    break;
  }
  var G__23660 = args23656.length;
  switch(G__23660) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args23656.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19825__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__23661 = opts;
  var map__23661__$1 = (!(map__23661 == null) ? map__23661.cljs$lang$protocol_mask$partition0$ & 64 || map__23661.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__23661) : map__23661;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23661__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__23661, map__23661__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__19516__auto__ = function(map__23661, map__23661__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__23675(s__23676) {
                      return new cljs.core.LazySeq(null, function(map__23661, map__23661__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__23676__$1 = s__23676;
                          while (true) {
                            var temp__4657__auto__ = cljs.core.seq(s__23676__$1);
                            if (temp__4657__auto__) {
                              var s__23676__$2 = temp__4657__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__23676__$2)) {
                                var c__19514__auto__ = cljs.core.chunk_first(s__23676__$2);
                                var size__19515__auto__ = cljs.core.count(c__19514__auto__);
                                var b__23678 = cljs.core.chunk_buffer(size__19515__auto__);
                                if (function() {
                                  var i__23677 = 0;
                                  while (true) {
                                    if (i__23677 < size__19515__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__19514__auto__, i__23677);
                                      cljs.core.chunk_append(b__23678, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__23685 = i__23677 + 1;
                                      i__23677 = G__23685;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__23678), cljs$core$thisfn_$_iter__23675(cljs.core.chunk_rest(s__23676__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__23678), null);
                                }
                              } else {
                                var k = cljs.core.first(s__23676__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__23675(cljs.core.rest(s__23676__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__23661, map__23661__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__23661, map__23661__$1, keywordize_keys, keyfn);
                  return iter__19516__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__23661, map__23661__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq23657) {
  var G__23658 = cljs.core.first(seq23657);
  var seq23657__$1 = cljs.core.next(seq23657);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__23658, seq23657__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__23687 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23687) : cljs.core.atom.call(null, G__23687);
  }();
  return function(mem) {
    return function() {
      var G__23688__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__23688 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__23689__i = 0, G__23689__a = new Array(arguments.length - 0);
          while (G__23689__i < G__23689__a.length) {
            G__23689__a[G__23689__i] = arguments[G__23689__i + 0];
            ++G__23689__i;
          }
          args = new cljs.core.IndexedSeq(G__23689__a, 0);
        }
        return G__23688__delegate.call(this, args);
      };
      G__23688.cljs$lang$maxFixedArity = 0;
      G__23688.cljs$lang$applyTo = function(arglist__23690) {
        var args = cljs.core.seq(arglist__23690);
        return G__23688__delegate(args);
      };
      G__23688.cljs$core$IFn$_invoke$arity$variadic = G__23688__delegate;
      return G__23688;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var args23691 = [];
  var len__19806__auto___23696 = arguments.length;
  var i__19807__auto___23697 = 0;
  while (true) {
    if (i__19807__auto___23697 < len__19806__auto___23696) {
      args23691.push(arguments[i__19807__auto___23697]);
      var G__23698 = i__19807__auto___23697 + 1;
      i__19807__auto___23697 = G__23698;
      continue;
    } else {
    }
    break;
  }
  var G__23695 = args23691.length;
  switch(G__23695) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__19825__auto__ = new cljs.core.IndexedSeq(args23691.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19825__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__23700 = ret;
      f = G__23700;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq23692) {
  var G__23693 = cljs.core.first(seq23692);
  var seq23692__$1 = cljs.core.next(seq23692);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__23693, seq23692__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var args23701 = [];
  var len__19806__auto___23704 = arguments.length;
  var i__19807__auto___23705 = 0;
  while (true) {
    if (i__19807__auto___23705 < len__19806__auto___23704) {
      args23701.push(arguments[i__19807__auto___23705]);
      var G__23706 = i__19807__auto___23705 + 1;
      i__19807__auto___23705 = G__23706;
      continue;
    } else {
    }
    break;
  }
  var G__23703 = args23701.length;
  switch(G__23703) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23701.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__23709 = Math.random() * n;
  return Math.floor(G__23709);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__23711 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23711) : cljs.core.atom.call(null, G__23711);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___23714 = arguments.length;
  var i__19807__auto___23715 = 0;
  while (true) {
    if (i__19807__auto___23715 < len__19806__auto___23714) {
      args__19813__auto__.push(arguments[i__19807__auto___23715]);
      var G__23716 = i__19807__auto___23715 + 1;
      i__19807__auto___23715 = G__23716;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq23712) {
  var G__23713 = cljs.core.first(seq23712);
  var seq23712__$1 = cljs.core.next(seq23712);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__23713, seq23712__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var args23717 = [];
  var len__19806__auto___23721 = arguments.length;
  var i__19807__auto___23722 = 0;
  while (true) {
    if (i__19807__auto___23722 < len__19806__auto___23721) {
      args23717.push(arguments[i__19807__auto___23722]);
      var G__23723 = i__19807__auto___23722 + 1;
      i__19807__auto___23722 = G__23723;
      continue;
    } else {
    }
    break;
  }
  var G__23719 = args23717.length;
  switch(G__23719) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23717.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__23720 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23720) : cljs.core.deref.call(null, G__23720);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__18736__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__18736__auto__) {
    return or__18736__auto__;
  } else {
    var or__18736__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__18736__auto____$1) {
      return or__18736__auto____$1;
    } else {
      var and__18724__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__18724__auto__) {
        var and__18724__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__18724__auto____$1) {
          var and__18724__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__18724__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__23725 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__23726 = i + 1;
                ret = G__23725;
                i = G__23726;
                continue;
              }
              break;
            }
          } else {
            return and__18724__auto____$2;
          }
        } else {
          return and__18724__auto____$1;
        }
      } else {
        return and__18724__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var args23727 = [];
  var len__19806__auto___23731 = arguments.length;
  var i__19807__auto___23732 = 0;
  while (true) {
    if (i__19807__auto___23732 < len__19806__auto___23731) {
      args23727.push(arguments[i__19807__auto___23732]);
      var G__23733 = i__19807__auto___23732 + 1;
      i__19807__auto___23732 = G__23733;
      continue;
    } else {
    }
    break;
  }
  var G__23729 = args23727.length;
  switch(G__23729) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23727.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23730 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23730) : cljs.core.deref.call(null, G__23730);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var args23735 = [];
  var len__19806__auto___23739 = arguments.length;
  var i__19807__auto___23740 = 0;
  while (true) {
    if (i__19807__auto___23740 < len__19806__auto___23739) {
      args23735.push(arguments[i__19807__auto___23740]);
      var G__23741 = i__19807__auto___23740 + 1;
      i__19807__auto___23740 = G__23741;
      continue;
    } else {
    }
    break;
  }
  var G__23737 = args23735.length;
  switch(G__23737) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23735.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23738 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23738) : cljs.core.deref.call(null, G__23738);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var args23743 = [];
  var len__19806__auto___23747 = arguments.length;
  var i__19807__auto___23748 = 0;
  while (true) {
    if (i__19807__auto___23748 < len__19806__auto___23747) {
      args23743.push(arguments[i__19807__auto___23748]);
      var G__23749 = i__19807__auto___23748 + 1;
      i__19807__auto___23748 = G__23749;
      continue;
    } else {
    }
    break;
  }
  var G__23745 = args23743.length;
  switch(G__23745) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23743.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__23746 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23746) : cljs.core.deref.call(null, G__23746);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var args23751 = [];
  var len__19806__auto___23754 = arguments.length;
  var i__19807__auto___23755 = 0;
  while (true) {
    if (i__19807__auto___23755 < len__19806__auto___23754) {
      args23751.push(arguments[i__19807__auto___23755]);
      var G__23756 = i__19807__auto___23755 + 1;
      i__19807__auto___23755 = G__23756;
      continue;
    } else {
    }
    break;
  }
  var G__23753 = args23751.length;
  switch(G__23753) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23751.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__18736__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var args23761 = [];
  var len__19806__auto___23764 = arguments.length;
  var i__19807__auto___23765 = 0;
  while (true) {
    if (i__19807__auto___23765 < len__19806__auto___23764) {
      args23761.push(arguments[i__19807__auto___23765]);
      var G__23766 = i__19807__auto___23765 + 1;
      i__19807__auto___23765 = G__23766;
      continue;
    } else {
    }
    break;
  }
  var G__23763 = args23761.length;
  switch(G__23763) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23761.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__23758_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__23758_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__23758_SHARP_), cljs.core.second(p1__23758_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__23759_SHARP_, p2__23760_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__23759_SHARP_, p2__23760_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__18736__auto__ = cljs.core.truth_(function() {
    var and__18724__auto__ = xprefs;
    if (cljs.core.truth_(and__18724__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__18724__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    var or__18736__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__23780 = cljs.core.rest(ps);
          ps = G__23780;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__18736__auto____$1)) {
      return or__18736__auto____$1;
    } else {
      var or__18736__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__23781 = cljs.core.rest(ps);
            ps = G__23781;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__18736__auto____$2)) {
        return or__18736__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__18736__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__23784) {
    var vec__23785 = p__23784;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23785, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23785, 1, null);
    var e = vec__23785;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__18736__auto__ = be == null;
        if (or__18736__auto__) {
          return or__18736__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._reset[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto__.call(null, mf);
    } else {
      var m__19400__auto____$1 = cljs.core._reset["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._add_method[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__19400__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__19400__auto____$1 = cljs.core._add_method["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__19400__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._remove_method[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__19400__auto__.call(null, mf, dispatch_val);
    } else {
      var m__19400__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__19400__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._prefer_method[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__19400__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__19400__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__19400__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._get_method[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__19400__auto__.call(null, mf, dispatch_val);
    } else {
      var m__19400__auto____$1 = cljs.core._get_method["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__19400__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._methods[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto__.call(null, mf);
    } else {
      var m__19400__auto____$1 = cljs.core._methods["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._prefers[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto__.call(null, mf);
    } else {
      var m__19400__auto____$1 = cljs.core._prefers["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto__.call(null, mf);
    } else {
      var m__19400__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__19399__auto__ = mf == null ? null : mf;
    var m__19400__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto__.call(null, mf);
    } else {
      var m__19400__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__19400__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__19400__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__23787 = null;
  var G__23787__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__23787__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__23787__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__23787__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__23787__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__23787__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__23787__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__23787__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__23787__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__23787__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__23787__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__23787__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__23787__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__23787__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__23787__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__23787__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__23787__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__23787__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__23787__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__23787__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__23787__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__23787__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__23787 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__23787__1.call(this, self__);
      case 2:
        return G__23787__2.call(this, self__, a);
      case 3:
        return G__23787__3.call(this, self__, a, b);
      case 4:
        return G__23787__4.call(this, self__, a, b, c);
      case 5:
        return G__23787__5.call(this, self__, a, b, c, d);
      case 6:
        return G__23787__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__23787__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__23787__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__23787__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__23787__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__23787__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__23787__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__23787__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__23787__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__23787__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__23787__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__23787__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__23787__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__23787__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__23787__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__23787__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__23787__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__23787.cljs$core$IFn$_invoke$arity$1 = G__23787__1;
  G__23787.cljs$core$IFn$_invoke$arity$2 = G__23787__2;
  G__23787.cljs$core$IFn$_invoke$arity$3 = G__23787__3;
  G__23787.cljs$core$IFn$_invoke$arity$4 = G__23787__4;
  G__23787.cljs$core$IFn$_invoke$arity$5 = G__23787__5;
  G__23787.cljs$core$IFn$_invoke$arity$6 = G__23787__6;
  G__23787.cljs$core$IFn$_invoke$arity$7 = G__23787__7;
  G__23787.cljs$core$IFn$_invoke$arity$8 = G__23787__8;
  G__23787.cljs$core$IFn$_invoke$arity$9 = G__23787__9;
  G__23787.cljs$core$IFn$_invoke$arity$10 = G__23787__10;
  G__23787.cljs$core$IFn$_invoke$arity$11 = G__23787__11;
  G__23787.cljs$core$IFn$_invoke$arity$12 = G__23787__12;
  G__23787.cljs$core$IFn$_invoke$arity$13 = G__23787__13;
  G__23787.cljs$core$IFn$_invoke$arity$14 = G__23787__14;
  G__23787.cljs$core$IFn$_invoke$arity$15 = G__23787__15;
  G__23787.cljs$core$IFn$_invoke$arity$16 = G__23787__16;
  G__23787.cljs$core$IFn$_invoke$arity$17 = G__23787__17;
  G__23787.cljs$core$IFn$_invoke$arity$18 = G__23787__18;
  G__23787.cljs$core$IFn$_invoke$arity$19 = G__23787__19;
  G__23787.cljs$core$IFn$_invoke$arity$20 = G__23787__20;
  G__23787.cljs$core$IFn$_invoke$arity$21 = G__23787__21;
  G__23787.cljs$core$IFn$_invoke$arity$22 = G__23787__22;
  return G__23787;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args23786) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args23786)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    var temp__4655__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var target_fn = temp__4655__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__23788 = self__.uuid;
  var G__23789 = other.uuid;
  return goog.array.defaultCompare(G__23788, G__23789);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var args23790 = [];
  var len__19806__auto___23793 = arguments.length;
  var i__19807__auto___23794 = 0;
  while (true) {
    if (i__19807__auto___23794 < len__19806__auto___23793) {
      args23790.push(arguments[i__19807__auto___23794]);
      var G__23795 = i__19807__auto___23794 + 1;
      i__19807__auto___23794 = G__23795;
      continue;
    } else {
    }
    break;
  }
  var G__23792 = args23790.length;
  switch(G__23792) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23790.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "finally", "finally", -1065347064, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, 
  "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, 
  null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "var", "var", 870848730, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), null, new cljs.core.Symbol(null, 
  "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__23797 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__23797) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__23799_SHARP_, p2__23800_SHARP_) {
      goog.object.set(p1__23799_SHARP_, p2__23800_SHARP_, true);
      return p1__23799_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__23803 = cljs.core.next(ks__$1);
          var G__23804 = [cljs.core.str(function() {
            var G__23802 = ret;
            if (!(ret === "")) {
              return [cljs.core.str(G__23802), cljs.core.str("|")].join("");
            } else {
              return G__23802;
            }
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__23803;
          ret = G__23804;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_23805 = 0;
  while (true) {
    if (i_23805 < name.length) {
      var c_23806 = name.charAt(i_23805);
      var sub_23807 = goog.object.get(cljs.core.CHAR_MAP, c_23806);
      if (!(sub_23807 == null)) {
        sb.append(sub_23807);
      } else {
        sb.append(c_23806);
      }
      var G__23808 = i_23805 + 1;
      i_23805 = G__23808;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__23810 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23810, 0, null);
      var G__23811 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__23812 = r.lastIndex;
      ret = G__23811;
      last_match_end = G__23812;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write(writer__19343__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__23817 = function() {
          var G__23815 = ctxt;
          var G__23816 = cljs.core.first(xs);
          return goog.object.get(G__23815, G__23816);
        }();
        var G__23818 = cljs.core.next(xs);
        ctxt = G__23817;
        xs = G__23818;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__23822 = cljs.core._STAR_target_STAR_;
  switch(G__23822) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var G__23824 = cljs.core.first(segs);
            return eval(G__23824);
          } catch (e23823) {
            if (e23823 instanceof ReferenceError) {
              var e = e23823;
              return null;
            } else {
              throw e23823;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var args23826 = [];
  var len__19806__auto___23829 = arguments.length;
  var i__19807__auto___23830 = 0;
  while (true) {
    if (i__19807__auto___23830 < len__19806__auto___23829) {
      args23826.push(arguments[i__19807__auto___23830]);
      var G__23831 = i__19807__auto___23830 + 1;
      i__19807__auto___23830 = G__23831;
      continue;
    } else {
    }
    break;
  }
  var G__23828 = args23826.length;
  switch(G__23828) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23826.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__23834 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23834) : cljs.core.atom.call(null, G__23834);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__23836 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23836) : cljs.core.atom.call(null, G__23836);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  return s.replace(new RegExp(re.source, "g"), replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__23839__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__23839 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__23840__i = 0, G__23840__a = new Array(arguments.length - 0);
        while (G__23840__i < G__23840__a.length) {
          G__23840__a[G__23840__i] = arguments[G__23840__i + 0];
          ++G__23840__i;
        }
        args = new cljs.core.IndexedSeq(G__23840__a, 0);
      }
      return G__23839__delegate.call(this, args);
    };
    G__23839.cljs$lang$maxFixedArity = 0;
    G__23839.cljs$lang$applyTo = function(arglist__23841) {
      var args = cljs.core.seq(arglist__23841);
      return G__23839__delegate(args);
    };
    G__23839.cljs$core$IFn$_invoke$arity$variadic = G__23839__delegate;
    return G__23839;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var args23842 = [];
  var len__19806__auto___23845 = arguments.length;
  var i__19807__auto___23846 = 0;
  while (true) {
    if (i__19807__auto___23846 < len__19806__auto___23845) {
      args23842.push(arguments[i__19807__auto___23846]);
      var G__23847 = i__19807__auto___23846 + 1;
      i__19807__auto___23846 = G__23847;
      continue;
    } else {
    }
    break;
  }
  var G__23844 = args23842.length;
  switch(G__23844) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23842.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__23849 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__23850 = cljs.core.next.call(null, coll__$1);
      sb = G__23849;
      coll__$1 = G__23850;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__23851 = sb;
      var G__23852 = coll__$2;
      sb = G__23851;
      coll__$1 = G__23852;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__23853 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__23853;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__23857 = cljs.core._EQ__EQ_;
    var expr__23858 = limit;
    if (cljs.core.truth_(pred__23857.call(null, 1, expr__23858))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__23857.call(null, 2, expr__23858))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var args23860 = [];
  var len__19806__auto___23863 = arguments.length;
  var i__19807__auto___23864 = 0;
  while (true) {
    if (i__19807__auto___23864 < len__19806__auto___23863) {
      args23860.push(arguments[i__19807__auto___23864]);
      var G__23865 = i__19807__auto___23864 + 1;
      i__19807__auto___23864 = G__23865;
      continue;
    } else {
    }
    break;
  }
  var G__23862 = args23860.length;
  switch(G__23862) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23860.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__23867 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__23868 = limit__$1 - 1;
          var G__23869 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__23867;
          limit__$1 = G__23868;
          parts = G__23869;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__23870 = index - 1;
        index = G__23870;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__23871 = index + 1;
      index = G__23871;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var args23872 = [];
  var len__19806__auto___23875 = arguments.length;
  var i__19807__auto___23876 = 0;
  while (true) {
    if (i__19807__auto___23876 < len__19806__auto___23875) {
      args23872.push(arguments[i__19807__auto___23876]);
      var G__23877 = i__19807__auto___23876 + 1;
      i__19807__auto___23876 = G__23877;
      continue;
    } else {
    }
    break;
  }
  var G__23874 = args23872.length;
  switch(G__23874) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23872.length)].join(""));;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var args23879 = [];
  var len__19806__auto___23882 = arguments.length;
  var i__19807__auto___23883 = 0;
  while (true) {
    if (i__19807__auto___23883 < len__19806__auto___23882) {
      args23879.push(arguments[i__19807__auto___23883]);
      var G__23884 = i__19807__auto___23883 + 1;
      i__19807__auto___23883 = G__23884;
      continue;
    } else {
    }
    break;
  }
  var G__23881 = args23879.length;
  switch(G__23881) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23879.length)].join(""));;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___24044 = arguments.length;
  var i__19807__auto___24045 = 0;
  while (true) {
    if (i__19807__auto___24045 < len__19806__auto___24044) {
      args__19813__auto__.push(arguments[i__19807__auto___24045]);
      var G__24046 = i__19807__auto___24045 + 1;
      i__19807__auto___24045 = G__24046;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq24043) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24043));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___24048 = arguments.length;
  var i__19807__auto___24049 = 0;
  while (true) {
    if (i__19807__auto___24049 < len__19806__auto___24048) {
      args__19813__auto__.push(arguments[i__19807__auto___24049]);
      var G__24050 = i__19807__auto___24049 + 1;
      i__19807__auto___24049 = G__24050;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq24047) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24047));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__24054 = cljs.core._EQ_;
    var expr__24055 = c;
    if (cljs.core.truth_(pred__24054.call(null, "\b", expr__24055))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__24054.call(null, "\t", expr__24055))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__24054.call(null, "\n", expr__24055))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__24054.call(null, "\f", expr__24055))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__24054.call(null, "\r", expr__24055))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__24054.call(null, '"', expr__24055))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__24054.call(null, "\\", expr__24055))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___24058 = arguments.length;
  var i__19807__auto___24059 = 0;
  while (true) {
    if (i__19807__auto___24059 < len__19806__auto___24058) {
      args__19813__auto__.push(arguments[i__19807__auto___24059]);
      var G__24060 = i__19807__auto___24059 + 1;
      i__19807__auto___24059 = G__24060;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq24057) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24057));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___24062 = arguments.length;
  var i__19807__auto___24063 = 0;
  while (true) {
    if (i__19807__auto___24063 < len__19806__auto___24062) {
      args__19813__auto__.push(arguments[i__19807__auto___24063]);
      var G__24064 = i__19807__auto___24063 + 1;
      i__19807__auto___24063 = G__24064;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 0 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__19814__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq24061) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq24061));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__24066 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__24066, 0, null);
      var new_context = cljs.core.nth.call(null, vec__24066, 1, null);
      var G__24067 = new_context;
      var G__24068 = remainder;
      var G__24069 = cljs.core.conj.call(null, acc, result);
      context = G__24067;
      lis__$1 = G__24068;
      acc = G__24069;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__24071 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__24071, 0, null);
    var new_context = cljs.core.nth.call(null, vec__24071, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__24072 = new_context;
      var G__24073 = cljs.core.conj.call(null, acc, result);
      context = G__24072;
      acc = G__24073;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__24075 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__24075, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__24075, 1, null);
    var new_context = cljs.core.nth.call(null, vec__24075, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__24076 = new_context;
      var G__24077 = cljs.core.conj.call(null, acc, result);
      context = G__24076;
      acc = G__24077;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__19516__auto__ = function cljs$pprint$unzip_map_$_iter__24102(s__24103) {
      return new cljs.core.LazySeq(null, function() {
        var s__24103__$1 = s__24103;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__24103__$1);
          if (temp__4657__auto__) {
            var s__24103__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24103__$2)) {
              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__24103__$2);
              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
              var b__24105 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
              if (function() {
                var i__24104 = 0;
                while (true) {
                  if (i__24104 < size__19515__auto__) {
                    var vec__24110 = cljs.core._nth.call(null, c__19514__auto__, i__24104);
                    var k = cljs.core.nth.call(null, vec__24110, 0, null);
                    var vec__24111 = cljs.core.nth.call(null, vec__24110, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__24111, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__24111, 1, null);
                    cljs.core.chunk_append.call(null, b__24105, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__24126 = i__24104 + 1;
                    i__24104 = G__24126;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24105), cljs$pprint$unzip_map_$_iter__24102.call(null, cljs.core.chunk_rest.call(null, s__24103__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24105), null);
              }
            } else {
              var vec__24112 = cljs.core.first.call(null, s__24103__$2);
              var k = cljs.core.nth.call(null, vec__24112, 0, null);
              var vec__24113 = cljs.core.nth.call(null, vec__24112, 1, null);
              var v1 = cljs.core.nth.call(null, vec__24113, 0, null);
              var v2 = cljs.core.nth.call(null, vec__24113, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__24102.call(null, cljs.core.rest.call(null, s__24103__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__19516__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__19516__auto__ = function cljs$pprint$unzip_map_$_iter__24114(s__24115) {
      return new cljs.core.LazySeq(null, function() {
        var s__24115__$1 = s__24115;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__24115__$1);
          if (temp__4657__auto__) {
            var s__24115__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24115__$2)) {
              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__24115__$2);
              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
              var b__24117 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
              if (function() {
                var i__24116 = 0;
                while (true) {
                  if (i__24116 < size__19515__auto__) {
                    var vec__24122 = cljs.core._nth.call(null, c__19514__auto__, i__24116);
                    var k = cljs.core.nth.call(null, vec__24122, 0, null);
                    var vec__24123 = cljs.core.nth.call(null, vec__24122, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__24123, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__24123, 1, null);
                    cljs.core.chunk_append.call(null, b__24117, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__24127 = i__24116 + 1;
                    i__24116 = G__24127;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24117), cljs$pprint$unzip_map_$_iter__24114.call(null, cljs.core.chunk_rest.call(null, s__24115__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24117), null);
              }
            } else {
              var vec__24124 = cljs.core.first.call(null, s__24115__$2);
              var k = cljs.core.nth.call(null, vec__24124, 0, null);
              var vec__24125 = cljs.core.nth.call(null, vec__24124, 1, null);
              var v1 = cljs.core.nth.call(null, vec__24125, 0, null);
              var v2 = cljs.core.nth.call(null, vec__24125, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__24114.call(null, cljs.core.rest.call(null, s__24115__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__19516__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__19516__auto__ = function cljs$pprint$tuple_map_$_iter__24136(s__24137) {
      return new cljs.core.LazySeq(null, function() {
        var s__24137__$1 = s__24137;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__24137__$1);
          if (temp__4657__auto__) {
            var s__24137__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24137__$2)) {
              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__24137__$2);
              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
              var b__24139 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
              if (function() {
                var i__24138 = 0;
                while (true) {
                  if (i__24138 < size__19515__auto__) {
                    var vec__24142 = cljs.core._nth.call(null, c__19514__auto__, i__24138);
                    var k = cljs.core.nth.call(null, vec__24142, 0, null);
                    var v = cljs.core.nth.call(null, vec__24142, 1, null);
                    cljs.core.chunk_append.call(null, b__24139, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__24144 = i__24138 + 1;
                    i__24138 = G__24144;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24139), cljs$pprint$tuple_map_$_iter__24136.call(null, cljs.core.chunk_rest.call(null, s__24137__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24139), null);
              }
            } else {
              var vec__24143 = cljs.core.first.call(null, s__24137__$2);
              var k = cljs.core.nth.call(null, vec__24143, 0, null);
              var v = cljs.core.nth.call(null, vec__24143, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__24136.call(null, cljs.core.rest.call(null, s__24137__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__19516__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__24145 = n - 1;
          n = G__24145;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__24146 = n + 1;
        n = G__24146;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__24147 = pos + 1;
      pos = G__24147;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__19399__auto__ = pp == null ? null : pp;
    var m__19400__auto__ = cljs.pprint._ppflush[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, pp);
    } else {
      var m__19400__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var args24149 = [];
  var len__19806__auto___24158 = arguments.length;
  var i__19807__auto___24159 = 0;
  while (true) {
    if (i__19807__auto___24159 < len__19806__auto___24158) {
      args24149.push(arguments[i__19807__auto___24159]);
      var G__24160 = i__19807__auto___24159 + 1;
      i__19807__auto___24159 = G__24160;
      continue;
    } else {
    }
    break;
  }
  var G__24151 = args24149.length;
  switch(G__24151) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24149.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t_cljs$pprint24152 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint24152 = function(writer, max_columns, fields, meta24153) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta24153 = meta24153;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint24152.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_24154, meta24153__$1) {
        var self__ = this;
        var _24154__$1 = this;
        return new cljs.pprint.t_cljs$pprint24152(self__.writer, self__.max_columns, self__.fields, meta24153__$1);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint24152.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_24154) {
        var self__ = this;
        var _24154__$1 = this;
        return self__.meta24153;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint24152.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t_cljs$pprint24152.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint24152.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__24155 = cljs.core._EQ_;
        var expr__24156 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__24155.call(null, String, expr__24156))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__24155, expr__24156, this$__$1, fields) {
              return function(p1__24148_SHARP_) {
                return cljs.core._EQ_.call(null, p1__24148_SHARP_, "\n");
              };
            }(s, nl, pred__24155, expr__24156, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__24155.call(null, Number, expr__24156))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24156)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t_cljs$pprint24152.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta24153", "meta24153", 963553602, null)], null);
      };
    }(fields);
    cljs.pprint.t_cljs$pprint24152.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint24152.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint24152";
    cljs.pprint.t_cljs$pprint24152.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
        return cljs.core._write.call(null, writer__19343__auto__, "cljs.pprint/t_cljs$pprint24152");
      };
    }(fields);
    cljs.pprint.__GT_t_cljs$pprint24152 = function(fields) {
      return function cljs$pprint$__GT_t_cljs$pprint24152(writer__$1, max_columns__$1, fields__$1, meta24153) {
        return new cljs.pprint.t_cljs$pprint24152(writer__$1, max_columns__$1, fields__$1, meta24153);
      };
    }(fields);
  }
  return new cljs.pprint.t_cljs$pprint24152(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24163, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24165 = k24163 instanceof cljs.core.Keyword ? k24163.fqn : null;
  switch(G__24165) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24163, else__19361__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24162) {
  var self__ = this;
  var G__24162__$1 = this;
  return new cljs.core.RecordIter(0, G__24162__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24162) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24166 = cljs.core.keyword_identical_QMARK_;
  var expr__24167 = k__19366__auto__;
  if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__24167))) {
    return new cljs.pprint.logical_block(G__24162, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__24167))) {
      return new cljs.pprint.logical_block(self__.parent, G__24162, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__24167))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__24162, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__24167))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__24162, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__24167))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__24162, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__24167))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__24162, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__24167))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__24162, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__24167))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__24162, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__24167))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__24162, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__24166.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__24167))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__24162, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24162), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24162) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__24162, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__24164) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__24164), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__24164), null, cljs.core.dissoc.call(null, G__24164, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__24170 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__24170;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24172, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24174 = k24172 instanceof cljs.core.Keyword ? k24172.fqn : null;
  switch(G__24174) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24172, else__19361__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24171) {
  var self__ = this;
  var G__24171__$1 = this;
  return new cljs.core.RecordIter(0, G__24171__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24171) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24175 = cljs.core.keyword_identical_QMARK_;
  var expr__24176 = k__19366__auto__;
  if (cljs.core.truth_(pred__24175.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__24176))) {
    return new cljs.pprint.buffer_blob(G__24171, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24175.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__24176))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__24171, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24175.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__24176))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__24171, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24175.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__24176))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__24171, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__24175.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__24176))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__24171, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24171), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24171) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__24171, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__24173) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__24173), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__24173), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__24173), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__24173), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__24173), null, cljs.core.dissoc.call(null, G__24173, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__23978__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__23978__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24180, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24182 = k24180 instanceof cljs.core.Keyword ? k24180.fqn : null;
  switch(G__24182) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24180, else__19361__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24179) {
  var self__ = this;
  var G__24179__$1 = this;
  return new cljs.core.RecordIter(0, G__24179__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24179) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24183 = cljs.core.keyword_identical_QMARK_;
  var expr__24184 = k__19366__auto__;
  if (cljs.core.truth_(pred__24183.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__24184))) {
    return new cljs.pprint.nl_t(G__24179, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24183.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__24184))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__24179, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24183.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__24184))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__24179, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24183.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__24184))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__24179, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__24183.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__24184))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__24179, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24179), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24179) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__24179, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__24181) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__24181), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__24181), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__24181), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__24181), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__24181), null, cljs.core.dissoc.call(null, G__24181, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__23978__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__23978__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24188, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24190 = k24188 instanceof cljs.core.Keyword ? k24188.fqn : null;
  switch(G__24190) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24188, else__19361__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24187) {
  var self__ = this;
  var G__24187__$1 = this;
  return new cljs.core.RecordIter(0, G__24187__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24187) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24191 = cljs.core.keyword_identical_QMARK_;
  var expr__24192 = k__19366__auto__;
  if (cljs.core.truth_(pred__24191.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__24192))) {
    return new cljs.pprint.start_block_t(G__24187, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24191.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__24192))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__24187, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24191.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__24192))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__24187, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24191.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__24192))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__24187, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24187), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24187) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__24187, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__24189) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__24189), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__24189), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__24189), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__24189), null, cljs.core.dissoc.call(null, 
  G__24189, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__23978__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__23978__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24196, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24198 = k24196 instanceof cljs.core.Keyword ? k24196.fqn : null;
  switch(G__24198) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24196, else__19361__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24195) {
  var self__ = this;
  var G__24195__$1 = this;
  return new cljs.core.RecordIter(0, G__24195__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24195) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24199 = cljs.core.keyword_identical_QMARK_;
  var expr__24200 = k__19366__auto__;
  if (cljs.core.truth_(pred__24199.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__24200))) {
    return new cljs.pprint.end_block_t(G__24195, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24199.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__24200))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__24195, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24199.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__24200))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__24195, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24199.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__24200))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__24195, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24195), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24195) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__24195, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__24197) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__24197), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__24197), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__24197), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__24197), null, cljs.core.dissoc.call(null, 
  G__24197, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__23978__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__23978__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24204, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24206 = k24204 instanceof cljs.core.Keyword ? k24204.fqn : null;
  switch(G__24206) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24204, else__19361__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24203) {
  var self__ = this;
  var G__24203__$1 = this;
  return new cljs.core.RecordIter(0, G__24203__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24203) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24207 = cljs.core.keyword_identical_QMARK_;
  var expr__24208 = k__19366__auto__;
  if (cljs.core.truth_(pred__24207.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__24208))) {
    return new cljs.pprint.indent_t(G__24203, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24207.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__24208))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__24203, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24207.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__24208))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__24203, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24207.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__24208))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__24203, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__24207.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__24208))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__24203, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__24207.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__24208))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__24203, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24203), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24203) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__24203, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__24205) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__24205), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__24205), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__24205), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__24205), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__24205), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__24205), null, cljs.core.dissoc.call(null, G__24205, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), 
  new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__23978__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__23978__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__19661__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__19662__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__19663__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__19664__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__19665__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__, hierarchy__19665__auto__) {
      return function(p1__24212_SHARP_, p2__24211_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__24211_SHARP_);
      };
    }(method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__, hierarchy__19665__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__19665__auto__, method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4657__auto___24213 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___24213)) {
    var cb_24214 = temp__4657__auto___24213;
    cb_24214.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4657__auto___24215 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4657__auto___24215)) {
    var prefix_24216 = temp__4657__auto___24215;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_24216);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4657__auto___24217 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto___24217)) {
    var cb_24218 = temp__4657__auto___24217;
    cb_24218.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var suffix = temp__4657__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__24219 = cljs.core._EQ_;
    var expr__24220 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__24219.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__24220))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__24219.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__24220))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24220)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__18736__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__18736__auto__) {
      return or__18736__auto__;
    } else {
      var and__18724__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__18724__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__18724__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4655__auto___24222 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4655__auto___24222)) {
      var tws_24223 = temp__4655__auto___24222;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_24223);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__24228 = cljs.core.seq.call(null, tokens);
  var chunk__24229 = null;
  var count__24230 = 0;
  var i__24231 = 0;
  while (true) {
    if (i__24231 < count__24230) {
      var token = cljs.core._nth.call(null, chunk__24229, i__24231);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4655__auto___24232 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4655__auto___24232)) {
          var tws_24233 = temp__4655__auto___24232;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_24233);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_24234 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__18724__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__18724__auto__)) {
          return tws_24234;
        } else {
          return and__18724__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_24234);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__24235 = seq__24228;
      var G__24236 = chunk__24229;
      var G__24237 = count__24230;
      var G__24238 = i__24231 + 1;
      seq__24228 = G__24235;
      chunk__24229 = G__24236;
      count__24230 = G__24237;
      i__24231 = G__24238;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq.call(null, seq__24228);
      if (temp__4657__auto__) {
        var seq__24228__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__24228__$1)) {
          var c__19547__auto__ = cljs.core.chunk_first.call(null, seq__24228__$1);
          var G__24239 = cljs.core.chunk_rest.call(null, seq__24228__$1);
          var G__24240 = c__19547__auto__;
          var G__24241 = cljs.core.count.call(null, c__19547__auto__);
          var G__24242 = 0;
          seq__24228 = G__24239;
          chunk__24229 = G__24240;
          count__24230 = G__24241;
          i__24231 = G__24242;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__24228__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4655__auto___24243 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4655__auto___24243)) {
              var tws_24244 = temp__4655__auto___24243;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_24244);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_24245 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__18724__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__18724__auto__)) {
              return tws_24245;
            } else {
              return and__18724__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_24245);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__24246 = cljs.core.next.call(null, seq__24228__$1);
          var G__24247 = null;
          var G__24248 = 0;
          var G__24249 = 0;
          seq__24228 = G__24246;
          chunk__24229 = G__24247;
          count__24230 = G__24248;
          i__24231 = G__24249;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__18736__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__18724__auto__ = miser_width;
  if (cljs.core.truth_(and__18724__auto__)) {
    var and__18724__auto____$1 = maxcol;
    if (cljs.core.truth_(and__18724__auto____$1)) {
      var and__18724__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__18724__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__18724__auto____$2;
      }
    } else {
      return and__18724__auto____$1;
    }
  } else {
    return and__18724__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__19661__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__19662__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__19663__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__19664__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__19665__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__, hierarchy__19665__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__, hierarchy__19665__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__19665__auto__, method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__18736__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    var or__18736__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__18736__auto____$1) {
      return or__18736__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__24250_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__18724__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__24250_SHARP_);
        if (cljs.core.truth_(and__18724__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__24250_SHARP_), lb);
        } else {
          return and__18724__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__24251_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__24251_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__18724__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__24251_SHARP_);
        if (cljs.core.truth_(and__18724__auto__)) {
          var or__18736__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__18736__auto__) {
            return or__18736__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__18724__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__24252 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__24252;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_24253 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_24253);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__24254_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__24254_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__24257 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__24257, 0, null);
  var b = cljs.core.nth.call(null, vec__24257, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__24258 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__24258, 0, null);
    var remainder = cljs.core.nth.call(null, vec__24258, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__24259 = new_buffer;
        buffer = G__24259;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var buf = temp__4655__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4657__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4657__auto__)) {
    var tws = temp__4657__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_24268 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_24269 = oldpos_24268 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_24269);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_24268, newpos_24269));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__24264_24270 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__24265_24271 = null;
    var count__24266_24272 = 0;
    var i__24267_24273 = 0;
    while (true) {
      if (i__24267_24273 < count__24266_24272) {
        var l_24274__$1 = cljs.core._nth.call(null, chunk__24265_24271, i__24267_24273);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_24274__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__24275 = seq__24264_24270;
        var G__24276 = chunk__24265_24271;
        var G__24277 = count__24266_24272;
        var G__24278 = i__24267_24273 + 1;
        seq__24264_24270 = G__24275;
        chunk__24265_24271 = G__24276;
        count__24266_24272 = G__24277;
        i__24267_24273 = G__24278;
        continue;
      } else {
        var temp__4657__auto___24279 = cljs.core.seq.call(null, seq__24264_24270);
        if (temp__4657__auto___24279) {
          var seq__24264_24280__$1 = temp__4657__auto___24279;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__24264_24280__$1)) {
            var c__19547__auto___24281 = cljs.core.chunk_first.call(null, seq__24264_24280__$1);
            var G__24282 = cljs.core.chunk_rest.call(null, seq__24264_24280__$1);
            var G__24283 = c__19547__auto___24281;
            var G__24284 = cljs.core.count.call(null, c__19547__auto___24281);
            var G__24285 = 0;
            seq__24264_24270 = G__24282;
            chunk__24265_24271 = G__24283;
            count__24266_24272 = G__24284;
            i__24267_24273 = G__24285;
            continue;
          } else {
            var l_24286__$1 = cljs.core.first.call(null, seq__24264_24280__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_24286__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__24287 = cljs.core.next.call(null, seq__24264_24280__$1);
            var G__24288 = null;
            var G__24289 = 0;
            var G__24290 = 0;
            seq__24264_24270 = G__24287;
            chunk__24265_24271 = G__24288;
            count__24266_24272 = G__24289;
            i__24267_24273 = G__24290;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t_cljs$pprint24297 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint24297 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta24298) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta24298 = meta24298;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_24299, meta24298__$1) {
        var self__ = this;
        var _24299__$1 = this;
        return new cljs.pprint.t_cljs$pprint24297(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta24298__$1);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_24299) {
        var self__ = this;
        var _24299__$1 = this;
        return self__.meta24298;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__24300 = cljs.core._EQ_;
        var expr__24301 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__24300.call(null, String, expr__24301))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__24300.call(null, Number, expr__24301))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24301)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t_cljs$pprint24297.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta24298", "meta24298", 629975904, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t_cljs$pprint24297.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint24297.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint24297";
    cljs.pprint.t_cljs$pprint24297.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
        return cljs.core._write.call(null, writer__19343__auto__, "cljs.pprint/t_cljs$pprint24297");
      };
    }(lb, fields);
    cljs.pprint.__GT_t_cljs$pprint24297 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint24297(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta24298) {
        return new cljs.pprint.t_cljs$pprint24297(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta24298);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t_cljs$pprint24297(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4657__auto___24303 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___24303)) {
      var cb_24304 = temp__4657__auto___24303;
      cb_24304.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4657__auto___24305 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4657__auto___24305)) {
      var cb_24306 = temp__4657__auto___24305;
      cb_24306.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_24307 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_24308 = oldpos_24307 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_24308);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_24307, newpos_24308));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__24312 = cljs.core._EQ_;
      var expr__24313 = relative_to;
      if (cljs.core.truth_(pred__24312.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__24313))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__24312.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__24313))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24313)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 
1, true, 117, 128, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 81, 87, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "jsdoc", "jsdoc", 1745183516), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 
17, 1, true, 105, 115, cljs.core.List.EMPTY, "*print-length* controls how many items of each collection the\n  printer will print. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  number of items of each collection to print. If a collection contains\n  more items, the printer will print items up to the limit followed by\n  '...' to represent the remaining items. The root binding is nil\n  indicating no limit.", new cljs.core.PersistentVector(null, 
1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["@type {null|number}"], null), cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/Users/mike/work/eph-titanic/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__24315_SHARP_) {
    var temp__4657__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__24315_SHARP_));
    if (cljs.core.truth_(temp__4657__auto__)) {
      var v = temp__4657__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__24315_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__18724__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__18724__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__18724__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__18724__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__18724__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___24336 = arguments.length;
  var i__19807__auto___24337 = 0;
  while (true) {
    if (i__19807__auto___24337 < len__19806__auto___24336) {
      args__19813__auto__.push(arguments[i__19807__auto___24337]);
      var G__24338 = i__19807__auto___24337 + 1;
      i__19807__auto___24337 = G__24338;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_24322 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_24323 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_24324 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_24325 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_24326 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_24327 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_24328 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_24329 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_24330 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_24331 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_24332 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_24333 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__23961__auto___24339 = base_writer;
        var new_writer__23962__auto___24340 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__23961__auto___24339));
        var _STAR_out_STAR_24334_24341 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__23962__auto___24340 ? cljs.pprint.make_pretty_writer.call(null, base_writer__23961__auto___24339, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__23961__auto___24339;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24334_24341;
        }
      } else {
        var _STAR_out_STAR_24335_24342 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24335_24342;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_24333;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_24332;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_24331;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_24330;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_24329;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_24328;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_24327;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_24326;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_24325;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_24324;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_24323;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_24322;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq24320) {
  var G__24321 = cljs.core.first.call(null, seq24320);
  var seq24320__$1 = cljs.core.next.call(null, seq24320);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__24321, seq24320__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var args24343 = [];
  var len__19806__auto___24349 = arguments.length;
  var i__19807__auto___24350 = 0;
  while (true) {
    if (i__19807__auto___24350 < len__19806__auto___24349) {
      args24343.push(arguments[i__19807__auto___24350]);
      var G__24351 = i__19807__auto___24350 + 1;
      i__19807__auto___24350 = G__24351;
      continue;
    } else {
    }
    break;
  }
  var G__24345 = args24343.length;
  switch(G__24345) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24343.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_24346 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24346;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__23961__auto__ = writer;
  var new_writer__23962__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__23961__auto__));
  var _STAR_out_STAR_24347 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__23962__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__23961__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__23961__auto__;
  try {
    var _STAR_print_pretty_STAR_24348_24353 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_24348_24353;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24347;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__18724__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__18724__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__18724__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___24357 = arguments.length;
  var i__19807__auto___24358 = 0;
  while (true) {
    if (i__19807__auto___24358 < len__19806__auto___24357) {
      args__19813__auto__.push(arguments[i__19807__auto___24358]);
      var G__24359 = i__19807__auto___24358 + 1;
      i__19807__auto___24358 = G__24359;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 2 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19814__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq24354) {
  var G__24355 = cljs.core.first.call(null, seq24354);
  var seq24354__$1 = cljs.core.next.call(null, seq24354);
  var G__24356 = cljs.core.first.call(null, seq24354__$1);
  var seq24354__$2 = cljs.core.next.call(null, seq24354__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__24355, G__24356, seq24354__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24361, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24363 = k24361 instanceof cljs.core.Keyword ? k24361.fqn : null;
  switch(G__24363) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24361, else__19361__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24360) {
  var self__ = this;
  var G__24360__$1 = this;
  return new cljs.core.RecordIter(0, G__24360__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24360) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24364 = cljs.core.keyword_identical_QMARK_;
  var expr__24365 = k__19366__auto__;
  if (cljs.core.truth_(pred__24364.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__24365))) {
    return new cljs.pprint.arg_navigator(G__24360, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24364.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__24365))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__24360, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24364.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__24365))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__24360, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24360), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24360) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__24360, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__24362) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__24362), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__24362), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__24362), null, cljs.core.dissoc.call(null, G__24362, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__24369 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__24369, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24369, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k24371, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__24373 = k24371 instanceof cljs.core.Keyword ? k24371.fqn : null;
  switch(G__24373) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k24371, else__19361__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__24370) {
  var self__ = this;
  var G__24370__$1 = this;
  return new cljs.core.RecordIter(0, G__24370__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__24370) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__24374 = cljs.core.keyword_identical_QMARK_;
  var expr__24375 = k__19366__auto__;
  if (cljs.core.truth_(pred__24374.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__24375))) {
    return new cljs.pprint.compiled_directive(G__24370, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__24374.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__24375))) {
      return new cljs.pprint.compiled_directive(self__.func, G__24370, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__24374.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__24375))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__24370, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__24374.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__24375))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__24370, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__24370), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__24370) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__24370, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__24372) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__24372), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__24372), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__24372), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__24372), null, cljs.core.dissoc.call(null, G__24372, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__24378, navigator) {
  var vec__24382 = p__24378;
  var param = cljs.core.nth.call(null, vec__24382, 0, null);
  var vec__24383 = cljs.core.nth.call(null, vec__24382, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__24383, 0, null);
  var offset = cljs.core.nth.call(null, vec__24383, 1, null);
  var vec__24384 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__24384, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__24384, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__24386 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__24386, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__24386, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__18736__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__24388 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__24388, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__24388, 1, null);
  var base_output = function() {
    var or__18736__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__24389_SHARP_) {
    if (p1__24389_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__24389_SHARP_, base), cljs.core.quot.call(null, p1__24389_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__24390_SHARP_) {
        if (p1__24390_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__24390_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__24390_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__24393 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__24393, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__24393, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_24394 = arg < 0;
    var pos_arg_24395 = neg_24394 ? -arg : arg;
    var raw_str_24396 = cljs.pprint.opt_base_str.call(null, base, pos_arg_24395);
    var group_str_24397 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_24394, pos_arg_24395, raw_str_24396, vec__24393, arg, arg_navigator__$1) {
        return function(p1__24391_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__24391_SHARP_);
        };
      }(neg_24394, pos_arg_24395, raw_str_24396, vec__24393, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_24396));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_24396;
    var signed_str_24398 = neg_24394 ? [cljs.core.str("-"), cljs.core.str(group_str_24397)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_24397)].join("") : group_str_24397;
    var padded_str_24399 = signed_str_24398.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_24398.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_24398)].join("") : 
    signed_str_24398;
    cljs.pprint.print.call(null, padded_str_24399);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__24400 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__24401 = pos - 1;
      var G__24402 = cljs.core.first.call(null, remainder);
      var G__24403 = cljs.core.next.call(null, remainder);
      acc = G__24400;
      pos = G__24401;
      this$ = G__24402;
      remainder = G__24403;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__24405 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24405, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24405, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_24406 = arg < 0 ? -arg : arg;
    var parts_24407 = cljs.pprint.remainders.call(null, 1E3, abs_arg_24406);
    if (cljs.core.count.call(null, parts_24407) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_24408 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_24407);
      var full_str_24409 = cljs.pprint.add_english_scales.call(null, parts_strs_24408, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_24409)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__24411 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24411, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24411, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_24412 = arg < 0 ? -arg : arg;
    var parts_24413 = cljs.pprint.remainders.call(null, 1E3, abs_arg_24412);
    if (cljs.core.count.call(null, parts_24413) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_24414 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_24413));
      var head_str_24415 = cljs.pprint.add_english_scales.call(null, parts_strs_24414, 1);
      var tail_str_24416 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_24413));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_24415) && !cljs.core.empty_QMARK_.call(null, tail_str_24416) ? [cljs.core.str(head_str_24415), cljs.core.str(", "), cljs.core.str(tail_str_24416)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_24415) ? [cljs.core.str(head_str_24415), cljs.core.str("th")].join("") : tail_str_24416)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_24417 = cljs.core.rem.call(null, arg, 100);
      var not_teens_24418 = 11 < low_two_digits_24417 || 19 > low_two_digits_24417;
      var low_digit_24419 = cljs.core.rem.call(null, low_two_digits_24417, 10);
      cljs.pprint.print.call(null, low_digit_24419 === 1 && not_teens_24418 ? "st" : low_digit_24419 === 2 && not_teens_24418 ? "nd" : low_digit_24419 === 3 && not_teens_24418 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__24421 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24421, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24421, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_24422 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_24423 = cljs.core.PersistentVector.EMPTY;
    var pos_24424 = cljs.core.count.call(null, digits_24422) - 1;
    var digits_24425__$1 = digits_24422;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_24425__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_24423));
      } else {
        var digit_24426 = cljs.core.first.call(null, digits_24425__$1);
        var G__24427 = cljs.core._EQ_.call(null, 0, digit_24426) ? acc_24423 : cljs.core.conj.call(null, acc_24423, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_24424), digit_24426 - 1));
        var G__24428 = pos_24424 - 1;
        var G__24429 = cljs.core.next.call(null, digits_24425__$1);
        acc_24423 = G__24427;
        pos_24424 = G__24428;
        digits_24425__$1 = G__24429;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__24431 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__24431, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24431, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__24436 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__24436, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24436, 1, null);
  var pred__24437_24440 = cljs.core._EQ_;
  var expr__24438_24441 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__24437_24440.call(null, "o", expr__24438_24441))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__24437_24440.call(null, "u", expr__24438_24441))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__24437_24440.call(null, null, expr__24438_24441))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24438_24441)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__24443 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__24443, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24443, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__24446 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__24446, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__24446, 1, null);
      var vec__24447 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__24447, 0, null);
      var offsets = cljs.core.nth.call(null, vec__24447, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__24449 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__24449, 0, null);
  var e = cljs.core.nth.call(null, vec__24449, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__24450 = i - 1;
        i = G__24450;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__18736__auto__ = d;
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__19067__auto__ = 2;
      var y__19068__auto__ = w;
      return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__19067__auto__ = e + 1;
      var y__19068__auto__ = w__$1 - 1;
      return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
    }() : w__$1 + e;
    var vec__24452 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__24452, 0, null);
    var e1 = cljs.core.nth.call(null, vec__24452, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__24452, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__24452, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__24454 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__24454, 0, null);
  var e1 = cljs.core.nth.call(null, vec__24454, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__24459 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24459, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24459, 1, null);
  var vec__24460 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__24460, 0, null);
  var abs = cljs.core.nth.call(null, vec__24460, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__24461 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__24461, 0, null);
  var exp = cljs.core.nth.call(null, vec__24461, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__18736__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__24462 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__24462, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__24462, 1, null);
  var expanded = cljs.core.nth.call(null, vec__24462, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__18724__auto__ = w;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = d;
      if (cljs.core.truth_(and__18724__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_24463 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_24464 = cljs.core.truth_(add_sign) ? len_24463 + 1 : len_24463;
    var prepend_zero_24465__$1 = prepend_zero && !(signed_len_24464 >= w);
    var append_zero_24466__$1 = append_zero && !(signed_len_24464 >= w);
    var full_len_24467 = prepend_zero_24465__$1 || append_zero_24466__$1 ? signed_len_24464 + 1 : signed_len_24464;
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = full_len_24467 > w;
      if (and__18724__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__18724__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_24467, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_24465__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_24466__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__24474 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24474, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24474, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__24476_24480 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__24477_24481 = G__24476_24480;
  var mantissa_24482 = cljs.core.nth.call(null, vec__24477_24481, 0, null);
  var exp_24483 = cljs.core.nth.call(null, vec__24477_24481, 1, null);
  var G__24476_24484__$1 = G__24476_24480;
  while (true) {
    var vec__24478_24485 = G__24476_24484__$1;
    var mantissa_24486__$1 = cljs.core.nth.call(null, vec__24478_24485, 0, null);
    var exp_24487__$1 = cljs.core.nth.call(null, vec__24478_24485, 1, null);
    var w_24488 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_24489 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_24490 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_24491 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_24492 = function() {
      var or__18736__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_24493 = function() {
      var or__18736__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_24494 = k_24491 <= 0;
    var scaled_exp_24495 = exp_24487__$1 - (k_24491 - 1);
    var scaled_exp_str_24496 = [cljs.core.str(Math.abs(scaled_exp_24495))].join("");
    var scaled_exp_str_24497__$1 = [cljs.core.str(expchar_24492), cljs.core.str(scaled_exp_24495 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_24490) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_24490 - cljs.core.count.call(null, scaled_exp_str_24496), "0")) : null), cljs.core.str(scaled_exp_str_24496)].join("");
    var exp_width_24498 = cljs.core.count.call(null, scaled_exp_str_24497__$1);
    var base_mantissa_width_24499 = cljs.core.count.call(null, mantissa_24486__$1);
    var scaled_mantissa_24500 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_24491, "0"))), cljs.core.str(mantissa_24486__$1), cljs.core.str(cljs.core.truth_(d_24489) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_24489 - (base_mantissa_width_24499 - 1) - (k_24491 < 0 ? -k_24491 : 0), "0")) : null)].join("");
    var w_mantissa_24501 = cljs.core.truth_(w_24488) ? w_24488 - exp_width_24498 : null;
    var vec__24479_24502 = cljs.pprint.round_str.call(null, scaled_mantissa_24500, 0, cljs.core._EQ_.call(null, k_24491, 0) ? d_24489 - 1 : k_24491 > 0 ? d_24489 : k_24491 < 0 ? d_24489 - 1 : null, cljs.core.truth_(w_mantissa_24501) ? w_mantissa_24501 - (cljs.core.truth_(add_sign_24493) ? 1 : 0) : null);
    var rounded_mantissa_24503 = cljs.core.nth.call(null, vec__24479_24502, 0, null);
    var __24504 = cljs.core.nth.call(null, vec__24479_24502, 1, null);
    var incr_exp_24505 = cljs.core.nth.call(null, vec__24479_24502, 2, null);
    var full_mantissa_24506 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_24503, k_24491);
    var append_zero_24507 = cljs.core._EQ_.call(null, k_24491, cljs.core.count.call(null, rounded_mantissa_24503)) && d_24489 == null;
    if (cljs.core.not.call(null, incr_exp_24505)) {
      if (cljs.core.truth_(w_24488)) {
        var len_24508 = cljs.core.count.call(null, full_mantissa_24506) + exp_width_24498;
        var signed_len_24509 = cljs.core.truth_(add_sign_24493) ? len_24508 + 1 : len_24508;
        var prepend_zero_24510__$1 = prepend_zero_24494 && !cljs.core._EQ_.call(null, signed_len_24509, w_24488);
        var full_len_24511 = prepend_zero_24510__$1 ? signed_len_24509 + 1 : signed_len_24509;
        var append_zero_24512__$1 = append_zero_24507 && full_len_24511 < w_24488;
        if (cljs.core.truth_(function() {
          var and__18724__auto__ = function() {
            var or__18736__auto__ = full_len_24511 > w_24488;
            if (or__18736__auto__) {
              return or__18736__auto__;
            } else {
              var and__18724__auto__ = e_24490;
              if (cljs.core.truth_(and__18724__auto__)) {
                return exp_width_24498 - 2 > e_24490;
              } else {
                return and__18724__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__18724__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__18724__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_24488, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_24488 - full_len_24511 - (append_zero_24512__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_24493) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_24510__$1 ? "0" : null), cljs.core.str(full_mantissa_24506), cljs.core.str(append_zero_24512__$1 ? "0" : 
          null), cljs.core.str(scaled_exp_str_24497__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_24493) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_24494 ? "0" : null), cljs.core.str(full_mantissa_24506), cljs.core.str(append_zero_24507 ? "0" : null), cljs.core.str(scaled_exp_str_24497__$1)].join(""));
      }
    } else {
      var G__24513 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_24503, exp_24487__$1 + 1], null);
      G__24476_24484__$1 = G__24513;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__24516 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24516, 0, null);
  var _ = cljs.core.nth.call(null, vec__24516, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__24517 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__24517, 0, null);
  var exp = cljs.core.nth.call(null, vec__24517, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__19067__auto__ = cljs.core.count.call(null, mantissa);
    var y__19068__auto__ = function() {
      var x__19074__auto__ = n;
      var y__19075__auto__ = 7;
      return x__19074__auto__ < y__19075__auto__ ? x__19074__auto__ : y__19075__auto__;
    }();
    return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__24521 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24521, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24521, 1, null);
  var vec__24522 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__24522, 0, null);
  var exp = cljs.core.nth.call(null, vec__24522, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__18736__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__24523 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__24523, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__24523, 1, null);
  var expanded = cljs.core.nth.call(null, vec__24523, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__18724__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__18724__auto__)) {
      return add_sign;
    } else {
      return and__18724__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__18724__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__18724__auto__) {
      return add_sign;
    } else {
      return and__18724__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__24525 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__24525, 0, null);
  var navigator = cljs.core.nth.call(null, vec__24525, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__24527 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__24527, 0, null);
  var navigator = cljs.core.nth.call(null, vec__24527, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__24529 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__24529, 0, null);
  var navigator = cljs.core.nth.call(null, vec__24529, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__24532 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__24532, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24532, 1, null);
  var vec__24533 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__24533, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__24533, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__18736__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__18736__auto__) {
        return or__18736__auto__;
      } else {
        var and__18724__auto__ = max_count;
        if (cljs.core.truth_(and__18724__auto__)) {
          return count >= max_count;
        } else {
          return and__18724__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__24534 = count + 1;
        var G__24535 = iter_result;
        var G__24536 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__24534;
        args__$1 = G__24535;
        last_pos = G__24536;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__24539 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__24539, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24539, 1, null);
  var vec__24540 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__24540, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__24540, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__18736__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__18736__auto__) {
        return or__18736__auto__;
      } else {
        var and__18724__auto__ = max_count;
        if (cljs.core.truth_(and__18724__auto__)) {
          return count >= max_count;
        } else {
          return and__18724__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__24541 = count + 1;
        var G__24542 = cljs.core.next.call(null, arg_list__$1);
        count = G__24541;
        arg_list__$1 = G__24542;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__24544 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__24544, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24544, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__18736__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__18736__auto__) {
        return or__18736__auto__;
      } else {
        var and__18724__auto__ = max_count;
        if (cljs.core.truth_(and__18724__auto__)) {
          return count >= max_count;
        } else {
          return and__18724__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__24545 = count + 1;
        var G__24546 = iter_result;
        var G__24547 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__24545;
        navigator__$2 = G__24546;
        last_pos = G__24547;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__24550 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__24550, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24550, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__18736__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__18736__auto__) {
        return or__18736__auto__;
      } else {
        var and__18724__auto__ = max_count;
        if (cljs.core.truth_(and__18724__auto__)) {
          return count >= max_count;
        } else {
          return and__18724__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__24551 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__24551, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__24551, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__24552 = count + 1;
        var G__24553 = navigator__$3;
        count = G__24552;
        navigator__$2 = G__24553;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__24556 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_24557 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24557;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__24556, 0, null);
      var result_str = cljs.core.nth.call(null, vec__24556, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__24558 = cljs.core.next.call(null, clauses__$1);
        var G__24559 = cljs.core.conj.call(null, acc, result_str);
        var G__24560 = iter_result;
        clauses__$1 = G__24558;
        acc = G__24559;
        navigator__$1 = G__24560;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__24565 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var else$ = temp__4657__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__24566 = cljs.core.nth.call(null, vec__24565, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__24566, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__24565, 1, null);
  var navigator__$1 = function() {
    var or__18736__auto__ = new_navigator;
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__24567 = function() {
    var temp__4657__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var p = temp__4657__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__24567, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__24567, 1, null);
  var navigator__$2 = function() {
    var or__18736__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__18736__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__18736__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__24568 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__24568, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__24568, 1, null);
  var slots = function() {
    var x__19067__auto__ = 1;
    var y__19068__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__19067__auto__ = minpad;
    var y__19068__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = eol_str;
    if (cljs.core.truth_(and__18724__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__18724__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_24569__$1 = slots;
  var extra_pad_24570__$1 = extra_pad;
  var strs_24571__$1 = strs;
  var pad_only_24572 = function() {
    var or__18736__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_24571__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_24571__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_24572) ? cljs.core.first.call(null, strs_24571__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__18736__auto__ = pad_only_24572;
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          var or__18736__auto____$1 = cljs.core.next.call(null, strs_24571__$1);
          if (or__18736__auto____$1) {
            return or__18736__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_24570__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__24573 = slots_24569__$1 - 1;
      var G__24574 = extra_pad_24570__$1 - 1;
      var G__24575 = cljs.core.truth_(pad_only_24572) ? strs_24571__$1 : cljs.core.next.call(null, strs_24571__$1);
      var G__24576 = false;
      slots_24569__$1 = G__24573;
      extra_pad_24570__$1 = G__24574;
      strs_24571__$1 = G__24575;
      pad_only_24572 = G__24576;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint24583 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint24583 = function(downcase_writer, writer, meta24584) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta24584 = meta24584;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint24583.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24585, meta24584__$1) {
      var self__ = this;
      var _24585__$1 = this;
      return new cljs.pprint.t_cljs$pprint24583(self__.downcase_writer, self__.writer, meta24584__$1);
    };
    cljs.pprint.t_cljs$pprint24583.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24585) {
      var self__ = this;
      var _24585__$1 = this;
      return self__.meta24584;
    };
    cljs.pprint.t_cljs$pprint24583.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint24583.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__24586 = cljs.core._EQ_;
      var expr__24587 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__24586.call(null, String, expr__24587))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__24586.call(null, Number, expr__24587))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24587)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint24583.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta24584", "meta24584", -109265023, null)], null);
    };
    cljs.pprint.t_cljs$pprint24583.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint24583.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint24583";
    cljs.pprint.t_cljs$pprint24583.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.pprint/t_cljs$pprint24583");
    };
    cljs.pprint.__GT_t_cljs$pprint24583 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint24583(downcase_writer__$1, writer__$1, meta24584) {
      return new cljs.pprint.t_cljs$pprint24583(downcase_writer__$1, writer__$1, meta24584);
    };
  }
  return new cljs.pprint.t_cljs$pprint24583(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t_cljs$pprint24595 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint24595 = function(upcase_writer, writer, meta24596) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta24596 = meta24596;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint24595.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_24597, meta24596__$1) {
      var self__ = this;
      var _24597__$1 = this;
      return new cljs.pprint.t_cljs$pprint24595(self__.upcase_writer, self__.writer, meta24596__$1);
    };
    cljs.pprint.t_cljs$pprint24595.prototype.cljs$core$IMeta$_meta$arity$1 = function(_24597) {
      var self__ = this;
      var _24597__$1 = this;
      return self__.meta24596;
    };
    cljs.pprint.t_cljs$pprint24595.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint24595.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__24598 = cljs.core._EQ_;
      var expr__24599 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__24598.call(null, String, expr__24599))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__24598.call(null, Number, expr__24599))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24599)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint24595.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta24596", "meta24596", 1979286196, null)], null);
    };
    cljs.pprint.t_cljs$pprint24595.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint24595.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint24595";
    cljs.pprint.t_cljs$pprint24595.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.pprint/t_cljs$pprint24595");
    };
    cljs.pprint.__GT_t_cljs$pprint24595 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint24595(upcase_writer__$1, writer__$1, meta24596) {
      return new cljs.pprint.t_cljs$pprint24595(upcase_writer__$1, writer__$1, meta24596);
    };
  }
  return new cljs.pprint.t_cljs$pprint24595(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__18724__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = f;
      if (cljs.core.truth_(and__18724__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__18724__auto__ = m;
          if (cljs.core.truth_(and__18724__auto__)) {
            return m.index + 1;
          } else {
            return and__18724__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t_cljs$pprint24607 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint24607 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta24608) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta24608 = meta24608;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint24607.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_24609, meta24608__$1) {
        var self__ = this;
        var _24609__$1 = this;
        return new cljs.pprint.t_cljs$pprint24607(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta24608__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint24607.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_24609) {
        var self__ = this;
        var _24609__$1 = this;
        return self__.meta24608;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint24607.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint24607.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__24610 = cljs.core._EQ_;
        var expr__24611 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__24610.call(null, String, expr__24611))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__24610.call(null, Number, expr__24611))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24611)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint24607.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta24608", "meta24608", -1030987834, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t_cljs$pprint24607.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint24607.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint24607";
    cljs.pprint.t_cljs$pprint24607.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
        return cljs.core._write.call(null, writer__19343__auto__, "cljs.pprint/t_cljs$pprint24607");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t_cljs$pprint24607 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint24607(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta24608) {
        return new cljs.pprint.t_cljs$pprint24607(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta24608);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t_cljs$pprint24607(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t_cljs$pprint24619 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint24619 = function(init_cap_writer, writer, capped, meta24620) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta24620 = meta24620;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint24619.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_24621, meta24620__$1) {
        var self__ = this;
        var _24621__$1 = this;
        return new cljs.pprint.t_cljs$pprint24619(self__.init_cap_writer, self__.writer, self__.capped, meta24620__$1);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint24619.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_24621) {
        var self__ = this;
        var _24621__$1 = this;
        return self__.meta24620;
      };
    }(capped);
    cljs.pprint.t_cljs$pprint24619.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint24619.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__24622 = cljs.core._EQ_;
        var expr__24623 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__24622.call(null, String, expr__24623))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__18724__auto__ = m;
              if (cljs.core.truth_(and__18724__auto__)) {
                return m.index;
              } else {
                return and__18724__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__24622.call(null, Number, expr__24623))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__18724__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__18724__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__18724__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__24623)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t_cljs$pprint24619.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta24620", "meta24620", 771895447, null)], null);
      };
    }(capped);
    cljs.pprint.t_cljs$pprint24619.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint24619.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint24619";
    cljs.pprint.t_cljs$pprint24619.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
        return cljs.core._write.call(null, writer__19343__auto__, "cljs.pprint/t_cljs$pprint24619");
      };
    }(capped);
    cljs.pprint.__GT_t_cljs$pprint24619 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint24619(init_cap_writer__$1, writer__$1, capped__$1, meta24620) {
        return new cljs.pprint.t_cljs$pprint24619(init_cap_writer__$1, writer__$1, capped__$1, meta24620);
      };
    }(capped);
  }
  return new cljs.pprint.t_cljs$pprint24619(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_24626 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24626;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_24629 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_24630 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_24631 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_24632 = current_24631 < colnum_24629 ? colnum_24629 - current_24631 : cljs.core._EQ_.call(null, colinc_24630, 0) ? 0 : colinc_24630 - cljs.core.rem.call(null, current_24631 - colnum_24629, colinc_24630);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_24632, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_24633 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_24634 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_24635 = colrel_24633 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_24636 = colinc_24634 > 0 ? cljs.core.rem.call(null, start_col_24635, colinc_24634) : 0;
  var space_count_24637 = colrel_24633 + (cljs.core._EQ_.call(null, 0, offset_24636) ? 0 : colinc_24634 - offset_24636);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_24637, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__24641 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__24641, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__24641, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24642_24644 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24643_24645 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24643_24645;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24642_24644;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__24646_SHARP_, p2__24647_SHARP_, p3__24648_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__24646_SHARP_, p2__24647_SHARP_, p3__24648_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__24649_SHARP_, p2__24650_SHARP_, p3__24651_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__24649_SHARP_, p2__24650_SHARP_, p3__24651_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__24652_SHARP_, p2__24653_SHARP_, p3__24654_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__24652_SHARP_, p2__24653_SHARP_, p3__24654_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__24655_SHARP_, p2__24656_SHARP_, p3__24657_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__24655_SHARP_, p2__24656_SHARP_, p3__24657_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__24658_SHARP_, p2__24659_SHARP_, p3__24660_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__24658_SHARP_, p2__24659_SHARP_, p3__24660_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__24661_SHARP_, p2__24662_SHARP_, p3__24663_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__24661_SHARP_, p2__24662_SHARP_, p3__24663_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__24664_SHARP_, p2__24665_SHARP_, p3__24666_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__24664_SHARP_), p1__24664_SHARP_, p2__24665_SHARP_, p3__24666_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__18724__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__18724__auto__;
      }
    }())) {
      return function(p1__24667_SHARP_, p2__24668_SHARP_, p3__24669_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__24667_SHARP_, p2__24668_SHARP_, p3__24669_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__24670_SHARP_, p2__24671_SHARP_, p3__24672_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__24670_SHARP_, p2__24671_SHARP_, p3__24672_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__24673_SHARP_, p2__24674_SHARP_, p3__24675_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__24673_SHARP_, p2__24674_SHARP_, p3__24675_SHARP_);
          };
        } else {
          return function(p1__24676_SHARP_, p2__24677_SHARP_, p3__24678_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__24676_SHARP_, p2__24677_SHARP_, p3__24678_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__24688 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__24688, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__24688, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__19651__auto___24694 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_24695 = 0;
    while (true) {
      if (i_24695 < n__19651__auto___24694) {
        cljs.pprint.prn.call(null);
        var G__24696 = i_24695 + 1;
        i_24695 = G__24696;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_24697 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_24697 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__19651__auto___24698 = cnt_24697 - 1;
    var i_24699 = 0;
    while (true) {
      if (i_24699 < n__19651__auto___24698) {
        cljs.pprint.prn.call(null);
        var G__24700 = i_24699 + 1;
        i_24699 = G__24700;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__19651__auto___24701 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_24702 = 0;
    while (true) {
      if (i_24702 < n__19651__auto___24701) {
        cljs.pprint.print.call(null, "\f");
        var G__24703 = i_24702 + 1;
        i_24702 = G__24703;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__24679_SHARP_, p2__24680_SHARP_, p3__24681_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__24679_SHARP_, p2__24680_SHARP_, p3__24681_SHARP_);
    };
  } else {
    return function(p1__24682_SHARP_, p2__24683_SHARP_, p3__24684_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__24682_SHARP_, p2__24683_SHARP_, p3__24684_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__24689 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__24689, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__24689, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__24690 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__24690, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__24690, 1, null);
      var vec__24691 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__24691, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__24691, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__18724__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__18724__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__18724__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__24685_SHARP_, p2__24686_SHARP_, p3__24687_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__24685_SHARP_, p2__24686_SHARP_, p3__24687_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__18724__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__18724__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = arg1;
      if (cljs.core.truth_(and__18724__auto__)) {
        var and__18724__auto____$1 = arg2;
        if (cljs.core.truth_(and__18724__auto____$1)) {
          return arg3;
        } else {
          return and__18724__auto____$1;
        }
      } else {
        return and__18724__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__18724__auto__ = arg1;
        if (cljs.core.truth_(and__18724__auto__)) {
          return arg2;
        } else {
          return and__18724__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__18736__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__24692 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__24692, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__24692, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__24693 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__24693, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__24693, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__24704) {
  var vec__24706 = p__24704;
  var s = cljs.core.nth.call(null, vec__24706, 0, null);
  var offset = cljs.core.nth.call(null, vec__24706, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__24706, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__24707) {
  var vec__24709 = p__24707;
  var p = cljs.core.nth.call(null, vec__24709, 0, null);
  var offset = cljs.core.nth.call(null, vec__24709, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__24712) {
    var vec__24713 = p__24712;
    var s__$1 = cljs.core.nth.call(null, vec__24713, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__24713, 1, null);
    var flags = cljs.core.nth.call(null, vec__24713, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__18724__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__18724__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__18724__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__18724__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__18724__auto__) {
      var and__18724__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__18724__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__19074__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__19075__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__19074__auto__ < y__19075__auto__ ? x__19074__auto__ : y__19075__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__24714_SHARP_, p2__24715_SHARP_) {
    var val = cljs.core.first.call(null, p1__24714_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__24715_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__24715_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__24714_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__19516__auto__ = function cljs$pprint$map_params_$_iter__24731(s__24732) {
      return new cljs.core.LazySeq(null, function() {
        var s__24732__$1 = s__24732;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__24732__$1);
          if (temp__4657__auto__) {
            var s__24732__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__24732__$2)) {
              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__24732__$2);
              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
              var b__24734 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
              if (function() {
                var i__24733 = 0;
                while (true) {
                  if (i__24733 < size__19515__auto__) {
                    var vec__24739 = cljs.core._nth.call(null, c__19514__auto__, i__24733);
                    var name = cljs.core.nth.call(null, vec__24739, 0, null);
                    var vec__24740 = cljs.core.nth.call(null, vec__24739, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__24740, 0, null);
                    cljs.core.chunk_append.call(null, b__24734, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__24743 = i__24733 + 1;
                    i__24733 = G__24743;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24734), cljs$pprint$map_params_$_iter__24731.call(null, cljs.core.chunk_rest.call(null, s__24732__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__24734), null);
              }
            } else {
              var vec__24741 = cljs.core.first.call(null, s__24732__$2);
              var name = cljs.core.nth.call(null, vec__24741, 0, null);
              var vec__24742 = cljs.core.nth.call(null, vec__24741, 1, null);
              var default$ = cljs.core.nth.call(null, vec__24742, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__24731.call(null, cljs.core.rest.call(null, s__24732__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__19516__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__24716_SHARP_, p2__24717_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__24716_SHARP_, p2__24717_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__24718_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__24718_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__24748 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__24748, 0, null);
  var vec__24749 = cljs.core.nth.call(null, vec__24748, 1, null);
  var rest = cljs.core.nth.call(null, vec__24749, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__24749, 1, null);
  var vec__24750 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__24750, 0, null);
  var vec__24751 = cljs.core.nth.call(null, vec__24750, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__24751, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__24751, 1, null);
  var flags = cljs.core.nth.call(null, vec__24751, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__18724__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__18724__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__18724__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__24753 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__24753, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__24753, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__24758) {
    var vec__24759 = p__24758;
    var clause_map = cljs.core.nth.call(null, vec__24759, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__24759, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__24759, 2, null);
    var vec__24760 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__24760, 0, null);
    var vec__24761 = cljs.core.nth.call(null, vec__24760, 1, null);
    var type = cljs.core.nth.call(null, vec__24761, 0, null);
    var right_params = cljs.core.nth.call(null, vec__24761, 1, null);
    var else_params = cljs.core.nth.call(null, vec__24761, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__24761, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_24765 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_24765) {
      return function(p__24766) {
        var vec__24767 = p__24766;
        var s = cljs.core.nth.call(null, vec__24767, 0, null);
        var offset = cljs.core.nth.call(null, vec__24767, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_24765), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_24765;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__18736__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          var or__18736__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__18736__auto____$1)) {
            return or__18736__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__24768 = cljs.core.next.call(null, format__$1);
        format__$1 = G__24768;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var args24769 = [];
  var len__19806__auto___24775 = arguments.length;
  var i__19807__auto___24776 = 0;
  while (true) {
    if (i__19807__auto___24776 < len__19806__auto___24775) {
      args24769.push(arguments[i__19807__auto___24776]);
      var G__24777 = i__19807__auto___24776 + 1;
      i__19807__auto___24776 = G__24777;
      continue;
    } else {
    }
    break;
  }
  var G__24771 = args24769.length;
  switch(G__24771) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args24769.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__18724__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__18724__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__18724__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_24772 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_24772;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__24773 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__24773, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__24773, 1, null);
      var vec__24774 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__24774, 0, null);
      var offsets = cljs.core.nth.call(null, vec__24774, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = macro_char;
    if (cljs.core.truth_(and__18724__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__18724__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24782_24785 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24783_24786 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count24784_24787 = 0;
      var alis_24788__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count24784_24787 < cljs.core._STAR_print_length_STAR_) {
          if (alis_24788__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_24788__$1));
            if (cljs.core.next.call(null, alis_24788__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__24789 = length_count24784_24787 + 1;
              var G__24790 = cljs.core.next.call(null, alis_24788__$1);
              length_count24784_24787 = G__24789;
              alis_24788__$1 = G__24790;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24783_24786;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24782_24785;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24794_24797 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24795_24798 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count24796_24799 = 0;
      var aseq_24800 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count24796_24799 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_24800) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_24800));
            if (cljs.core.next.call(null, aseq_24800)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__24801 = length_count24796_24799 + 1;
              var G__24802 = cljs.core.next.call(null, aseq_24800);
              length_count24796_24799 = G__24801;
              aseq_24800 = G__24802;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24795_24798;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24794_24797;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__24022__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
  return function(format_in__24022__auto__, cf__24023__auto__) {
    return function() {
      var G__24803__delegate = function(args__24024__auto__) {
        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
      };
      var G__24803 = function(var_args) {
        var args__24024__auto__ = null;
        if (arguments.length > 0) {
          var G__24804__i = 0, G__24804__a = new Array(arguments.length - 0);
          while (G__24804__i < G__24804__a.length) {
            G__24804__a[G__24804__i] = arguments[G__24804__i + 0];
            ++G__24804__i;
          }
          args__24024__auto__ = new cljs.core.IndexedSeq(G__24804__a, 0);
        }
        return G__24803__delegate.call(this, args__24024__auto__);
      };
      G__24803.cljs$lang$maxFixedArity = 0;
      G__24803.cljs$lang$applyTo = function(arglist__24805) {
        var args__24024__auto__ = cljs.core.seq(arglist__24805);
        return G__24803__delegate(args__24024__auto__);
      };
      G__24803.cljs$core$IFn$_invoke$arity$variadic = G__24803__delegate;
      return G__24803;
    }();
  }(format_in__24022__auto__, cf__24023__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24811_24816 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24812_24817 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count24813_24818 = 0;
      var aseq_24819 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count24813_24818 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_24819) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_24814_24820 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_24815_24821 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_24819));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_24819)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24815_24821;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24814_24820;
              }
            }
            if (cljs.core.next.call(null, aseq_24819)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__24822 = length_count24813_24818 + 1;
              var G__24823 = cljs.core.next.call(null, aseq_24819);
              length_count24813_24818 = G__24822;
              aseq_24819 = G__24823;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24812_24817;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24811_24816;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__24022__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
  return function(format_in__24022__auto__, cf__24023__auto__) {
    return function() {
      var G__24824__delegate = function(args__24024__auto__) {
        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
      };
      var G__24824 = function(var_args) {
        var args__24024__auto__ = null;
        if (arguments.length > 0) {
          var G__24825__i = 0, G__24825__a = new Array(arguments.length - 0);
          while (G__24825__i < G__24825__a.length) {
            G__24825__a[G__24825__i] = arguments[G__24825__i + 0];
            ++G__24825__i;
          }
          args__24024__auto__ = new cljs.core.IndexedSeq(G__24825__a, 0);
        }
        return G__24824__delegate.call(this, args__24024__auto__);
      };
      G__24824.cljs$lang$maxFixedArity = 0;
      G__24824.cljs$lang$applyTo = function(arglist__24826) {
        var args__24024__auto__ = cljs.core.seq(arglist__24826);
        return G__24824__delegate(args__24024__auto__);
      };
      G__24824.cljs$core$IFn$_invoke$arity$variadic = G__24824__delegate;
      return G__24824;
    }();
  }(format_in__24022__auto__, cf__24023__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__18736__auto__ = function() {
    var temp__4657__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var match = temp__4657__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24831_24835 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24832_24836 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__18724__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__18724__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__18724__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24832_24836;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24831_24835;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__24022__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
  return function(format_in__24022__auto__, cf__24023__auto__) {
    return function() {
      var G__24837__delegate = function(args__24024__auto__) {
        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
      };
      var G__24837 = function(var_args) {
        var args__24024__auto__ = null;
        if (arguments.length > 0) {
          var G__24838__i = 0, G__24838__a = new Array(arguments.length - 0);
          while (G__24838__i < G__24838__a.length) {
            G__24838__a[G__24838__i] = arguments[G__24838__i + 0];
            ++G__24838__i;
          }
          args__24024__auto__ = new cljs.core.IndexedSeq(G__24838__a, 0);
        }
        return G__24837__delegate.call(this, args__24024__auto__);
      };
      G__24837.cljs$lang$maxFixedArity = 0;
      G__24837.cljs$lang$applyTo = function(arglist__24839) {
        var args__24024__auto__ = cljs.core.seq(arglist__24839);
        return G__24837__delegate(args__24024__auto__);
      };
      G__24837.cljs$core$IFn$_invoke$arity$variadic = G__24837__delegate;
      return G__24837;
    }();
  }(format_in__24022__auto__, cf__24023__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__19661__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__19662__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__19663__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__19664__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__19665__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__19665__auto__, method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__24850 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__24850, 0, null);
    var end = cljs.core.nth.call(null, vec__24850, 1, null);
    var vec__24851 = reference;
    var keyw = cljs.core.nth.call(null, vec__24851, 0, null);
    var args = cljs.core.nthnext.call(null, vec__24851, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_24852_24858 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_24853_24859 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__24022__auto__ = "~w~:i";
          var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
          return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
            return function() {
              var G__24860__delegate = function(args__24024__auto__) {
                var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
              };
              var G__24860 = function(var_args) {
                var args__24024__auto__ = null;
                if (arguments.length > 0) {
                  var G__24861__i = 0, G__24861__a = new Array(arguments.length - 0);
                  while (G__24861__i < G__24861__a.length) {
                    G__24861__a[G__24861__i] = arguments[G__24861__i + 0];
                    ++G__24861__i;
                  }
                  args__24024__auto__ = new cljs.core.IndexedSeq(G__24861__a, 0);
                }
                return G__24860__delegate.call(this, args__24024__auto__);
              };
              G__24860.cljs$lang$maxFixedArity = 0;
              G__24860.cljs$lang$applyTo = function(arglist__24862) {
                var args__24024__auto__ = cljs.core.seq(arglist__24862);
                return G__24860__delegate(args__24024__auto__);
              };
              G__24860.cljs$core$IFn$_invoke$arity$variadic = G__24860__delegate;
              return G__24860;
            }();
          }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
        })().call(null, keyw);
        var args_24863__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_24863__$1)) {
            (function() {
              var format_in__24022__auto__ = " ";
              var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
              return function(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
                return function() {
                  var G__24864__delegate = function(args__24024__auto__) {
                    var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                    return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                  };
                  var G__24864 = function(var_args) {
                    var args__24024__auto__ = null;
                    if (arguments.length > 0) {
                      var G__24865__i = 0, G__24865__a = new Array(arguments.length - 0);
                      while (G__24865__i < G__24865__a.length) {
                        G__24865__a[G__24865__i] = arguments[G__24865__i + 0];
                        ++G__24865__i;
                      }
                      args__24024__auto__ = new cljs.core.IndexedSeq(G__24865__a, 0);
                    }
                    return G__24864__delegate.call(this, args__24024__auto__);
                  };
                  G__24864.cljs$lang$maxFixedArity = 0;
                  G__24864.cljs$lang$applyTo = function(arglist__24866) {
                    var args__24024__auto__ = cljs.core.seq(arglist__24866);
                    return G__24864__delegate(args__24024__auto__);
                  };
                  G__24864.cljs$core$IFn$_invoke$arity$variadic = G__24864__delegate;
                  return G__24864;
                }();
              }(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
            })().call(null);
            var arg_24867 = cljs.core.first.call(null, args_24863__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_24867)) {
              var vec__24854_24868 = cljs.pprint.brackets.call(null, arg_24867);
              var start_24869__$1 = cljs.core.nth.call(null, vec__24854_24868, 0, null);
              var end_24870__$1 = cljs.core.nth.call(null, vec__24854_24868, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_24855_24871 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_24856_24872 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_24869__$1, null, end_24870__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_24867), 3) && cljs.core.second.call(null, arg_24867) instanceof cljs.core.Keyword) {
                    var vec__24857_24873 = arg_24867;
                    var ns_24874 = cljs.core.nth.call(null, vec__24857_24873, 0, null);
                    var kw_24875 = cljs.core.nth.call(null, vec__24857_24873, 1, null);
                    var lis_24876 = cljs.core.nth.call(null, vec__24857_24873, 2, null);
                    (function() {
                      var format_in__24022__auto__ = "~w ~w ";
                      var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
                      return function(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, vec__24857_24873, ns_24874, kw_24875, lis_24876, _STAR_current_level_STAR_24855_24871, _STAR_current_length_STAR_24856_24872, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
                        return function() {
                          var G__24877__delegate = function(args__24024__auto__) {
                            var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                            return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                          };
                          var G__24877 = function(var_args) {
                            var args__24024__auto__ = null;
                            if (arguments.length > 0) {
                              var G__24878__i = 0, G__24878__a = new Array(arguments.length - 0);
                              while (G__24878__i < G__24878__a.length) {
                                G__24878__a[G__24878__i] = arguments[G__24878__i + 0];
                                ++G__24878__i;
                              }
                              args__24024__auto__ = new cljs.core.IndexedSeq(G__24878__a, 0);
                            }
                            return G__24877__delegate.call(this, args__24024__auto__);
                          };
                          G__24877.cljs$lang$maxFixedArity = 0;
                          G__24877.cljs$lang$applyTo = function(arglist__24879) {
                            var args__24024__auto__ = cljs.core.seq(arglist__24879);
                            return G__24877__delegate(args__24024__auto__);
                          };
                          G__24877.cljs$core$IFn$_invoke$arity$variadic = G__24877__delegate;
                          return G__24877;
                        }();
                      }(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, vec__24857_24873, ns_24874, kw_24875, lis_24876, _STAR_current_level_STAR_24855_24871, _STAR_current_length_STAR_24856_24872, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
                    })().call(null, ns_24874, kw_24875);
                    if (cljs.core.sequential_QMARK_.call(null, lis_24876)) {
                      (function() {
                        var format_in__24022__auto__ = cljs.core.vector_QMARK_.call(null, lis_24876) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
                        return function(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, vec__24857_24873, ns_24874, kw_24875, lis_24876, _STAR_current_level_STAR_24855_24871, _STAR_current_length_STAR_24856_24872, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
                          return function() {
                            var G__24880__delegate = function(args__24024__auto__) {
                              var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                              return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                            };
                            var G__24880 = function(var_args) {
                              var args__24024__auto__ = null;
                              if (arguments.length > 0) {
                                var G__24881__i = 0, G__24881__a = new Array(arguments.length - 0);
                                while (G__24881__i < G__24881__a.length) {
                                  G__24881__a[G__24881__i] = arguments[G__24881__i + 0];
                                  ++G__24881__i;
                                }
                                args__24024__auto__ = new cljs.core.IndexedSeq(G__24881__a, 0);
                              }
                              return G__24880__delegate.call(this, args__24024__auto__);
                            };
                            G__24880.cljs$lang$maxFixedArity = 0;
                            G__24880.cljs$lang$applyTo = function(arglist__24882) {
                              var args__24024__auto__ = cljs.core.seq(arglist__24882);
                              return G__24880__delegate(args__24024__auto__);
                            };
                            G__24880.cljs$core$IFn$_invoke$arity$variadic = G__24880__delegate;
                            return G__24880;
                          }();
                        }(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, vec__24857_24873, ns_24874, kw_24875, lis_24876, _STAR_current_level_STAR_24855_24871, _STAR_current_length_STAR_24856_24872, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
                      })().call(null, lis_24876);
                    } else {
                      cljs.pprint.write_out.call(null, lis_24876);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__24022__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
                      return function(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24855_24871, _STAR_current_length_STAR_24856_24872, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
                        return function() {
                          var G__24883__delegate = function(args__24024__auto__) {
                            var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                            return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                          };
                          var G__24883 = function(var_args) {
                            var args__24024__auto__ = null;
                            if (arguments.length > 0) {
                              var G__24884__i = 0, G__24884__a = new Array(arguments.length - 0);
                              while (G__24884__i < G__24884__a.length) {
                                G__24884__a[G__24884__i] = arguments[G__24884__i + 0];
                                ++G__24884__i;
                              }
                              args__24024__auto__ = new cljs.core.IndexedSeq(G__24884__a, 0);
                            }
                            return G__24883__delegate.call(this, args__24024__auto__);
                          };
                          G__24883.cljs$lang$maxFixedArity = 0;
                          G__24883.cljs$lang$applyTo = function(arglist__24885) {
                            var args__24024__auto__ = cljs.core.seq(arglist__24885);
                            return G__24883__delegate(args__24024__auto__);
                          };
                          G__24883.cljs$core$IFn$_invoke$arity$variadic = G__24883__delegate;
                          return G__24883;
                        }();
                      }(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24855_24871, _STAR_current_length_STAR_24856_24872, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
                    }(), arg_24867);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24856_24872;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24855_24871;
                }
              }
              if (cljs.core.next.call(null, args_24863__$1)) {
                (function() {
                  var format_in__24022__auto__ = "~_";
                  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
                  return function(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
                    return function() {
                      var G__24886__delegate = function(args__24024__auto__) {
                        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                      };
                      var G__24886 = function(var_args) {
                        var args__24024__auto__ = null;
                        if (arguments.length > 0) {
                          var G__24887__i = 0, G__24887__a = new Array(arguments.length - 0);
                          while (G__24887__i < G__24887__a.length) {
                            G__24887__a[G__24887__i] = arguments[G__24887__i + 0];
                            ++G__24887__i;
                          }
                          args__24024__auto__ = new cljs.core.IndexedSeq(G__24887__a, 0);
                        }
                        return G__24886__delegate.call(this, args__24024__auto__);
                      };
                      G__24886.cljs$lang$maxFixedArity = 0;
                      G__24886.cljs$lang$applyTo = function(arglist__24888) {
                        var args__24024__auto__ = cljs.core.seq(arglist__24888);
                        return G__24886__delegate(args__24024__auto__);
                      };
                      G__24886.cljs$core$IFn$_invoke$arity$variadic = G__24886__delegate;
                      return G__24886;
                    }();
                  }(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, vec__24854_24868, start_24869__$1, end_24870__$1, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_24867);
              if (cljs.core.next.call(null, args_24863__$1)) {
                (function() {
                  var format_in__24022__auto__ = "~:_";
                  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
                  return function(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args) {
                    return function() {
                      var G__24889__delegate = function(args__24024__auto__) {
                        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                      };
                      var G__24889 = function(var_args) {
                        var args__24024__auto__ = null;
                        if (arguments.length > 0) {
                          var G__24890__i = 0, G__24890__a = new Array(arguments.length - 0);
                          while (G__24890__i < G__24890__a.length) {
                            G__24890__a[G__24890__i] = arguments[G__24890__i + 0];
                            ++G__24890__i;
                          }
                          args__24024__auto__ = new cljs.core.IndexedSeq(G__24890__a, 0);
                        }
                        return G__24889__delegate.call(this, args__24024__auto__);
                      };
                      G__24889.cljs$lang$maxFixedArity = 0;
                      G__24889.cljs$lang$applyTo = function(arglist__24891) {
                        var args__24024__auto__ = cljs.core.seq(arglist__24891);
                        return G__24889__delegate(args__24024__auto__);
                      };
                      G__24889.cljs$core$IFn$_invoke$arity$variadic = G__24889__delegate;
                      return G__24889;
                    }();
                  }(args_24863__$1, format_in__24022__auto__, cf__24023__auto__, arg_24867, _STAR_current_level_STAR_24852_24858, _STAR_current_length_STAR_24853_24859, vec__24850, start, end, vec__24851, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__24892 = cljs.core.next.call(null, args_24863__$1);
            args_24863__$1 = G__24892;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24853_24859;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24852_24858;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__24898 = alis;
    var ns_sym = cljs.core.nth.call(null, vec__24898, 0, null);
    var ns_name = cljs.core.nth.call(null, vec__24898, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__24898, 2);
    var vec__24899 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__24899, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__24899, 1, null);
    var vec__24900 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__24900, 0, null);
    var references = cljs.core.nth.call(null, vec__24900, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_24901_24903 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_24902_24904 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__24022__auto__ = "~w ~1I~@_~w";
          var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
          return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24901_24903, _STAR_current_length_STAR_24902_24904, vec__24898, ns_sym, ns_name, stuff, vec__24899, doc_str, stuff__$1, vec__24900, attr_map, references) {
            return function() {
              var G__24905__delegate = function(args__24024__auto__) {
                var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
              };
              var G__24905 = function(var_args) {
                var args__24024__auto__ = null;
                if (arguments.length > 0) {
                  var G__24906__i = 0, G__24906__a = new Array(arguments.length - 0);
                  while (G__24906__i < G__24906__a.length) {
                    G__24906__a[G__24906__i] = arguments[G__24906__i + 0];
                    ++G__24906__i;
                  }
                  args__24024__auto__ = new cljs.core.IndexedSeq(G__24906__a, 0);
                }
                return G__24905__delegate.call(this, args__24024__auto__);
              };
              G__24905.cljs$lang$maxFixedArity = 0;
              G__24905.cljs$lang$applyTo = function(arglist__24907) {
                var args__24024__auto__ = cljs.core.seq(arglist__24907);
                return G__24905__delegate(args__24024__auto__);
              };
              G__24905.cljs$core$IFn$_invoke$arity$variadic = G__24905__delegate;
              return G__24905;
            }();
          }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24901_24903, _STAR_current_length_STAR_24902_24904, vec__24898, ns_sym, ns_name, stuff, vec__24899, doc_str, stuff__$1, vec__24900, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__18736__auto__ = doc_str;
          if (cljs.core.truth_(or__18736__auto__)) {
            return or__18736__auto__;
          } else {
            var or__18736__auto____$1 = attr_map;
            if (cljs.core.truth_(or__18736__auto____$1)) {
              return or__18736__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__24022__auto__ = "~@:_";
            var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
            return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24901_24903, _STAR_current_length_STAR_24902_24904, vec__24898, ns_sym, ns_name, stuff, vec__24899, doc_str, stuff__$1, vec__24900, attr_map, references) {
              return function() {
                var G__24908__delegate = function(args__24024__auto__) {
                  var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                  return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                };
                var G__24908 = function(var_args) {
                  var args__24024__auto__ = null;
                  if (arguments.length > 0) {
                    var G__24909__i = 0, G__24909__a = new Array(arguments.length - 0);
                    while (G__24909__i < G__24909__a.length) {
                      G__24909__a[G__24909__i] = arguments[G__24909__i + 0];
                      ++G__24909__i;
                    }
                    args__24024__auto__ = new cljs.core.IndexedSeq(G__24909__a, 0);
                  }
                  return G__24908__delegate.call(this, args__24024__auto__);
                };
                G__24908.cljs$lang$maxFixedArity = 0;
                G__24908.cljs$lang$applyTo = function(arglist__24910) {
                  var args__24024__auto__ = cljs.core.seq(arglist__24910);
                  return G__24908__delegate(args__24024__auto__);
                };
                G__24908.cljs$core$IFn$_invoke$arity$variadic = G__24908__delegate;
                return G__24908;
              }();
            }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24901_24903, _STAR_current_length_STAR_24902_24904, vec__24898, ns_sym, ns_name, stuff, vec__24899, doc_str, stuff__$1, vec__24900, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__18736__auto__ = attr_map;
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__24022__auto__ = "~w~:[~;~:@_~]";
            var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
            return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24901_24903, _STAR_current_length_STAR_24902_24904, vec__24898, ns_sym, ns_name, stuff, vec__24899, doc_str, stuff__$1, vec__24900, attr_map, references) {
              return function() {
                var G__24911__delegate = function(args__24024__auto__) {
                  var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                  return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                };
                var G__24911 = function(var_args) {
                  var args__24024__auto__ = null;
                  if (arguments.length > 0) {
                    var G__24912__i = 0, G__24912__a = new Array(arguments.length - 0);
                    while (G__24912__i < G__24912__a.length) {
                      G__24912__a[G__24912__i] = arguments[G__24912__i + 0];
                      ++G__24912__i;
                    }
                    args__24024__auto__ = new cljs.core.IndexedSeq(G__24912__a, 0);
                  }
                  return G__24911__delegate.call(this, args__24024__auto__);
                };
                G__24911.cljs$lang$maxFixedArity = 0;
                G__24911.cljs$lang$applyTo = function(arglist__24913) {
                  var args__24024__auto__ = cljs.core.seq(arglist__24913);
                  return G__24911__delegate(args__24024__auto__);
                };
                G__24911.cljs$core$IFn$_invoke$arity$variadic = G__24911__delegate;
                return G__24911;
              }();
            }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24901_24903, _STAR_current_length_STAR_24902_24904, vec__24898, ns_sym, ns_name, stuff, vec__24899, doc_str, stuff__$1, vec__24900, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_24914__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_24914__$1));
          var temp__4657__auto___24915 = cljs.core.next.call(null, references_24914__$1);
          if (temp__4657__auto___24915) {
            var references_24916__$2 = temp__4657__auto___24915;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__24917 = references_24916__$2;
            references_24914__$1 = G__24917;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24902_24904;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24901_24903;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__24022__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
  return function(format_in__24022__auto__, cf__24023__auto__) {
    return function() {
      var G__24918__delegate = function(args__24024__auto__) {
        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
      };
      var G__24918 = function(var_args) {
        var args__24024__auto__ = null;
        if (arguments.length > 0) {
          var G__24919__i = 0, G__24919__a = new Array(arguments.length - 0);
          while (G__24919__i < G__24919__a.length) {
            G__24919__a[G__24919__i] = arguments[G__24919__i + 0];
            ++G__24919__i;
          }
          args__24024__auto__ = new cljs.core.IndexedSeq(G__24919__a, 0);
        }
        return G__24918__delegate.call(this, args__24024__auto__);
      };
      G__24918.cljs$lang$maxFixedArity = 0;
      G__24918.cljs$lang$applyTo = function(arglist__24920) {
        var args__24024__auto__ = cljs.core.seq(arglist__24920);
        return G__24918__delegate(args__24024__auto__);
      };
      G__24918.cljs$core$IFn$_invoke$arity$variadic = G__24918__delegate;
      return G__24918;
    }();
  }(format_in__24022__auto__, cf__24023__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__24022__auto__ = " ~_";
        var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
        return function(format_in__24022__auto__, cf__24023__auto__) {
          return function() {
            var G__24921__delegate = function(args__24024__auto__) {
              var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
              return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
            };
            var G__24921 = function(var_args) {
              var args__24024__auto__ = null;
              if (arguments.length > 0) {
                var G__24922__i = 0, G__24922__a = new Array(arguments.length - 0);
                while (G__24922__i < G__24922__a.length) {
                  G__24922__a[G__24922__i] = arguments[G__24922__i + 0];
                  ++G__24922__i;
                }
                args__24024__auto__ = new cljs.core.IndexedSeq(G__24922__a, 0);
              }
              return G__24921__delegate.call(this, args__24024__auto__);
            };
            G__24921.cljs$lang$maxFixedArity = 0;
            G__24921.cljs$lang$applyTo = function(arglist__24923) {
              var args__24024__auto__ = cljs.core.seq(arglist__24923);
              return G__24921__delegate(args__24024__auto__);
            };
            G__24921.cljs$core$IFn$_invoke$arity$variadic = G__24921__delegate;
            return G__24921;
          }();
        }(format_in__24022__auto__, cf__24023__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__24022__auto__ = " ~@_";
        var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
        return function(format_in__24022__auto__, cf__24023__auto__) {
          return function() {
            var G__24924__delegate = function(args__24024__auto__) {
              var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
              return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
            };
            var G__24924 = function(var_args) {
              var args__24024__auto__ = null;
              if (arguments.length > 0) {
                var G__24925__i = 0, G__24925__a = new Array(arguments.length - 0);
                while (G__24925__i < G__24925__a.length) {
                  G__24925__a[G__24925__i] = arguments[G__24925__i + 0];
                  ++G__24925__i;
                }
                args__24024__auto__ = new cljs.core.IndexedSeq(G__24925__a, 0);
              }
              return G__24924__delegate.call(this, args__24024__auto__);
            };
            G__24924.cljs$lang$maxFixedArity = 0;
            G__24924.cljs$lang$applyTo = function(arglist__24926) {
              var args__24024__auto__ = cljs.core.seq(arglist__24926);
              return G__24924__delegate(args__24024__auto__);
            };
            G__24924.cljs$core$IFn$_invoke$arity$variadic = G__24924__delegate;
            return G__24924;
          }();
        }(format_in__24022__auto__, cf__24023__auto__);
      })().call(null);
    }
    return function() {
      var format_in__24022__auto__ = "~{~w~^ ~_~}";
      var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
      return function(format_in__24022__auto__, cf__24023__auto__) {
        return function() {
          var G__24927__delegate = function(args__24024__auto__) {
            var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
            return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
          };
          var G__24927 = function(var_args) {
            var args__24024__auto__ = null;
            if (arguments.length > 0) {
              var G__24928__i = 0, G__24928__a = new Array(arguments.length - 0);
              while (G__24928__i < G__24928__a.length) {
                G__24928__a[G__24928__i] = arguments[G__24928__i + 0];
                ++G__24928__i;
              }
              args__24024__auto__ = new cljs.core.IndexedSeq(G__24928__a, 0);
            }
            return G__24927__delegate.call(this, args__24024__auto__);
          };
          G__24927.cljs$lang$maxFixedArity = 0;
          G__24927.cljs$lang$applyTo = function(arglist__24929) {
            var args__24024__auto__ = cljs.core.seq(arglist__24929);
            return G__24927__delegate(args__24024__auto__);
          };
          G__24927.cljs$core$IFn$_invoke$arity$variadic = G__24927__delegate;
          return G__24927;
        }();
      }(format_in__24022__auto__, cf__24023__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__24022__auto__ = " ~_~{~w~^ ~_~}";
      var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
      return function(format_in__24022__auto__, cf__24023__auto__) {
        return function() {
          var G__24930__delegate = function(args__24024__auto__) {
            var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
            return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
          };
          var G__24930 = function(var_args) {
            var args__24024__auto__ = null;
            if (arguments.length > 0) {
              var G__24931__i = 0, G__24931__a = new Array(arguments.length - 0);
              while (G__24931__i < G__24931__a.length) {
                G__24931__a[G__24931__i] = arguments[G__24931__i + 0];
                ++G__24931__i;
              }
              args__24024__auto__ = new cljs.core.IndexedSeq(G__24931__a, 0);
            }
            return G__24930__delegate.call(this, args__24024__auto__);
          };
          G__24930.cljs$lang$maxFixedArity = 0;
          G__24930.cljs$lang$applyTo = function(arglist__24932) {
            var args__24024__auto__ = cljs.core.seq(arglist__24932);
            return G__24930__delegate(args__24024__auto__);
          };
          G__24930.cljs$core$IFn$_invoke$arity$variadic = G__24930__delegate;
          return G__24930;
        }();
      }(format_in__24022__auto__, cf__24023__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__24938 = alis;
    var defn_sym = cljs.core.nth.call(null, vec__24938, 0, null);
    var defn_name = cljs.core.nth.call(null, vec__24938, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__24938, 2);
    var vec__24939 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__24939, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__24939, 1, null);
    var vec__24940 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__24940, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__24940, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_24941_24943 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_24942_24944 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__24022__auto__ = "~w ~1I~@_~w";
          var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
          return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24941_24943, _STAR_current_length_STAR_24942_24944, vec__24938, defn_sym, defn_name, stuff, vec__24939, doc_str, stuff__$1, vec__24940, attr_map, stuff__$2) {
            return function() {
              var G__24945__delegate = function(args__24024__auto__) {
                var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
              };
              var G__24945 = function(var_args) {
                var args__24024__auto__ = null;
                if (arguments.length > 0) {
                  var G__24946__i = 0, G__24946__a = new Array(arguments.length - 0);
                  while (G__24946__i < G__24946__a.length) {
                    G__24946__a[G__24946__i] = arguments[G__24946__i + 0];
                    ++G__24946__i;
                  }
                  args__24024__auto__ = new cljs.core.IndexedSeq(G__24946__a, 0);
                }
                return G__24945__delegate.call(this, args__24024__auto__);
              };
              G__24945.cljs$lang$maxFixedArity = 0;
              G__24945.cljs$lang$applyTo = function(arglist__24947) {
                var args__24024__auto__ = cljs.core.seq(arglist__24947);
                return G__24945__delegate(args__24024__auto__);
              };
              G__24945.cljs$core$IFn$_invoke$arity$variadic = G__24945__delegate;
              return G__24945;
            }();
          }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24941_24943, _STAR_current_length_STAR_24942_24944, vec__24938, defn_sym, defn_name, stuff, vec__24939, doc_str, stuff__$1, vec__24940, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__24022__auto__ = " ~_~w";
            var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
            return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24941_24943, _STAR_current_length_STAR_24942_24944, vec__24938, defn_sym, defn_name, stuff, vec__24939, doc_str, stuff__$1, vec__24940, attr_map, stuff__$2) {
              return function() {
                var G__24948__delegate = function(args__24024__auto__) {
                  var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                  return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                };
                var G__24948 = function(var_args) {
                  var args__24024__auto__ = null;
                  if (arguments.length > 0) {
                    var G__24949__i = 0, G__24949__a = new Array(arguments.length - 0);
                    while (G__24949__i < G__24949__a.length) {
                      G__24949__a[G__24949__i] = arguments[G__24949__i + 0];
                      ++G__24949__i;
                    }
                    args__24024__auto__ = new cljs.core.IndexedSeq(G__24949__a, 0);
                  }
                  return G__24948__delegate.call(this, args__24024__auto__);
                };
                G__24948.cljs$lang$maxFixedArity = 0;
                G__24948.cljs$lang$applyTo = function(arglist__24950) {
                  var args__24024__auto__ = cljs.core.seq(arglist__24950);
                  return G__24948__delegate(args__24024__auto__);
                };
                G__24948.cljs$core$IFn$_invoke$arity$variadic = G__24948__delegate;
                return G__24948;
              }();
            }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24941_24943, _STAR_current_length_STAR_24942_24944, vec__24938, defn_sym, defn_name, stuff, vec__24939, doc_str, stuff__$1, vec__24940, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__24022__auto__ = " ~_~w";
            var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
            return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24941_24943, _STAR_current_length_STAR_24942_24944, vec__24938, defn_sym, defn_name, stuff, vec__24939, doc_str, stuff__$1, vec__24940, attr_map, stuff__$2) {
              return function() {
                var G__24951__delegate = function(args__24024__auto__) {
                  var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                  return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
                };
                var G__24951 = function(var_args) {
                  var args__24024__auto__ = null;
                  if (arguments.length > 0) {
                    var G__24952__i = 0, G__24952__a = new Array(arguments.length - 0);
                    while (G__24952__i < G__24952__a.length) {
                      G__24952__a[G__24952__i] = arguments[G__24952__i + 0];
                      ++G__24952__i;
                    }
                    args__24024__auto__ = new cljs.core.IndexedSeq(G__24952__a, 0);
                  }
                  return G__24951__delegate.call(this, args__24024__auto__);
                };
                G__24951.cljs$lang$maxFixedArity = 0;
                G__24951.cljs$lang$applyTo = function(arglist__24953) {
                  var args__24024__auto__ = cljs.core.seq(arglist__24953);
                  return G__24951__delegate(args__24024__auto__);
                };
                G__24951.cljs$core$IFn$_invoke$arity$variadic = G__24951__delegate;
                return G__24951;
              }();
            }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24941_24943, _STAR_current_length_STAR_24942_24944, vec__24938, defn_sym, defn_name, stuff, vec__24939, doc_str, stuff__$1, vec__24940, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__18736__auto__ = doc_str;
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__18736__auto__ = doc_str;
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24942_24944;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24941_24943;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24959_24964 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24960_24965 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count24961_24966 = 0;
      var binding_24967 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count24961_24966 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_24967)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_24962_24968 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_24963_24969 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_24967));
                if (cljs.core.next.call(null, binding_24967)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_24967));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24963_24969;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24962_24968;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_24967))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__24970 = length_count24961_24966 + 1;
              var G__24971 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_24967));
              length_count24961_24966 = G__24970;
              binding_24967 = G__24971;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24960_24965;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24959_24964;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24974_24976 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24975_24977 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__24022__auto__ = "~w ~1I~@_";
          var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
          return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24974_24976, _STAR_current_length_STAR_24975_24977, base_sym) {
            return function() {
              var G__24978__delegate = function(args__24024__auto__) {
                var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
              };
              var G__24978 = function(var_args) {
                var args__24024__auto__ = null;
                if (arguments.length > 0) {
                  var G__24979__i = 0, G__24979__a = new Array(arguments.length - 0);
                  while (G__24979__i < G__24979__a.length) {
                    G__24979__a[G__24979__i] = arguments[G__24979__i + 0];
                    ++G__24979__i;
                  }
                  args__24024__auto__ = new cljs.core.IndexedSeq(G__24979__a, 0);
                }
                return G__24978__delegate.call(this, args__24024__auto__);
              };
              G__24978.cljs$lang$maxFixedArity = 0;
              G__24978.cljs$lang$applyTo = function(arglist__24980) {
                var args__24024__auto__ = cljs.core.seq(arglist__24980);
                return G__24978__delegate(args__24024__auto__);
              };
              G__24978.cljs$core$IFn$_invoke$arity$variadic = G__24978__delegate;
              return G__24978;
            }();
          }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24974_24976, _STAR_current_length_STAR_24975_24977, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__24022__auto__ = " ~_~{~w~^ ~_~}";
          var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
          return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24974_24976, _STAR_current_length_STAR_24975_24977, base_sym) {
            return function() {
              var G__24981__delegate = function(args__24024__auto__) {
                var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
              };
              var G__24981 = function(var_args) {
                var args__24024__auto__ = null;
                if (arguments.length > 0) {
                  var G__24982__i = 0, G__24982__a = new Array(arguments.length - 0);
                  while (G__24982__i < G__24982__a.length) {
                    G__24982__a[G__24982__i] = arguments[G__24982__i + 0];
                    ++G__24982__i;
                  }
                  args__24024__auto__ = new cljs.core.IndexedSeq(G__24982__a, 0);
                }
                return G__24981__delegate.call(this, args__24024__auto__);
              };
              G__24981.cljs$lang$maxFixedArity = 0;
              G__24981.cljs$lang$applyTo = function(arglist__24983) {
                var args__24024__auto__ = cljs.core.seq(arglist__24983);
                return G__24981__delegate(args__24024__auto__);
              };
              G__24981.cljs$core$IFn$_invoke$arity$variadic = G__24981__delegate;
              return G__24981;
            }();
          }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_24974_24976, _STAR_current_length_STAR_24975_24977, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24975_24977;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24974_24976;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__24022__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
  return function(format_in__24022__auto__, cf__24023__auto__) {
    return function() {
      var G__24984__delegate = function(args__24024__auto__) {
        var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
        return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
      };
      var G__24984 = function(var_args) {
        var args__24024__auto__ = null;
        if (arguments.length > 0) {
          var G__24985__i = 0, G__24985__a = new Array(arguments.length - 0);
          while (G__24985__i < G__24985__a.length) {
            G__24985__a[G__24985__i] = arguments[G__24985__i + 0];
            ++G__24985__i;
          }
          args__24024__auto__ = new cljs.core.IndexedSeq(G__24985__a, 0);
        }
        return G__24984__delegate.call(this, args__24024__auto__);
      };
      G__24984.cljs$lang$maxFixedArity = 0;
      G__24984.cljs$lang$applyTo = function(arglist__24986) {
        var args__24024__auto__ = cljs.core.seq(arglist__24986);
        return G__24984__delegate(args__24024__auto__);
      };
      G__24984.cljs$core$IFn$_invoke$arity$variadic = G__24984__delegate;
      return G__24984;
    }();
  }(format_in__24022__auto__, cf__24023__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_24992_24997 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_24993_24998 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count24994_24999 = 0;
        var alis_25000__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count24994_24999 < cljs.core._STAR_print_length_STAR_) {
            if (alis_25000__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_24995_25001 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_24996_25002 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_25000__$1));
                  if (cljs.core.next.call(null, alis_25000__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_25000__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24996_25002;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24995_25001;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_25000__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__25003 = length_count24994_24999 + 1;
                var G__25004 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_25000__$1));
                length_count24994_24999 = G__25003;
                alis_25000__$1 = G__25004;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_24993_24998;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_24992_24997;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_25010_25015 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_25011_25016 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__24022__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
          return function(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_25010_25015, _STAR_current_length_STAR_25011_25016) {
            return function() {
              var G__25017__delegate = function(args__24024__auto__) {
                var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
                return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
              };
              var G__25017 = function(var_args) {
                var args__24024__auto__ = null;
                if (arguments.length > 0) {
                  var G__25018__i = 0, G__25018__a = new Array(arguments.length - 0);
                  while (G__25018__i < G__25018__a.length) {
                    G__25018__a[G__25018__i] = arguments[G__25018__i + 0];
                    ++G__25018__i;
                  }
                  args__24024__auto__ = new cljs.core.IndexedSeq(G__25018__a, 0);
                }
                return G__25017__delegate.call(this, args__24024__auto__);
              };
              G__25017.cljs$lang$maxFixedArity = 0;
              G__25017.cljs$lang$applyTo = function(arglist__25019) {
                var args__24024__auto__ = cljs.core.seq(arglist__25019);
                return G__25017__delegate(args__24024__auto__);
              };
              G__25017.cljs$core$IFn$_invoke$arity$variadic = G__25017__delegate;
              return G__25017;
            }();
          }(format_in__24022__auto__, cf__24023__auto__, _STAR_current_level_STAR_25010_25015, _STAR_current_length_STAR_25011_25016);
        }(), alis);
        var length_count25012_25020 = 0;
        var alis_25021__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count25012_25020 < cljs.core._STAR_print_length_STAR_) {
            if (alis_25021__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_25013_25022 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_25014_25023 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_25021__$1));
                  if (cljs.core.next.call(null, alis_25021__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_25021__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_25014_25023;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_25013_25022;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_25021__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__25024 = length_count25012_25020 + 1;
                var G__25025 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_25021__$1));
                length_count25012_25020 = G__25024;
                alis_25021__$1 = G__25025;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_25011_25016;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_25010_25015;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_25029 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_25029, args, nlis) {
      return function(p1__25026_SHARP_, p2__25027_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__25026_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__25027_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_25029, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__24022__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__24023__auto__ = typeof format_in__24022__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__24022__auto__) : format_in__24022__auto__;
        return function(format_in__24022__auto__, cf__24023__auto__, _STAR_symbol_map_STAR_25029, args, nlis) {
          return function() {
            var G__25030__delegate = function(args__24024__auto__) {
              var navigator__24025__auto__ = cljs.pprint.init_navigator.call(null, args__24024__auto__);
              return cljs.pprint.execute_format.call(null, cf__24023__auto__, navigator__24025__auto__);
            };
            var G__25030 = function(var_args) {
              var args__24024__auto__ = null;
              if (arguments.length > 0) {
                var G__25031__i = 0, G__25031__a = new Array(arguments.length - 0);
                while (G__25031__i < G__25031__a.length) {
                  G__25031__a[G__25031__i] = arguments[G__25031__i + 0];
                  ++G__25031__i;
                }
                args__24024__auto__ = new cljs.core.IndexedSeq(G__25031__a, 0);
              }
              return G__25030__delegate.call(this, args__24024__auto__);
            };
            G__25030.cljs$lang$maxFixedArity = 0;
            G__25030.cljs$lang$applyTo = function(arglist__25032) {
              var args__24024__auto__ = cljs.core.seq(arglist__25032);
              return G__25030__delegate(args__24024__auto__);
            };
            G__25030.cljs$core$IFn$_invoke$arity$variadic = G__25030__delegate;
            return G__25030;
          }();
        }(format_in__24022__auto__, cf__24023__auto__, _STAR_symbol_map_STAR_25029, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_25029;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_25036_25039 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_25037_25040 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count25038_25041 = 0;
      var alis_25042__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count25038_25041 < cljs.core._STAR_print_length_STAR_) {
          if (alis_25042__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_25042__$1));
            if (cljs.core.next.call(null, alis_25042__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__25043 = length_count25038_25041 + 1;
              var G__25044 = cljs.core.next.call(null, alis_25042__$1);
              length_count25038_25041 = G__25043;
              alis_25042__$1 = G__25044;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_25037_25040;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_25036_25039;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__19516__auto__ = function cljs$pprint$two_forms_$_iter__25049(s__25050) {
      return new cljs.core.LazySeq(null, function() {
        var s__25050__$1 = s__25050;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__25050__$1);
          if (temp__4657__auto__) {
            var s__25050__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__25050__$2)) {
              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__25050__$2);
              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
              var b__25052 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
              if (function() {
                var i__25051 = 0;
                while (true) {
                  if (i__25051 < size__19515__auto__) {
                    var x = cljs.core._nth.call(null, c__19514__auto__, i__25051);
                    cljs.core.chunk_append.call(null, b__25052, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__25053 = i__25051 + 1;
                    i__25051 = G__25053;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25052), cljs$pprint$two_forms_$_iter__25049.call(null, cljs.core.chunk_rest.call(null, s__25050__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25052), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__25050__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__25049.call(null, cljs.core.rest.call(null, s__25050__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__19516__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__25054_SHARP_) {
      var vec__25056 = p1__25054_SHARP_;
      var s = cljs.core.nth.call(null, vec__25056, 0, null);
      var f = cljs.core.nth.call(null, vec__25056, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__18736__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__18736__auto__)) {
          return or__18736__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__25054_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4655__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4655__auto__)) {
      var special_form = temp__4655__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4655__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var arg_num = temp__4655__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__19661__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__19662__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__19663__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__19664__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__19665__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__19665__auto__, method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__19067__auto__ = 0;
    var y__19068__auto__ = width - cljs.core.count.call(null, s);
    return x__19067__auto__ > y__19068__auto__ ? x__19067__auto__ : y__19068__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var args25060 = [];
  var len__19806__auto___25076 = arguments.length;
  var i__19807__auto___25077 = 0;
  while (true) {
    if (i__19807__auto___25077 < len__19806__auto___25076) {
      args25060.push(arguments[i__19807__auto___25077]);
      var G__25078 = i__19807__auto___25077 + 1;
      i__19807__auto___25077 = G__25078;
      continue;
    } else {
    }
    break;
  }
  var G__25062 = args25060.length;
  switch(G__25062) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25060.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_25063 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_25063) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_25063) {
            return function(p1__25057_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__25057_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_25063), rows));
        };
      }(_STAR_print_newline_STAR_25063), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_25063) {
        return function(p1__25058_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__25058_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_25063), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_25063) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__19516__auto__ = function(widths, spacers, _STAR_print_newline_STAR_25063) {
              return function cljs$pprint$iter__25064(s__25065) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_25063) {
                  return function() {
                    var s__25065__$1 = s__25065;
                    while (true) {
                      var temp__4657__auto__ = cljs.core.seq.call(null, s__25065__$1);
                      if (temp__4657__auto__) {
                        var s__25065__$2 = temp__4657__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__25065__$2)) {
                          var c__19514__auto__ = cljs.core.chunk_first.call(null, s__25065__$2);
                          var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
                          var b__25067 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
                          if (function() {
                            var i__25066 = 0;
                            while (true) {
                              if (i__25066 < size__19515__auto__) {
                                var vec__25070 = cljs.core._nth.call(null, c__19514__auto__, i__25066);
                                var col = cljs.core.nth.call(null, vec__25070, 0, null);
                                var width = cljs.core.nth.call(null, vec__25070, 1, null);
                                cljs.core.chunk_append.call(null, b__25067, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__25080 = i__25066 + 1;
                                i__25066 = G__25080;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25067), cljs$pprint$iter__25064.call(null, cljs.core.chunk_rest.call(null, s__25065__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__25067), null);
                          }
                        } else {
                          var vec__25071 = cljs.core.first.call(null, s__25065__$2);
                          var col = cljs.core.nth.call(null, vec__25071, 0, null);
                          var width = cljs.core.nth.call(null, vec__25071, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__25064.call(null, cljs.core.rest.call(null, s__25065__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_25063), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_25063);
            return iter__19516__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__19516__auto__, widths, spacers, _STAR_print_newline_STAR_25063) {
              return function(p1__25059_SHARP_) {
                return cljs.core.get.call(null, row, p1__25059_SHARP_);
              };
            }(iter__19516__auto__, widths, spacers, _STAR_print_newline_STAR_25063), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_25063);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__25072 = cljs.core.seq.call(null, rows);
      var chunk__25073 = null;
      var count__25074 = 0;
      var i__25075 = 0;
      while (true) {
        if (i__25075 < count__25074) {
          var row = cljs.core._nth.call(null, chunk__25073, i__25075);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__25081 = seq__25072;
          var G__25082 = chunk__25073;
          var G__25083 = count__25074;
          var G__25084 = i__25075 + 1;
          seq__25072 = G__25081;
          chunk__25073 = G__25082;
          count__25074 = G__25083;
          i__25075 = G__25084;
          continue;
        } else {
          var temp__4657__auto__ = cljs.core.seq.call(null, seq__25072);
          if (temp__4657__auto__) {
            var seq__25072__$1 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__25072__$1)) {
              var c__19547__auto__ = cljs.core.chunk_first.call(null, seq__25072__$1);
              var G__25085 = cljs.core.chunk_rest.call(null, seq__25072__$1);
              var G__25086 = c__19547__auto__;
              var G__25087 = cljs.core.count.call(null, c__19547__auto__);
              var G__25088 = 0;
              seq__25072 = G__25085;
              chunk__25073 = G__25086;
              count__25074 = G__25087;
              i__25075 = G__25088;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__25072__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__25089 = cljs.core.next.call(null, seq__25072__$1);
              var G__25090 = null;
              var G__25091 = 0;
              var G__25092 = 0;
              seq__25072 = G__25089;
              chunk__25073 = G__25090;
              count__25074 = G__25091;
              i__25075 = G__25092;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_25063;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var args25261 = [];
  var len__19806__auto___25265 = arguments.length;
  var i__19807__auto___25266 = 0;
  while (true) {
    if (i__19807__auto___25266 < len__19806__auto___25265) {
      args25261.push(arguments[i__19807__auto___25266]);
      var G__25267 = i__19807__auto___25266 + 1;
      i__19807__auto___25266 = G__25267;
      continue;
    } else {
    }
    break;
  }
  var G__25263 = args25261.length;
  switch(G__25263) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args25261.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__25264 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__25264, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__25264;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__18736__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___25272 = arguments.length;
  var i__19807__auto___25273 = 0;
  while (true) {
    if (i__19807__auto___25273 < len__19806__auto___25272) {
      args__19813__auto__.push(arguments[i__19807__auto___25273]);
      var G__25274 = i__19807__auto___25273 + 1;
      i__19807__auto___25273 = G__25274;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 2 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__19814__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq25269) {
  var G__25270 = cljs.core.first.call(null, seq25269);
  var seq25269__$1 = cljs.core.next.call(null, seq25269);
  var G__25271 = cljs.core.first.call(null, seq25269__$1);
  var seq25269__$2 = cljs.core.next.call(null, seq25269__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__25270, G__25271, seq25269__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__25278 = m;
  var map__25278__$1 = (!(map__25278 == null) ? map__25278.cljs$lang$protocol_mask$partition0$ & 64 || map__25278.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__25278) : map__25278;
  var file = cljs.core.get.call(null, map__25278__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__25278__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__25278__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__25278, map__25278__$1, file, line, column) {
    return function(p1__25275_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__25275_SHARP_));
    };
  }(map__25278, map__25278__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__19661__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__19662__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__19663__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__19664__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__19665__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__, hierarchy__19665__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__, hierarchy__19665__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__19665__auto__, method_table__19661__auto__, prefer_table__19662__auto__, method_cache__19663__auto__, cached_hierarchy__19664__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__18736__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___25280 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___25280)) {
    var message_25281 = temp__4657__auto___25280;
    cljs.core.println.call(null, message_25281);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4657__auto___25282 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4657__auto___25282)) {
    var message_25283 = temp__4657__auto___25282;
    cljs.core.println.call(null, message_25283);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var source_map = temp__4655__auto__;
    var temp__4655__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4655__auto____$1)) {
      var columns = temp__4655__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4655__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4655__auto____$2)) {
          var mapping = temp__4655__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4655__auto__ = function() {
    var and__18724__auto__ = typeof exception.stack === "string";
    if (and__18724__auto__) {
      var G__25289 = exception.stack;
      var G__25289__$1 = G__25289 == null ? null : clojure.string.split_lines.call(null, G__25289);
      var G__25289__$2 = G__25289__$1 == null ? null : cljs.core.get.call(null, G__25289__$1, depth);
      if (G__25289__$2 == null) {
        return null;
      } else {
        return clojure.string.trim.call(null, G__25289__$2);
      }
    } else {
      return and__18724__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var stack_element = temp__4655__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__25290 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__25290, 0, null);
    var column = cljs.core.nth.call(null, vec__25290, 1, null);
    var vec__25291 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__25291, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__25291, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__25291, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__25293 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__25293) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4657__auto__) {
      var xs__5205__auto__ = temp__4657__auto__;
      var f = cljs.core.first.call(null, xs__5205__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__5205__auto__, temp__4657__auto__), null);
          return function(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__5205__auto__, temp__4657__auto__);
        }());
      } else {
        var G__25299 = function() {
          var G__25298 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__25298);
          } else {
            return G__25298;
          }
        }();
        fns = G__25299;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__25301 = fns;
  if (G__25301 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__25301, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e25304) {
      var e = e25304;
      var G__25305 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__25305) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var t = temp__4655__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__25308 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__25308, 0, null);
  var types = vec__25308;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str("(not-any? nil? types)")].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str("(\x3e 2 (count types))")].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__25316) {
    var vec__25317 = p__25316;
    var ns = cljs.core.nth.call(null, vec__25317, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__25317, 1, null);
    return function(vec__25317, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__25318 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__25318) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1) {
                    return function() {
                      var seq__25319 = cljs.core.seq.call(null, vars__$1);
                      var chunk__25320 = null;
                      var count__25321 = 0;
                      var i__25322 = 0;
                      while (true) {
                        if (i__25322 < count__25321) {
                          var v = cljs.core._nth.call(null, chunk__25320, i__25322);
                          var temp__4657__auto___25324 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4657__auto___25324)) {
                            var t_25325 = temp__4657__auto___25324;
                            each_fixture_fn.call(null, function(seq__25319, chunk__25320, count__25321, i__25322, t_25325, temp__4657__auto___25324, v, each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_25325)));
                              };
                            }(seq__25319, chunk__25320, count__25321, i__25322, t_25325, temp__4657__auto___25324, v, each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1));
                          } else {
                          }
                          var G__25326 = seq__25319;
                          var G__25327 = chunk__25320;
                          var G__25328 = count__25321;
                          var G__25329 = i__25322 + 1;
                          seq__25319 = G__25326;
                          chunk__25320 = G__25327;
                          count__25321 = G__25328;
                          i__25322 = G__25329;
                          continue;
                        } else {
                          var temp__4657__auto__ = cljs.core.seq.call(null, seq__25319);
                          if (temp__4657__auto__) {
                            var seq__25319__$1 = temp__4657__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__25319__$1)) {
                              var c__19547__auto__ = cljs.core.chunk_first.call(null, seq__25319__$1);
                              var G__25330 = cljs.core.chunk_rest.call(null, seq__25319__$1);
                              var G__25331 = c__19547__auto__;
                              var G__25332 = cljs.core.count.call(null, c__19547__auto__);
                              var G__25333 = 0;
                              seq__25319 = G__25330;
                              chunk__25320 = G__25331;
                              count__25321 = G__25332;
                              i__25322 = G__25333;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__25319__$1);
                              var temp__4657__auto___25334__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4657__auto___25334__$1)) {
                                var t_25335 = temp__4657__auto___25334__$1;
                                each_fixture_fn.call(null, function(seq__25319, chunk__25320, count__25321, i__25322, t_25335, temp__4657__auto___25334__$1, v, seq__25319__$1, temp__4657__auto__, each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_25335)));
                                  };
                                }(seq__25319, chunk__25320, count__25321, i__25322, t_25335, temp__4657__auto___25334__$1, v, seq__25319__$1, temp__4657__auto__, each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1));
                              } else {
                              }
                              var G__25336 = cljs.core.next.call(null, seq__25319__$1);
                              var G__25337 = null;
                              var G__25338 = 0;
                              var G__25339 = 0;
                              seq__25319 = G__25336;
                              chunk__25320 = G__25337;
                              count__25321 = G__25338;
                              i__25322 = G__25339;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1));
                };
              }(each_fixture_fn, G__25318, env, once_fixtures, each_fixtures, vec__25317, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__25317, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
};
cljs.core.async.impl.protocols.take_BANG_ = function cljs$core$async$impl$protocols$take_BANG_(port, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 == null)) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__19399__auto__ = port == null ? null : port;
    var m__19400__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, port, fn1_handler);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, port, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
};
cljs.core.async.impl.protocols.put_BANG_ = function cljs$core$async$impl$protocols$put_BANG_(port, val, fn1_handler) {
  if (!(port == null) && !(port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 == null)) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__19399__auto__ = port == null ? null : port;
    var m__19400__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, port, val, fn1_handler);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, port, val, fn1_handler);
      } else {
        throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
      }
    }
  }
};
cljs.core.async.impl.protocols.Channel = function() {
};
cljs.core.async.impl.protocols.close_BANG_ = function cljs$core$async$impl$protocols$close_BANG_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__19399__auto__ = chan == null ? null : chan;
    var m__19400__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, chan);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function cljs$core$async$impl$protocols$closed_QMARK_(chan) {
  if (!(chan == null) && !(chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 == null)) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__19399__auto__ = chan == null ? null : chan;
    var m__19400__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, chan);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, chan);
      } else {
        throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
      }
    }
  }
};
cljs.core.async.impl.protocols.Handler = function() {
};
cljs.core.async.impl.protocols.active_QMARK_ = function cljs$core$async$impl$protocols$active_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__19399__auto__ = h == null ? null : h;
    var m__19400__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, h);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.blockable_QMARK_ = function cljs$core$async$impl$protocols$blockable_QMARK_(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1(h);
  } else {
    var x__19399__auto__ = h == null ? null : h;
    var m__19400__auto__ = cljs.core.async.impl.protocols.blockable_QMARK_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, h);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.blockable_QMARK_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.blockable?", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.commit = function cljs$core$async$impl$protocols$commit(h) {
  if (!(h == null) && !(h.cljs$core$async$impl$protocols$Handler$commit$arity$1 == null)) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__19399__auto__ = h == null ? null : h;
    var m__19400__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, h);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, h);
      } else {
        throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
      }
    }
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
};
cljs.core.async.impl.protocols.full_QMARK_ = function cljs$core$async$impl$protocols$full_QMARK_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__19399__auto__ = b == null ? null : b;
    var m__19400__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, b);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function cljs$core$async$impl$protocols$remove_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__19399__auto__ = b == null ? null : b;
    var m__19400__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, b);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function cljs$core$async$impl$protocols$add_BANG__STAR_(b, itm) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__19399__auto__ = b == null ? null : b;
    var m__19400__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, b, itm);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, b, itm);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.close_buf_BANG_ = function cljs$core$async$impl$protocols$close_buf_BANG_(b) {
  if (!(b == null) && !(b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 == null)) {
    return b.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1(b);
  } else {
    var x__19399__auto__ = b == null ? null : b;
    var m__19400__auto__ = cljs.core.async.impl.protocols.close_buf_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, b);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.protocols.close_buf_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Buffer.close-buf!", b);
      }
    }
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function cljs$core$async$impl$protocols$add_BANG_(var_args) {
  var args23902 = [];
  var len__19806__auto___23905 = arguments.length;
  var i__19807__auto___23906 = 0;
  while (true) {
    if (i__19807__auto___23906 < len__19806__auto___23905) {
      args23902.push(arguments[i__19807__auto___23906]);
      var G__23907 = i__19807__auto___23906 + 1;
      i__19807__auto___23906 = G__23907;
      continue;
    } else {
    }
    break;
  }
  var G__23904 = args23902.length;
  switch(G__23904) {
    case 1:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23902.length)].join(""));;
  }
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$1 = function(b) {
  return b;
};
cljs.core.async.impl.protocols.add_BANG_.cljs$core$IFn$_invoke$arity$2 = function(b, itm) {
  if (!(itm == null)) {
  } else {
    throw new Error("Assert failed: (not (nil? itm))");
  }
  return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
};
cljs.core.async.impl.protocols.add_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function cljs$core$async$impl$buffers$acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__23911 = cnt + 1;
      cnt = G__23911;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__19651__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__19651__auto__) {
      var v_23912 = this$.pop();
      if (keep_QMARK_.call(null, v_23912)) {
        this$.unshift(v_23912);
      } else {
      }
      var G__23913 = x + 1;
      x = G__23913;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "head", "head", 869147608, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "length", "length", -2065447907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function cljs$core$async$impl$buffers$__GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function cljs$core$async$impl$buffers$ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str("(\x3e n 0)")].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function cljs$core$async$impl$buffers$__GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function cljs$core$async$impl$buffers$fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function cljs$core$async$impl$buffers$__GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function cljs$core$async$impl$buffers$dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return null;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null)], null);
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function cljs$core$async$impl$buffers$__GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function cljs$core$async$impl$buffers$sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
if (typeof cljs.core.async.impl.buffers.NO_VAL !== "undefined") {
} else {
  cljs.core.async.impl.buffers.NO_VAL = new Object;
}
cljs.core.async.impl.buffers.undelivered_QMARK_ = function cljs$core$async$impl$buffers$undelivered_QMARK_(val) {
  return cljs.core.async.impl.buffers.NO_VAL === val;
};
cljs.core.async.impl.buffers.PromiseBuffer = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    self__.val = itm;
  } else {
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$async$impl$protocols$Buffer$close_buf_BANG_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return self__.val = null;
  } else {
    return null;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(cljs.core.async.impl.buffers.undelivered_QMARK_.call(null, self__.val))) {
    return 0;
  } else {
    return 1;
  }
};
cljs.core.async.impl.buffers.PromiseBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/PromiseBuffer";
cljs.core.async.impl.buffers.PromiseBuffer.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.buffers/PromiseBuffer");
};
cljs.core.async.impl.buffers.__GT_PromiseBuffer = function cljs$core$async$impl$buffers$__GT_PromiseBuffer(val) {
  return new cljs.core.async.impl.buffers.PromiseBuffer(val);
};
cljs.core.async.impl.buffers.promise_buffer = function cljs$core$async$impl$buffers$promise_buffer() {
  return new cljs.core.async.impl.buffers.PromiseBuffer(cljs.core.async.impl.buffers.NO_VAL);
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  return (function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(null, args);
    }, interval);
  });
};
goog.functions.throttle = function(f, interval, opt_scope) {
  if (opt_scope) {
    f = goog.bind(f, opt_scope);
  }
  var timeout = null;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = null;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(null, args);
  };
  return (function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  });
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdge_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdge_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchEdge_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdge_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("goog.async.nextTick");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function cljs$core$async$impl$dispatch$process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_23916 = 0;
  while (true) {
    var m_23917 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_23917 == null) {
    } else {
      m_23917.call(null);
      if (count_23916 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__23918 = count_23916 + 1;
        count_23916 = G__23918;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function cljs$core$async$impl$dispatch$queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__18724__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__18724__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function cljs$core$async$impl$dispatch$run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function cljs$core$async$impl$dispatch$queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.channels.box = function cljs$core$async$impl$channels$box(val) {
  if (typeof cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924 = function(box, val, meta23925) {
      this.box = box;
      this.val = val;
      this.meta23925 = meta23925;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_23926, meta23925__$1) {
      var self__ = this;
      var _23926__$1 = this;
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924(self__.box, self__.val, meta23925__$1);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.prototype.cljs$core$IMeta$_meta$arity$1 = function(_23926) {
      var self__ = this;
      var _23926__$1 = this;
      return self__.meta23925;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "box", "box", -1123515375, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 
      1769233139, null)], null)))], null)), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "meta23925", "meta23925", -863538528, null)], null);
    };
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.cljs$lang$type = true;
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels23924";
    cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.channels/t_cljs$core$async$impl$channels23924");
    };
    cljs.core.async.impl.channels.__GT_t_cljs$core$async$impl$channels23924 = function cljs$core$async$impl$channels$box_$___GT_t_cljs$core$async$impl$channels23924(box__$1, val__$1, meta23925) {
      return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924(box__$1, val__$1, meta23925);
    };
  }
  return new cljs.core.async.impl.channels.t_cljs$core$async$impl$channels23924(cljs$core$async$impl$channels$box, val, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "handler", "handler", 1444934915, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function cljs$core$async$impl$channels$__GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function cljs$core$async$impl$channels$put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
};
cljs.core.async.impl.channels.abort = function cljs$core$async$impl$channels$abort(this$) {
  if (!(this$ == null) && !(this$.cljs$core$async$impl$channels$MMC$abort$arity$1 == null)) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__19399__auto__ = this$ == null ? null : this$;
    var m__19400__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, this$);
    } else {
      var m__19400__auto____$1 = cljs.core.async.impl.channels.abort["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_23927 = self__.puts.pop();
    if (putter_23927 == null) {
    } else {
      var put_handler_23928 = putter_23927.handler;
      var val_23929 = putter_23927.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23928)) {
        var put_cb_23930 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23928);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23930, put_handler_23928, val_23929, putter_23927, this$__$1) {
          return function() {
            return put_cb_23930.call(null, true);
          };
        }(put_cb_23930, put_handler_23928, val_23929, putter_23927, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str("(not (nil? val))")].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = self__.buf;
      if (cljs.core.truth_(and__18724__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__18724__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_23931 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23931)) {
            var take_cb_23932 = cljs.core.async.impl.protocols.commit.call(null, taker_23931);
            var val_23933__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23932, val_23933__$1, taker_23931, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_23932.call(null, val_23933__$1);
              };
            }(take_cb_23932, val_23933__$1, taker_23931, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
          if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length puts) impl/MAX-QUEUE-SIZE)")].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        } else {
        }
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_23934 = self__.puts.pop();
          if (putter_23934 == null) {
          } else {
            var put_handler_23935 = putter_23934.handler;
            var val_23936 = putter_23934.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_23935)) {
              var put_cb_23937 = cljs.core.async.impl.protocols.commit.call(null, put_handler_23935);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_23937, put_handler_23935, val_23936, putter_23934, _, retval, this$__$1) {
                return function() {
                  return put_cb_23937.call(null, true);
                };
              }(put_cb_23937, put_handler_23935, val_23936, putter_23934, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_23936))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__18724__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__18724__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__18724__auto__;
            }
          }())) {
            var has_val = function() {
              var and__18724__auto__ = self__.buf;
              if (cljs.core.truth_(and__18724__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__18724__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (cljs.core.truth_(cljs.core.async.impl.protocols.blockable_QMARK_.call(null, handler))) {
            if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            } else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str("(\x3c (.-length takes) impl/MAX-QUEUE-SIZE)")].join(""));
            }
            self__.takes.unbounded_unshift(handler);
          } else {
          }
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = self__.buf;
      if (cljs.core.truth_(and__18724__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__18724__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_23938 = self__.takes.pop();
      if (taker_23938 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_23938)) {
          var take_cb_23939 = cljs.core.async.impl.protocols.commit.call(null, taker_23938);
          var val_23940 = cljs.core.truth_(function() {
            var and__18724__auto__ = self__.buf;
            if (cljs.core.truth_(and__18724__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__18724__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_23939, val_23940, taker_23938, this$__$1) {
            return function() {
              return take_cb_23939.call(null, val_23940);
            };
          }(take_cb_23939, val_23940, taker_23938, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    if (cljs.core.truth_(self__.buf)) {
      cljs.core.async.impl.protocols.close_buf_BANG_.call(null, self__.buf);
    } else {
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "takes", "takes", 298247964, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-takes", "dirty-takes", 575642138, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null), cljs.core.with_meta(new cljs.core.Symbol(null, "dirty-puts", "dirty-puts", 
  57041148, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "closed", "closed", 720856168, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "add!", "add!", 2046056845, null)], null);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function cljs$core$async$impl$channels$__GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function cljs$core$async$impl$channels$ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function cljs$core$async$impl$channels$handle(buf, exh, t) {
  var else$ = function() {
    var or__18736__auto__ = exh;
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function cljs$core$async$impl$channels$chan(var_args) {
  var args23941 = [];
  var len__19806__auto___23946 = arguments.length;
  var i__19807__auto___23947 = 0;
  while (true) {
    if (i__19807__auto___23947 < len__19806__auto___23946) {
      args23941.push(arguments[i__19807__auto___23947]);
      var G__23948 = i__19807__auto___23947 + 1;
      i__19807__auto___23947 = G__23948;
      continue;
    } else {
    }
    break;
  }
  var G__23943 = args23941.length;
  switch(G__23943) {
    case 1:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args23941.length)].join(""));;
  }
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$1 = function(buf) {
  return cljs.core.async.impl.channels.chan.call(null, buf, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$2 = function(buf, xform) {
  return cljs.core.async.impl.channels.chan.call(null, buf, xform, null);
};
cljs.core.async.impl.channels.chan.cljs$core$IFn$_invoke$arity$3 = function(buf, xform, exh) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
    var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
    return function(add_BANG_) {
      return function() {
        var G__23950 = null;
        var G__23950__1 = function(buf__$1) {
          try {
            return add_BANG_.call(null, buf__$1);
          } catch (e23944) {
            var t = e23944;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        var G__23950__2 = function(buf__$1, val) {
          try {
            return add_BANG_.call(null, buf__$1, val);
          } catch (e23945) {
            var t = e23945;
            return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
          }
        };
        G__23950 = function(buf__$1, val) {
          switch(arguments.length) {
            case 1:
              return G__23950__1.call(this, buf__$1);
            case 2:
              return G__23950__2.call(this, buf__$1, val);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__23950.cljs$core$IFn$_invoke$arity$1 = G__23950__1;
        G__23950.cljs$core$IFn$_invoke$arity$2 = G__23950__2;
        return G__23950;
      }();
    }(add_BANG_);
  }());
};
cljs.core.async.impl.channels.chan.cljs$lang$maxFixedArity = 3;
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function cljs$core$async$impl$ioc_helpers$aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function cljs$core$async$impl$ioc_helpers$aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function cljs$core$async$impl$ioc_helpers$finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function cljs$core$async$impl$ioc_helpers$fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238 = function(fn_handler, f, meta26239) {
      this.fn_handler = fn_handler;
      this.f = f;
      this.meta26239 = meta26239;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26240, meta26239__$1) {
      var self__ = this;
      var _26240__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238(self__.fn_handler, self__.f, meta26239__$1);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26240) {
      var self__ = this;
      var _26240__$1 = this;
      return self__.meta26239;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fn-handler", "fn-handler", 648785851, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, 
      cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null)], null)))], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "meta26239", "meta26239", -1391447877, null)], null);
    };
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers26238";
    cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers26238");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t_cljs$core$async$impl$ioc_helpers26238 = function cljs$core$async$impl$ioc_helpers$fn_handler_$___GT_t_cljs$core$async$impl$ioc_helpers26238(fn_handler__$1, f__$1, meta26239) {
      return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238(fn_handler__$1, f__$1, meta26239);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t_cljs$core$async$impl$ioc_helpers26238(cljs$core$async$impl$ioc_helpers$fn_handler, f, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function cljs$core$async$impl$ioc_helpers$run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function cljs$core$async$impl$ioc_helpers$run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e26242) {
    if (e26242 instanceof Object) {
      var ex = e26242;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e26242;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function cljs$core$async$impl$ioc_helpers$take_BANG_(state, blk, c) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_26245_26247 = state;
    statearr_26245_26247[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_26245_26247[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_26246_26248 = state;
    statearr_26246_26248[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_26246_26248[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function cljs$core$async$impl$ioc_helpers$put_BANG_(state, blk, c, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_26251_26253 = state;
    statearr_26251_26253[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_26251_26253[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var cb = temp__4655__auto__;
    var statearr_26252_26254 = state;
    statearr_26252_26254[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_26252_26254[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function cljs$core$async$impl$ioc_helpers$return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__19358__auto__, k__19359__auto__) {
  var self__ = this;
  var this__19358__auto____$1 = this;
  return cljs.core._lookup.call(null, this__19358__auto____$1, k__19359__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__19360__auto__, k26256, else__19361__auto__) {
  var self__ = this;
  var this__19360__auto____$1 = this;
  var G__26258 = k26256 instanceof cljs.core.Keyword ? k26256.fqn : null;
  switch(G__26258) {
    case "catch-block":
      return self__.catch_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "prev":
      return self__.prev;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k26256, else__19361__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__19372__auto__, writer__19373__auto__, opts__19374__auto__) {
  var self__ = this;
  var this__19372__auto____$1 = this;
  var pr_pair__19375__auto__ = function(this__19372__auto____$1) {
    return function(keyval__19376__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, cljs.core.pr_writer, "", " ", "", opts__19374__auto__, keyval__19376__auto__);
    };
  }(this__19372__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__19373__auto__, pr_pair__19375__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__19374__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$ = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__26255) {
  var self__ = this;
  var G__26255__$1 = this;
  return new cljs.core.RecordIter(0, G__26255__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)], null), 
  cljs.core._iterator.call(null, self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__19356__auto__) {
  var self__ = this;
  var this__19356__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__19352__auto__) {
  var self__ = this;
  var this__19352__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__19362__auto__) {
  var self__ = this;
  var this__19362__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__19353__auto__) {
  var self__ = this;
  var this__19353__auto____$1 = this;
  var h__19171__auto__ = self__.__hash;
  if (!(h__19171__auto__ == null)) {
    return h__19171__auto__;
  } else {
    var h__19171__auto____$1 = cljs.core.hash_imap.call(null, this__19353__auto____$1);
    self__.__hash = h__19171__auto____$1;
    return h__19171__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__19354__auto__, other__19355__auto__) {
  var self__ = this;
  var this__19354__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__18724__auto__ = other__19355__auto__;
    if (cljs.core.truth_(and__18724__auto__)) {
      var and__18724__auto____$1 = this__19354__auto____$1.constructor === other__19355__auto__.constructor;
      if (and__18724__auto____$1) {
        return cljs.core.equiv_map.call(null, this__19354__auto____$1, other__19355__auto__);
      } else {
        return and__18724__auto____$1;
      }
    } else {
      return and__18724__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__19367__auto__, k__19368__auto__) {
  var self__ = this;
  var this__19367__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__19368__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__19367__auto____$1), self__.__meta), k__19368__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__19368__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__19365__auto__, k__19366__auto__, G__26255) {
  var self__ = this;
  var this__19365__auto____$1 = this;
  var pred__26259 = cljs.core.keyword_identical_QMARK_;
  var expr__26260 = k__19366__auto__;
  if (cljs.core.truth_(pred__26259.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__26260))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__26255, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__26259.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__26260))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__26255, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__26259.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__26260))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__26255, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__26259.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__26260))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__26255, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__26259.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__26260))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__26255, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__19366__auto__, G__26255), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__19370__auto__) {
  var self__ = this;
  var this__19370__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__19357__auto__, G__26255) {
  var self__ = this;
  var this__19357__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__26255, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__19363__auto__, entry__19364__auto__) {
  var self__ = this;
  var this__19363__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__19364__auto__)) {
    return cljs.core._assoc.call(null, this__19363__auto____$1, cljs.core._nth.call(null, entry__19364__auto__, 0), cljs.core._nth.call(null, entry__19364__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__19363__auto____$1, entry__19364__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "catch-block", "catch-block", -1479223021, null), cljs.core.with_meta(new cljs.core.Symbol(null, "catch-exception", "catch-exception", -356775268, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "Class", "Class", 2064526977, null)], null)), new cljs.core.Symbol(null, "finally-block", "finally-block", 
  -1821453297, null), new cljs.core.Symbol(null, "continue-block", "continue-block", -211516323, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null)], null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__19392__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__19392__auto__, writer__19393__auto__) {
  return cljs.core._write.call(null, writer__19393__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$__GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function cljs$core$async$impl$ioc_helpers$map__GT_ExceptionFrame(G__26257) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__26257), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__26257), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__26257), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__26257), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__26257), null, cljs.core.dissoc.call(null, G__26257, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function cljs$core$async$impl$ioc_helpers$add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_26264 = state;
  statearr_26264[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_26264;
};
cljs.core.async.impl.ioc_helpers.process_exception = function cljs$core$async$impl$ioc_helpers$process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__18724__auto__ = exception;
      if (cljs.core.truth_(and__18724__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__18724__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__18724__auto__ = exception;
        if (cljs.core.truth_(and__18724__auto__)) {
          var and__18724__auto____$1 = catch_block;
          if (cljs.core.truth_(and__18724__auto____$1)) {
            return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "default", "default", -1987822328), catch_exception) || exception instanceof catch_exception;
          } else {
            return and__18724__auto____$1;
          }
        } else {
          return and__18724__auto__;
        }
      }())) {
        var statearr_26270 = state;
        statearr_26270[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_26270[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_26270[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_26270[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_26270;
      } else {
        if (cljs.core.truth_(function() {
          var and__18724__auto__ = exception;
          if (cljs.core.truth_(and__18724__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__18724__auto__;
          }
        }())) {
          var statearr_26271_26275 = state;
          statearr_26271_26275[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__26276 = state;
          state = G__26276;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__18724__auto__ = exception;
            if (cljs.core.truth_(and__18724__auto__)) {
              var and__18724__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__18724__auto____$1) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__18724__auto____$1;
              }
            } else {
              return and__18724__auto__;
            }
          }())) {
            var statearr_26272 = state;
            statearr_26272[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_26272[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_26272;
          } else {
            if (cljs.core.truth_(function() {
              var and__18724__auto__ = cljs.core.not.call(null, exception);
              if (and__18724__auto__) {
                return (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__18724__auto__;
              }
            }())) {
              var statearr_26273 = state;
              statearr_26273[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_26273[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_26273;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_26274 = state;
                statearr_26274[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_26274[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_26274;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function cljs$core$async$impl$timers$random_level(var_args) {
  var args26279 = [];
  var len__19806__auto___26282 = arguments.length;
  var i__19807__auto___26283 = 0;
  while (true) {
    if (i__19807__auto___26283 < len__19806__auto___26282) {
      args26279.push(arguments[i__19807__auto___26283]);
      var G__26284 = i__19807__auto___26283 + 1;
      i__19807__auto___26283 = G__26284;
      continue;
    } else {
    }
    break;
  }
  var G__26281 = args26279.length;
  switch(G__26281) {
    case 0:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26279.length)].join(""));;
  }
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.impl.timers.random_level.call(null, 0);
};
cljs.core.async.impl.timers.random_level.cljs$core$IFn$_invoke$arity$1 = function(level) {
  while (true) {
    if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
      var G__26286 = level + 1;
      level = G__26286;
      continue;
    } else {
      return level;
    }
    break;
  }
};
cljs.core.async.impl.timers.random_level.cljs$lang$maxFixedArity = 1;
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var x__19570__auto__ = self__.key;
  return cljs.core._conj.call(null, function() {
    var x__19570__auto____$1 = self__.val;
    return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
  }(), x__19570__auto__);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "forward", "forward", 1083186224, null)], null);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function cljs$core$async$impl$timers$__GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function cljs$core$async$impl$timers$skip_list_node(var_args) {
  var args26287 = [];
  var len__19806__auto___26290 = arguments.length;
  var i__19807__auto___26291 = 0;
  while (true) {
    if (i__19807__auto___26291 < len__19806__auto___26290) {
      args26287.push(arguments[i__19807__auto___26291]);
      var G__26292 = i__19807__auto___26291 + 1;
      i__19807__auto___26291 = G__26292;
      continue;
    } else {
    }
    break;
  }
  var G__26289 = args26287.length;
  switch(G__26289) {
    case 1:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26287.length)].join(""));;
  }
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$1 = function(level) {
  return cljs.core.async.impl.timers.skip_list_node.call(null, null, null, level);
};
cljs.core.async.impl.timers.skip_list_node.cljs$core$IFn$_invoke$arity$3 = function(k, v, level) {
  var arr = new Array(level + 1);
  var i_26294 = 0;
  while (true) {
    if (i_26294 < arr.length) {
      arr[i_26294] = null;
      var G__26295 = i_26294 + 1;
      i_26294 = G__26295;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
};
cljs.core.async.impl.timers.skip_list_node.cljs$lang$maxFixedArity = 3;
cljs.core.async.impl.timers.least_greater_node = function cljs$core$async$impl$timers$least_greater_node(var_args) {
  var args26296 = [];
  var len__19806__auto___26299 = arguments.length;
  var i__19807__auto___26300 = 0;
  while (true) {
    if (i__19807__auto___26300 < len__19806__auto___26299) {
      args26296.push(arguments[i__19807__auto___26300]);
      var G__26301 = i__19807__auto___26300 + 1;
      i__19807__auto___26300 = G__26301;
      continue;
    } else {
    }
    break;
  }
  var G__26298 = args26296.length;
  switch(G__26298) {
    case 3:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26296.length)].join(""));;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$3 = function(x, k, level) {
  return cljs.core.async.impl.timers.least_greater_node.call(null, x, k, level, null);
};
cljs.core.async.impl.timers.least_greater_node.cljs$core$IFn$_invoke$arity$4 = function(x, k, level, update) {
  while (true) {
    if (!(level < 0)) {
      var x__$1 = function() {
        var x__$1 = x;
        while (true) {
          var temp__4655__auto__ = x__$1.forward[level];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var x_SINGLEQUOTE_ = temp__4655__auto__;
            if (x_SINGLEQUOTE_.key < k) {
              var G__26303 = x_SINGLEQUOTE_;
              x__$1 = G__26303;
              continue;
            } else {
              return x__$1;
            }
          } else {
            return x__$1;
          }
          break;
        }
      }();
      if (update == null) {
      } else {
        update[level] = x__$1;
      }
      var G__26304 = x__$1;
      var G__26305 = k;
      var G__26306 = level - 1;
      var G__26307 = update;
      x = G__26304;
      k = G__26305;
      level = G__26306;
      update = G__26307;
      continue;
    } else {
      return x;
    }
    break;
  }
};
cljs.core.async.impl.timers.least_greater_node.cljs$lang$maxFixedArity = 4;
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_26308 = self__.level + 1;
      while (true) {
        if (i_26308 <= new_level + 1) {
          update[i_26308] = self__.header;
          var G__26309 = i_26308 + 1;
          i_26308 = G__26309;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_26310 = 0;
    while (true) {
      if (i_26310 <= self__.level) {
        var links_26311 = update[i_26310].forward;
        if (links_26311[i_26310] === x__$1) {
          links_26311[i_26310] = x__$1.forward[i_26310];
          var G__26312 = i_26310 + 1;
          i_26310 = G__26312;
          continue;
        } else {
          var G__26313 = i_26310 + 1;
          i_26310 = G__26313;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__26314 = x_SINGLEQUOTE_;
              x__$1 = G__26314;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__26315 = nx;
        var G__26316 = level__$1 - 1;
        x = G__26315;
        level__$1 = G__26316;
        continue;
      } else {
        var G__26317 = x;
        var G__26318 = level__$1 - 1;
        x = G__26317;
        level__$1 = G__26318;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__26319 = x_SINGLEQUOTE_;
              x__$1 = G__26319;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__26320 = nx;
        var G__26321 = level__$1 - 1;
        x = G__26320;
        level__$1 = G__26321;
        continue;
      } else {
        var G__26322 = x;
        var G__26323 = level__$1 - 1;
        x = G__26322;
        level__$1 = G__26323;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function cljs$core$async$impl$timers$iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), cljs$core$async$impl$timers$iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "header", "header", 1759972661, null), cljs.core.with_meta(new cljs.core.Symbol(null, "level", "level", -1363938217, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
  return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function cljs$core$async$impl$timers$__GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function cljs$core$async$impl$timers$skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function cljs$core$async$impl$timers$timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__18736__auto__ = cljs.core.truth_(function() {
    var and__18724__auto__ = me;
    if (cljs.core.truth_(and__18724__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__18724__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__18736__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__18736__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function cljs$core$async$fn_handler(var_args) {
  var args26379 = [];
  var len__19806__auto___26385 = arguments.length;
  var i__19807__auto___26386 = 0;
  while (true) {
    if (i__19807__auto___26386 < len__19806__auto___26385) {
      args26379.push(arguments[i__19807__auto___26386]);
      var G__26387 = i__19807__auto___26386 + 1;
      i__19807__auto___26386 = G__26387;
      continue;
    } else {
    }
    break;
  }
  var G__26381 = args26379.length;
  switch(G__26381) {
    case 1:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26379.length)].join(""));;
  }
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.async.fn_handler.call(null, f, true);
};
cljs.core.async.fn_handler.cljs$core$IFn$_invoke$arity$2 = function(f, blockable) {
  if (typeof cljs.core.async.t_cljs$core$async26382 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async26382 = function(f, blockable, meta26383) {
      this.f = f;
      this.blockable = blockable;
      this.meta26383 = meta26383;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async26382.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26384, meta26383__$1) {
      var self__ = this;
      var _26384__$1 = this;
      return new cljs.core.async.t_cljs$core$async26382(self__.f, self__.blockable, meta26383__$1);
    };
    cljs.core.async.t_cljs$core$async26382.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26384) {
      var self__ = this;
      var _26384__$1 = this;
      return self__.meta26383;
    };
    cljs.core.async.t_cljs$core$async26382.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async26382.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async26382.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.blockable;
    };
    cljs.core.async.t_cljs$core$async26382.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t_cljs$core$async26382.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "blockable", "blockable", -28395259, null), new cljs.core.Symbol(null, "meta26383", "meta26383", -98815617, null)], null);
    };
    cljs.core.async.t_cljs$core$async26382.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async26382.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async26382";
    cljs.core.async.t_cljs$core$async26382.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async26382");
    };
    cljs.core.async.__GT_t_cljs$core$async26382 = function cljs$core$async$__GT_t_cljs$core$async26382(f__$1, blockable__$1, meta26383) {
      return new cljs.core.async.t_cljs$core$async26382(f__$1, blockable__$1, meta26383);
    };
  }
  return new cljs.core.async.t_cljs$core$async26382(f, blockable, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.fn_handler.cljs$lang$maxFixedArity = 2;
cljs.core.async.buffer = function cljs$core$async$buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function cljs$core$async$dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function cljs$core$async$sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function cljs$core$async$unblocking_buffer_QMARK_(buff) {
  if (!(buff == null)) {
    if (false || buff.cljs$core$async$impl$protocols$UnblockingBuffer$) {
      return true;
    } else {
      if (!buff.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, buff);
  }
};
cljs.core.async.chan = function cljs$core$async$chan(var_args) {
  var args26391 = [];
  var len__19806__auto___26394 = arguments.length;
  var i__19807__auto___26395 = 0;
  while (true) {
    if (i__19807__auto___26395 < len__19806__auto___26394) {
      args26391.push(arguments[i__19807__auto___26395]);
      var G__26396 = i__19807__auto___26395 + 1;
      i__19807__auto___26395 = G__26396;
      continue;
    } else {
    }
    break;
  }
  var G__26393 = args26391.length;
  switch(G__26393) {
    case 0:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26391.length)].join(""));;
  }
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.chan.call(null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$1 = function(buf_or_n) {
  return cljs.core.async.chan.call(null, buf_or_n, null, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$2 = function(buf_or_n, xform) {
  return cljs.core.async.chan.call(null, buf_or_n, xform, null);
};
cljs.core.async.chan.cljs$core$IFn$_invoke$arity$3 = function(buf_or_n, xform, ex_handler) {
  var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
  if (cljs.core.truth_(xform)) {
    if (cljs.core.truth_(buf_or_n__$1)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str("buf-or-n")].join(""));
    }
  } else {
  }
  return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
};
cljs.core.async.chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.promise_chan = function cljs$core$async$promise_chan(var_args) {
  var args26398 = [];
  var len__19806__auto___26401 = arguments.length;
  var i__19807__auto___26402 = 0;
  while (true) {
    if (i__19807__auto___26402 < len__19806__auto___26401) {
      args26398.push(arguments[i__19807__auto___26402]);
      var G__26403 = i__19807__auto___26402 + 1;
      i__19807__auto___26402 = G__26403;
      continue;
    } else {
    }
    break;
  }
  var G__26400 = args26398.length;
  switch(G__26400) {
    case 0:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26398.length)].join(""));;
  }
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.async.promise_chan.call(null, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$1 = function(xform) {
  return cljs.core.async.promise_chan.call(null, xform, null);
};
cljs.core.async.promise_chan.cljs$core$IFn$_invoke$arity$2 = function(xform, ex_handler) {
  return cljs.core.async.chan.call(null, cljs.core.async.impl.buffers.promise_buffer.call(null), xform, ex_handler);
};
cljs.core.async.promise_chan.cljs$lang$maxFixedArity = 2;
cljs.core.async.timeout = function cljs$core$async$timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function cljs$core$async$_LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function cljs$core$async$take_BANG_(var_args) {
  var args26405 = [];
  var len__19806__auto___26408 = arguments.length;
  var i__19807__auto___26409 = 0;
  while (true) {
    if (i__19807__auto___26409 < len__19806__auto___26408) {
      args26405.push(arguments[i__19807__auto___26409]);
      var G__26410 = i__19807__auto___26409 + 1;
      i__19807__auto___26409 = G__26410;
      continue;
    } else {
    }
    break;
  }
  var G__26407 = args26405.length;
  switch(G__26407) {
    case 2:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26405.length)].join(""));;
  }
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, fn1) {
  return cljs.core.async.take_BANG_.call(null, port, fn1, true);
};
cljs.core.async.take_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, fn1, on_caller_QMARK_) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(ret)) {
    var val_26412 = cljs.core.deref.call(null, ret);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, val_26412);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(val_26412, ret) {
        return function() {
          return fn1.call(null, val_26412);
        };
      }(val_26412, ret));
    }
  } else {
  }
  return null;
};
cljs.core.async.take_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.nop = function cljs$core$async$nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function cljs$core$async$_GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function cljs$core$async$put_BANG_(var_args) {
  var args26413 = [];
  var len__19806__auto___26416 = arguments.length;
  var i__19807__auto___26417 = 0;
  while (true) {
    if (i__19807__auto___26417 < len__19806__auto___26416) {
      args26413.push(arguments[i__19807__auto___26417]);
      var G__26418 = i__19807__auto___26417 + 1;
      i__19807__auto___26417 = G__26418;
      continue;
    } else {
    }
    break;
  }
  var G__26415 = args26413.length;
  switch(G__26415) {
    case 2:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26413.length)].join(""));;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$2 = function(port, val) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var ret = temp__4655__auto__;
    return cljs.core.deref.call(null, ret);
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$3 = function(port, val, fn1) {
  return cljs.core.async.put_BANG_.call(null, port, val, fn1, true);
};
cljs.core.async.put_BANG_.cljs$core$IFn$_invoke$arity$4 = function(port, val, fn1, on_caller_QMARK_) {
  var temp__4655__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
  if (cljs.core.truth_(temp__4655__auto__)) {
    var retb = temp__4655__auto__;
    var ret = cljs.core.deref.call(null, retb);
    if (cljs.core.truth_(on_caller_QMARK_)) {
      fn1.call(null, ret);
    } else {
      cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4655__auto__) {
        return function() {
          return fn1.call(null, ret);
        };
      }(ret, retb, temp__4655__auto__));
    }
    return ret;
  } else {
    return true;
  }
};
cljs.core.async.put_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.async.close_BANG_ = function cljs$core$async$close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function cljs$core$async$random_array(n) {
  var a = new Array(n);
  var n__19651__auto___26420 = n;
  var x_26421 = 0;
  while (true) {
    if (x_26421 < n__19651__auto___26420) {
      a[x_26421] = 0;
      var G__26422 = x_26421 + 1;
      x_26421 = G__26422;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__26423 = i + 1;
      i = G__26423;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function cljs$core$async$alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t_cljs$core$async26427 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async26427 = function(alt_flag, flag, meta26428) {
      this.alt_flag = alt_flag;
      this.flag = flag;
      this.meta26428 = meta26428;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async26427.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_26429, meta26428__$1) {
        var self__ = this;
        var _26429__$1 = this;
        return new cljs.core.async.t_cljs$core$async26427(self__.alt_flag, self__.flag, meta26428__$1);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26427.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_26429) {
        var self__ = this;
        var _26429__$1 = this;
        return self__.meta26428;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26427.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async26427.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26427.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26427.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26427.getBasis = function(flag) {
      return function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-flag", "alt-flag", -1794972754, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), 
        new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "meta26428", "meta26428", 2117547880, null)], null);
      };
    }(flag);
    cljs.core.async.t_cljs$core$async26427.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async26427.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async26427";
    cljs.core.async.t_cljs$core$async26427.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
        return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async26427");
      };
    }(flag);
    cljs.core.async.__GT_t_cljs$core$async26427 = function(flag) {
      return function cljs$core$async$alt_flag_$___GT_t_cljs$core$async26427(alt_flag__$1, flag__$1, meta26428) {
        return new cljs.core.async.t_cljs$core$async26427(alt_flag__$1, flag__$1, meta26428);
      };
    }(flag);
  }
  return new cljs.core.async.t_cljs$core$async26427(cljs$core$async$alt_flag, flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function cljs$core$async$alt_handler(flag, cb) {
  if (typeof cljs.core.async.t_cljs$core$async26433 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async26433 = function(alt_handler, flag, cb, meta26434) {
      this.alt_handler = alt_handler;
      this.flag = flag;
      this.cb = cb;
      this.meta26434 = meta26434;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async26433.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_26435, meta26434__$1) {
      var self__ = this;
      var _26435__$1 = this;
      return new cljs.core.async.t_cljs$core$async26433(self__.alt_handler, self__.flag, self__.cb, meta26434__$1);
    };
    cljs.core.async.t_cljs$core$async26433.prototype.cljs$core$IMeta$_meta$arity$1 = function(_26435) {
      var self__ = this;
      var _26435__$1 = this;
      return self__.meta26434;
    };
    cljs.core.async.t_cljs$core$async26433.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t_cljs$core$async26433.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t_cljs$core$async26433.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t_cljs$core$async26433.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t_cljs$core$async26433.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "alt-handler", "alt-handler", 963786170, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 
      5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null)], null)))], null)), new cljs.core.Symbol(null, "flag", "flag", -1565787888, null), new cljs.core.Symbol(null, "cb", "cb", -2064487928, null), new cljs.core.Symbol(null, "meta26434", "meta26434", -680855766, null)], null);
    };
    cljs.core.async.t_cljs$core$async26433.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async26433.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async26433";
    cljs.core.async.t_cljs$core$async26433.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async26433");
    };
    cljs.core.async.__GT_t_cljs$core$async26433 = function cljs$core$async$alt_handler_$___GT_t_cljs$core$async26433(alt_handler__$1, flag__$1, cb__$1, meta26434) {
      return new cljs.core.async.t_cljs$core$async26433(alt_handler__$1, flag__$1, cb__$1, meta26434);
    };
  }
  return new cljs.core.async.t_cljs$core$async26433(cljs$core$async$alt_handler, flag, cb, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function cljs$core$async$do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__26436_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__26436_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__26437_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__26437_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__18736__auto__ = wport;
            if (cljs.core.truth_(or__18736__auto__)) {
              return or__18736__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__26438 = i + 1;
          i = G__26438;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__18736__auto__ = ret;
  if (cljs.core.truth_(or__18736__auto__)) {
    return or__18736__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4657__auto__ = function() {
        var and__18724__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__18724__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__18724__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4657__auto__)) {
        var got = temp__4657__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function cljs$core$async$alts_BANG_(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___26444 = arguments.length;
  var i__19807__auto___26445 = 0;
  while (true) {
    if (i__19807__auto___26445 < len__19806__auto___26444) {
      args__19813__auto__.push(arguments[i__19807__auto___26445]);
      var G__26446 = i__19807__auto___26445 + 1;
      i__19807__auto___26445 = G__26446;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 1 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(1), 0, null) : null;
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__19814__auto__);
};
cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ports, p__26441) {
  var map__26442 = p__26441;
  var map__26442__$1 = (!(map__26442 == null) ? map__26442.cljs$lang$protocol_mask$partition0$ & 64 || map__26442.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__26442) : map__26442;
  var opts = map__26442__$1;
  throw new Error("alts! used not in (go ...) block");
};
cljs.core.async.alts_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.async.alts_BANG_.cljs$lang$applyTo = function(seq26439) {
  var G__26440 = cljs.core.first.call(null, seq26439);
  var seq26439__$1 = cljs.core.next.call(null, seq26439);
  return cljs.core.async.alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__26440, seq26439__$1);
};
cljs.core.async.offer_BANG_ = function cljs$core$async$offer_BANG_(port, val) {
  var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.poll_BANG_ = function cljs$core$async$poll_BANG_(port) {
  var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, cljs.core.async.nop, false));
  if (cljs.core.truth_(ret)) {
    return cljs.core.deref.call(null, ret);
  } else {
    return null;
  }
};
cljs.core.async.pipe = function cljs$core$async$pipe(var_args) {
  var args26447 = [];
  var len__19806__auto___26497 = arguments.length;
  var i__19807__auto___26498 = 0;
  while (true) {
    if (i__19807__auto___26498 < len__19806__auto___26497) {
      args26447.push(arguments[i__19807__auto___26498]);
      var G__26499 = i__19807__auto___26498 + 1;
      i__19807__auto___26498 = G__26499;
      continue;
    } else {
    }
    break;
  }
  var G__26449 = args26447.length;
  switch(G__26449) {
    case 2:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26447.length)].join(""));;
  }
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$2 = function(from, to) {
  return cljs.core.async.pipe.call(null, from, to, true);
};
cljs.core.async.pipe.cljs$core$IFn$_invoke$arity$3 = function(from, to, close_QMARK_) {
  var c__26334__auto___26501 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___26501) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___26501) {
          return function(state_26473) {
            var state_val_26474 = state_26473[1];
            if (state_val_26474 === 7) {
              var inst_26469 = state_26473[2];
              var state_26473__$1 = state_26473;
              var statearr_26475_26502 = state_26473__$1;
              statearr_26475_26502[2] = inst_26469;
              statearr_26475_26502[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26474 === 1) {
                var state_26473__$1 = state_26473;
                var statearr_26476_26503 = state_26473__$1;
                statearr_26476_26503[2] = null;
                statearr_26476_26503[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26474 === 4) {
                  var inst_26452 = state_26473[7];
                  var inst_26452__$1 = state_26473[2];
                  var inst_26453 = inst_26452__$1 == null;
                  var state_26473__$1 = function() {
                    var statearr_26477 = state_26473;
                    statearr_26477[7] = inst_26452__$1;
                    return statearr_26477;
                  }();
                  if (cljs.core.truth_(inst_26453)) {
                    var statearr_26478_26504 = state_26473__$1;
                    statearr_26478_26504[1] = 5;
                  } else {
                    var statearr_26479_26505 = state_26473__$1;
                    statearr_26479_26505[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26474 === 13) {
                    var state_26473__$1 = state_26473;
                    var statearr_26480_26506 = state_26473__$1;
                    statearr_26480_26506[2] = null;
                    statearr_26480_26506[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26474 === 6) {
                      var inst_26452 = state_26473[7];
                      var state_26473__$1 = state_26473;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26473__$1, 11, to, inst_26452);
                    } else {
                      if (state_val_26474 === 3) {
                        var inst_26471 = state_26473[2];
                        var state_26473__$1 = state_26473;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26473__$1, inst_26471);
                      } else {
                        if (state_val_26474 === 12) {
                          var state_26473__$1 = state_26473;
                          var statearr_26481_26507 = state_26473__$1;
                          statearr_26481_26507[2] = null;
                          statearr_26481_26507[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26474 === 2) {
                            var state_26473__$1 = state_26473;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26473__$1, 4, from);
                          } else {
                            if (state_val_26474 === 11) {
                              var inst_26462 = state_26473[2];
                              var state_26473__$1 = state_26473;
                              if (cljs.core.truth_(inst_26462)) {
                                var statearr_26482_26508 = state_26473__$1;
                                statearr_26482_26508[1] = 12;
                              } else {
                                var statearr_26483_26509 = state_26473__$1;
                                statearr_26483_26509[1] = 13;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26474 === 9) {
                                var state_26473__$1 = state_26473;
                                var statearr_26484_26510 = state_26473__$1;
                                statearr_26484_26510[2] = null;
                                statearr_26484_26510[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26474 === 5) {
                                  var state_26473__$1 = state_26473;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_26485_26511 = state_26473__$1;
                                    statearr_26485_26511[1] = 8;
                                  } else {
                                    var statearr_26486_26512 = state_26473__$1;
                                    statearr_26486_26512[1] = 9;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26474 === 14) {
                                    var inst_26467 = state_26473[2];
                                    var state_26473__$1 = state_26473;
                                    var statearr_26487_26513 = state_26473__$1;
                                    statearr_26487_26513[2] = inst_26467;
                                    statearr_26487_26513[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26474 === 10) {
                                      var inst_26459 = state_26473[2];
                                      var state_26473__$1 = state_26473;
                                      var statearr_26488_26514 = state_26473__$1;
                                      statearr_26488_26514[2] = inst_26459;
                                      statearr_26488_26514[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26474 === 8) {
                                        var inst_26456 = cljs.core.async.close_BANG_.call(null, to);
                                        var state_26473__$1 = state_26473;
                                        var statearr_26489_26515 = state_26473__$1;
                                        statearr_26489_26515[2] = inst_26456;
                                        statearr_26489_26515[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___26501);
        return function(switch__26222__auto__, c__26334__auto___26501) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_26493 = [null, null, null, null, null, null, null, null];
              statearr_26493[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_26493[1] = 1;
              return statearr_26493;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_26473) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_26473);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e26494) {
                    if (e26494 instanceof Object) {
                      var ex__26226__auto__ = e26494;
                      var statearr_26495_26516 = state_26473;
                      statearr_26495_26516[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26473);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26494;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26517 = state_26473;
                  state_26473 = G__26517;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_26473) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_26473);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___26501);
      }();
      var state__26336__auto__ = function() {
        var statearr_26496 = f__26335__auto__.call(null);
        statearr_26496[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___26501;
        return statearr_26496;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___26501));
  return to;
};
cljs.core.async.pipe.cljs$lang$maxFixedArity = 3;
cljs.core.async.pipeline_STAR_ = function cljs$core$async$pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error("Assert failed: (pos? n)");
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__26701) {
      var vec__26702 = p__26701;
      var v = cljs.core.nth.call(null, vec__26702, 0, null);
      var p = cljs.core.nth.call(null, vec__26702, 1, null);
      var job = vec__26702;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__26334__auto___26884 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___26884, res, vec__26702, v, p, job, jobs, results) {
          return function() {
            var f__26335__auto__ = function() {
              var switch__26222__auto__ = function(c__26334__auto___26884, res, vec__26702, v, p, job, jobs, results) {
                return function(state_26707) {
                  var state_val_26708 = state_26707[1];
                  if (state_val_26708 === 1) {
                    var state_26707__$1 = state_26707;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26707__$1, 2, res, v);
                  } else {
                    if (state_val_26708 === 2) {
                      var inst_26704 = state_26707[2];
                      var inst_26705 = cljs.core.async.close_BANG_.call(null, res);
                      var state_26707__$1 = function() {
                        var statearr_26709 = state_26707;
                        statearr_26709[7] = inst_26704;
                        return statearr_26709;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26707__$1, inst_26705);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__26334__auto___26884, res, vec__26702, v, p, job, jobs, results);
              return function(switch__26222__auto__, c__26334__auto___26884, res, vec__26702, v, p, job, jobs, results) {
                return function() {
                  var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = null;
                  var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0 = function() {
                    var statearr_26713 = [null, null, null, null, null, null, null, null];
                    statearr_26713[0] = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
                    statearr_26713[1] = 1;
                    return statearr_26713;
                  };
                  var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1 = function(state_26707) {
                    while (true) {
                      var ret_value__26224__auto__ = function() {
                        try {
                          while (true) {
                            var result__26225__auto__ = switch__26222__auto__.call(null, state_26707);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__26225__auto__;
                            }
                            break;
                          }
                        } catch (e26714) {
                          if (e26714 instanceof Object) {
                            var ex__26226__auto__ = e26714;
                            var statearr_26715_26885 = state_26707;
                            statearr_26715_26885[5] = ex__26226__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26707);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e26714;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__26886 = state_26707;
                        state_26707 = G__26886;
                        continue;
                      } else {
                        return ret_value__26224__auto__;
                      }
                      break;
                    }
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = function(state_26707) {
                    switch(arguments.length) {
                      case 0:
                        return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0.call(this);
                      case 1:
                        return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1.call(this, state_26707);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0;
                  cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1;
                  return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
                }();
              }(switch__26222__auto__, c__26334__auto___26884, res, vec__26702, v, p, job, jobs, results);
            }();
            var state__26336__auto__ = function() {
              var statearr_26716 = f__26335__auto__.call(null);
              statearr_26716[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___26884;
              return statearr_26716;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
          };
        }(c__26334__auto___26884, res, vec__26702, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__26717) {
      var vec__26718 = p__26717;
      var v = cljs.core.nth.call(null, vec__26718, 0, null);
      var p = cljs.core.nth.call(null, vec__26718, 1, null);
      var job = vec__26718;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__19651__auto___26887 = n;
  var __26888 = 0;
  while (true) {
    if (__26888 < n__19651__auto___26887) {
      var G__26719_26889 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__26719_26889) {
        case "compute":
          var c__26334__auto___26891 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__26888, c__26334__auto___26891, G__26719_26889, n__19651__auto___26887, jobs, results, process, async) {
            return function() {
              var f__26335__auto__ = function() {
                var switch__26222__auto__ = function(__26888, c__26334__auto___26891, G__26719_26889, n__19651__auto___26887, jobs, results, process, async) {
                  return function(state_26732) {
                    var state_val_26733 = state_26732[1];
                    if (state_val_26733 === 1) {
                      var state_26732__$1 = state_26732;
                      var statearr_26734_26892 = state_26732__$1;
                      statearr_26734_26892[2] = null;
                      statearr_26734_26892[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26733 === 2) {
                        var state_26732__$1 = state_26732;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26732__$1, 4, jobs);
                      } else {
                        if (state_val_26733 === 3) {
                          var inst_26730 = state_26732[2];
                          var state_26732__$1 = state_26732;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26732__$1, inst_26730);
                        } else {
                          if (state_val_26733 === 4) {
                            var inst_26722 = state_26732[2];
                            var inst_26723 = process.call(null, inst_26722);
                            var state_26732__$1 = state_26732;
                            if (cljs.core.truth_(inst_26723)) {
                              var statearr_26735_26893 = state_26732__$1;
                              statearr_26735_26893[1] = 5;
                            } else {
                              var statearr_26736_26894 = state_26732__$1;
                              statearr_26736_26894[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26733 === 5) {
                              var state_26732__$1 = state_26732;
                              var statearr_26737_26895 = state_26732__$1;
                              statearr_26737_26895[2] = null;
                              statearr_26737_26895[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26733 === 6) {
                                var state_26732__$1 = state_26732;
                                var statearr_26738_26896 = state_26732__$1;
                                statearr_26738_26896[2] = null;
                                statearr_26738_26896[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26733 === 7) {
                                  var inst_26728 = state_26732[2];
                                  var state_26732__$1 = state_26732;
                                  var statearr_26739_26897 = state_26732__$1;
                                  statearr_26739_26897[2] = inst_26728;
                                  statearr_26739_26897[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__26888, c__26334__auto___26891, G__26719_26889, n__19651__auto___26887, jobs, results, process, async);
                return function(__26888, switch__26222__auto__, c__26334__auto___26891, G__26719_26889, n__19651__auto___26887, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0 = function() {
                      var statearr_26743 = [null, null, null, null, null, null, null];
                      statearr_26743[0] = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
                      statearr_26743[1] = 1;
                      return statearr_26743;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1 = function(state_26732) {
                      while (true) {
                        var ret_value__26224__auto__ = function() {
                          try {
                            while (true) {
                              var result__26225__auto__ = switch__26222__auto__.call(null, state_26732);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__26225__auto__;
                              }
                              break;
                            }
                          } catch (e26744) {
                            if (e26744 instanceof Object) {
                              var ex__26226__auto__ = e26744;
                              var statearr_26745_26898 = state_26732;
                              statearr_26745_26898[5] = ex__26226__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26732);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e26744;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__26899 = state_26732;
                          state_26732 = G__26899;
                          continue;
                        } else {
                          return ret_value__26224__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = function(state_26732) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1.call(this, state_26732);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
                  }();
                }(__26888, switch__26222__auto__, c__26334__auto___26891, G__26719_26889, n__19651__auto___26887, jobs, results, process, async);
              }();
              var state__26336__auto__ = function() {
                var statearr_26746 = f__26335__auto__.call(null);
                statearr_26746[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___26891;
                return statearr_26746;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
            };
          }(__26888, c__26334__auto___26891, G__26719_26889, n__19651__auto___26887, jobs, results, process, async));
          break;
        case "async":
          var c__26334__auto___26900 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__26888, c__26334__auto___26900, G__26719_26889, n__19651__auto___26887, jobs, results, process, async) {
            return function() {
              var f__26335__auto__ = function() {
                var switch__26222__auto__ = function(__26888, c__26334__auto___26900, G__26719_26889, n__19651__auto___26887, jobs, results, process, async) {
                  return function(state_26759) {
                    var state_val_26760 = state_26759[1];
                    if (state_val_26760 === 1) {
                      var state_26759__$1 = state_26759;
                      var statearr_26761_26901 = state_26759__$1;
                      statearr_26761_26901[2] = null;
                      statearr_26761_26901[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26760 === 2) {
                        var state_26759__$1 = state_26759;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26759__$1, 4, jobs);
                      } else {
                        if (state_val_26760 === 3) {
                          var inst_26757 = state_26759[2];
                          var state_26759__$1 = state_26759;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26759__$1, inst_26757);
                        } else {
                          if (state_val_26760 === 4) {
                            var inst_26749 = state_26759[2];
                            var inst_26750 = async.call(null, inst_26749);
                            var state_26759__$1 = state_26759;
                            if (cljs.core.truth_(inst_26750)) {
                              var statearr_26762_26902 = state_26759__$1;
                              statearr_26762_26902[1] = 5;
                            } else {
                              var statearr_26763_26903 = state_26759__$1;
                              statearr_26763_26903[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_26760 === 5) {
                              var state_26759__$1 = state_26759;
                              var statearr_26764_26904 = state_26759__$1;
                              statearr_26764_26904[2] = null;
                              statearr_26764_26904[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26760 === 6) {
                                var state_26759__$1 = state_26759;
                                var statearr_26765_26905 = state_26759__$1;
                                statearr_26765_26905[2] = null;
                                statearr_26765_26905[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26760 === 7) {
                                  var inst_26755 = state_26759[2];
                                  var state_26759__$1 = state_26759;
                                  var statearr_26766_26906 = state_26759__$1;
                                  statearr_26766_26906[2] = inst_26755;
                                  statearr_26766_26906[1] = 3;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__26888, c__26334__auto___26900, G__26719_26889, n__19651__auto___26887, jobs, results, process, async);
                return function(__26888, switch__26222__auto__, c__26334__auto___26900, G__26719_26889, n__19651__auto___26887, jobs, results, process, async) {
                  return function() {
                    var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = null;
                    var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0 = function() {
                      var statearr_26770 = [null, null, null, null, null, null, null];
                      statearr_26770[0] = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
                      statearr_26770[1] = 1;
                      return statearr_26770;
                    };
                    var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1 = function(state_26759) {
                      while (true) {
                        var ret_value__26224__auto__ = function() {
                          try {
                            while (true) {
                              var result__26225__auto__ = switch__26222__auto__.call(null, state_26759);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__26225__auto__;
                              }
                              break;
                            }
                          } catch (e26771) {
                            if (e26771 instanceof Object) {
                              var ex__26226__auto__ = e26771;
                              var statearr_26772_26907 = state_26759;
                              statearr_26772_26907[5] = ex__26226__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26759);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e26771;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__26908 = state_26759;
                          state_26759 = G__26908;
                          continue;
                        } else {
                          return ret_value__26224__auto__;
                        }
                        break;
                      }
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = function(state_26759) {
                      switch(arguments.length) {
                        case 0:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0.call(this);
                        case 1:
                          return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1.call(this, state_26759);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0;
                    cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1;
                    return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
                  }();
                }(__26888, switch__26222__auto__, c__26334__auto___26900, G__26719_26889, n__19651__auto___26887, jobs, results, process, async);
              }();
              var state__26336__auto__ = function() {
                var statearr_26773 = f__26335__auto__.call(null);
                statearr_26773[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___26900;
                return statearr_26773;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
            };
          }(__26888, c__26334__auto___26900, G__26719_26889, n__19651__auto___26887, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__26909 = __26888 + 1;
      __26888 = G__26909;
      continue;
    } else {
    }
    break;
  }
  var c__26334__auto___26910 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___26910, jobs, results, process, async) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___26910, jobs, results, process, async) {
          return function(state_26795) {
            var state_val_26796 = state_26795[1];
            if (state_val_26796 === 1) {
              var state_26795__$1 = state_26795;
              var statearr_26797_26911 = state_26795__$1;
              statearr_26797_26911[2] = null;
              statearr_26797_26911[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26796 === 2) {
                var state_26795__$1 = state_26795;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26795__$1, 4, from);
              } else {
                if (state_val_26796 === 3) {
                  var inst_26793 = state_26795[2];
                  var state_26795__$1 = state_26795;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26795__$1, inst_26793);
                } else {
                  if (state_val_26796 === 4) {
                    var inst_26776 = state_26795[7];
                    var inst_26776__$1 = state_26795[2];
                    var inst_26777 = inst_26776__$1 == null;
                    var state_26795__$1 = function() {
                      var statearr_26798 = state_26795;
                      statearr_26798[7] = inst_26776__$1;
                      return statearr_26798;
                    }();
                    if (cljs.core.truth_(inst_26777)) {
                      var statearr_26799_26912 = state_26795__$1;
                      statearr_26799_26912[1] = 5;
                    } else {
                      var statearr_26800_26913 = state_26795__$1;
                      statearr_26800_26913[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26796 === 5) {
                      var inst_26779 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_26795__$1 = state_26795;
                      var statearr_26801_26914 = state_26795__$1;
                      statearr_26801_26914[2] = inst_26779;
                      statearr_26801_26914[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26796 === 6) {
                        var inst_26776 = state_26795[7];
                        var inst_26781 = state_26795[8];
                        var inst_26781__$1 = cljs.core.async.chan.call(null, 1);
                        var inst_26782 = cljs.core.PersistentVector.EMPTY_NODE;
                        var inst_26783 = [inst_26776, inst_26781__$1];
                        var inst_26784 = new cljs.core.PersistentVector(null, 2, 5, inst_26782, inst_26783, null);
                        var state_26795__$1 = function() {
                          var statearr_26802 = state_26795;
                          statearr_26802[8] = inst_26781__$1;
                          return statearr_26802;
                        }();
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26795__$1, 8, jobs, inst_26784);
                      } else {
                        if (state_val_26796 === 7) {
                          var inst_26791 = state_26795[2];
                          var state_26795__$1 = state_26795;
                          var statearr_26803_26915 = state_26795__$1;
                          statearr_26803_26915[2] = inst_26791;
                          statearr_26803_26915[1] = 3;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26796 === 8) {
                            var inst_26781 = state_26795[8];
                            var inst_26786 = state_26795[2];
                            var state_26795__$1 = function() {
                              var statearr_26804 = state_26795;
                              statearr_26804[9] = inst_26786;
                              return statearr_26804;
                            }();
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26795__$1, 9, results, inst_26781);
                          } else {
                            if (state_val_26796 === 9) {
                              var inst_26788 = state_26795[2];
                              var state_26795__$1 = function() {
                                var statearr_26805 = state_26795;
                                statearr_26805[10] = inst_26788;
                                return statearr_26805;
                              }();
                              var statearr_26806_26916 = state_26795__$1;
                              statearr_26806_26916[2] = null;
                              statearr_26806_26916[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___26910, jobs, results, process, async);
        return function(switch__26222__auto__, c__26334__auto___26910, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0 = function() {
              var statearr_26810 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_26810[0] = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
              statearr_26810[1] = 1;
              return statearr_26810;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1 = function(state_26795) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_26795);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e26811) {
                    if (e26811 instanceof Object) {
                      var ex__26226__auto__ = e26811;
                      var statearr_26812_26917 = state_26795;
                      statearr_26812_26917[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26795);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26811;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26918 = state_26795;
                  state_26795 = G__26918;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = function(state_26795) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1.call(this, state_26795);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___26910, jobs, results, process, async);
      }();
      var state__26336__auto__ = function() {
        var statearr_26813 = f__26335__auto__.call(null);
        statearr_26813[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___26910;
        return statearr_26813;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___26910, jobs, results, process, async));
  var c__26334__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto__, jobs, results, process, async) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto__, jobs, results, process, async) {
          return function(state_26851) {
            var state_val_26852 = state_26851[1];
            if (state_val_26852 === 7) {
              var inst_26847 = state_26851[2];
              var state_26851__$1 = state_26851;
              var statearr_26853_26919 = state_26851__$1;
              statearr_26853_26919[2] = inst_26847;
              statearr_26853_26919[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26852 === 20) {
                var state_26851__$1 = state_26851;
                var statearr_26854_26920 = state_26851__$1;
                statearr_26854_26920[2] = null;
                statearr_26854_26920[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26852 === 1) {
                  var state_26851__$1 = state_26851;
                  var statearr_26855_26921 = state_26851__$1;
                  statearr_26855_26921[2] = null;
                  statearr_26855_26921[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26852 === 4) {
                    var inst_26816 = state_26851[7];
                    var inst_26816__$1 = state_26851[2];
                    var inst_26817 = inst_26816__$1 == null;
                    var state_26851__$1 = function() {
                      var statearr_26856 = state_26851;
                      statearr_26856[7] = inst_26816__$1;
                      return statearr_26856;
                    }();
                    if (cljs.core.truth_(inst_26817)) {
                      var statearr_26857_26922 = state_26851__$1;
                      statearr_26857_26922[1] = 5;
                    } else {
                      var statearr_26858_26923 = state_26851__$1;
                      statearr_26858_26923[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26852 === 15) {
                      var inst_26829 = state_26851[8];
                      var state_26851__$1 = state_26851;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26851__$1, 18, to, inst_26829);
                    } else {
                      if (state_val_26852 === 21) {
                        var inst_26842 = state_26851[2];
                        var state_26851__$1 = state_26851;
                        var statearr_26859_26924 = state_26851__$1;
                        statearr_26859_26924[2] = inst_26842;
                        statearr_26859_26924[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_26852 === 13) {
                          var inst_26844 = state_26851[2];
                          var state_26851__$1 = function() {
                            var statearr_26860 = state_26851;
                            statearr_26860[9] = inst_26844;
                            return statearr_26860;
                          }();
                          var statearr_26861_26925 = state_26851__$1;
                          statearr_26861_26925[2] = null;
                          statearr_26861_26925[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26852 === 6) {
                            var inst_26816 = state_26851[7];
                            var state_26851__$1 = state_26851;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26851__$1, 11, inst_26816);
                          } else {
                            if (state_val_26852 === 17) {
                              var inst_26837 = state_26851[2];
                              var state_26851__$1 = state_26851;
                              if (cljs.core.truth_(inst_26837)) {
                                var statearr_26862_26926 = state_26851__$1;
                                statearr_26862_26926[1] = 19;
                              } else {
                                var statearr_26863_26927 = state_26851__$1;
                                statearr_26863_26927[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_26852 === 3) {
                                var inst_26849 = state_26851[2];
                                var state_26851__$1 = state_26851;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26851__$1, inst_26849);
                              } else {
                                if (state_val_26852 === 12) {
                                  var inst_26826 = state_26851[10];
                                  var state_26851__$1 = state_26851;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26851__$1, 14, inst_26826);
                                } else {
                                  if (state_val_26852 === 2) {
                                    var state_26851__$1 = state_26851;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26851__$1, 4, results);
                                  } else {
                                    if (state_val_26852 === 19) {
                                      var state_26851__$1 = state_26851;
                                      var statearr_26864_26928 = state_26851__$1;
                                      statearr_26864_26928[2] = null;
                                      statearr_26864_26928[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26852 === 11) {
                                        var inst_26826 = state_26851[2];
                                        var state_26851__$1 = function() {
                                          var statearr_26865 = state_26851;
                                          statearr_26865[10] = inst_26826;
                                          return statearr_26865;
                                        }();
                                        var statearr_26866_26929 = state_26851__$1;
                                        statearr_26866_26929[2] = null;
                                        statearr_26866_26929[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_26852 === 9) {
                                          var state_26851__$1 = state_26851;
                                          var statearr_26867_26930 = state_26851__$1;
                                          statearr_26867_26930[2] = null;
                                          statearr_26867_26930[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_26852 === 5) {
                                            var state_26851__$1 = state_26851;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_26868_26931 = state_26851__$1;
                                              statearr_26868_26931[1] = 8;
                                            } else {
                                              var statearr_26869_26932 = state_26851__$1;
                                              statearr_26869_26932[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_26852 === 14) {
                                              var inst_26829 = state_26851[8];
                                              var inst_26831 = state_26851[11];
                                              var inst_26829__$1 = state_26851[2];
                                              var inst_26830 = inst_26829__$1 == null;
                                              var inst_26831__$1 = cljs.core.not.call(null, inst_26830);
                                              var state_26851__$1 = function() {
                                                var statearr_26870 = state_26851;
                                                statearr_26870[8] = inst_26829__$1;
                                                statearr_26870[11] = inst_26831__$1;
                                                return statearr_26870;
                                              }();
                                              if (inst_26831__$1) {
                                                var statearr_26871_26933 = state_26851__$1;
                                                statearr_26871_26933[1] = 15;
                                              } else {
                                                var statearr_26872_26934 = state_26851__$1;
                                                statearr_26872_26934[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_26852 === 16) {
                                                var inst_26831 = state_26851[11];
                                                var state_26851__$1 = state_26851;
                                                var statearr_26873_26935 = state_26851__$1;
                                                statearr_26873_26935[2] = inst_26831;
                                                statearr_26873_26935[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_26852 === 10) {
                                                  var inst_26823 = state_26851[2];
                                                  var state_26851__$1 = state_26851;
                                                  var statearr_26874_26936 = state_26851__$1;
                                                  statearr_26874_26936[2] = inst_26823;
                                                  statearr_26874_26936[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_26852 === 18) {
                                                    var inst_26834 = state_26851[2];
                                                    var state_26851__$1 = state_26851;
                                                    var statearr_26875_26937 = state_26851__$1;
                                                    statearr_26875_26937[2] = inst_26834;
                                                    statearr_26875_26937[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_26852 === 8) {
                                                      var inst_26820 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_26851__$1 = state_26851;
                                                      var statearr_26876_26938 = state_26851__$1;
                                                      statearr_26876_26938[2] = inst_26820;
                                                      statearr_26876_26938[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto__, jobs, results, process, async);
        return function(switch__26222__auto__, c__26334__auto__, jobs, results, process, async) {
          return function() {
            var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = null;
            var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0 = function() {
              var statearr_26880 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_26880[0] = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
              statearr_26880[1] = 1;
              return statearr_26880;
            };
            var cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1 = function(state_26851) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_26851);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e26881) {
                    if (e26881 instanceof Object) {
                      var ex__26226__auto__ = e26881;
                      var statearr_26882_26939 = state_26851;
                      statearr_26882_26939[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26851);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e26881;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__26940 = state_26851;
                  state_26851 = G__26940;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__ = function(state_26851) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1.call(this, state_26851);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____0;
            cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$pipeline_STAR__$_state_machine__26223__auto____1;
            return cljs$core$async$pipeline_STAR__$_state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto__, jobs, results, process, async);
      }();
      var state__26336__auto__ = function() {
        var statearr_26883 = f__26335__auto__.call(null);
        statearr_26883[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto__;
        return statearr_26883;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto__, jobs, results, process, async));
  return c__26334__auto__;
};
cljs.core.async.pipeline_async = function cljs$core$async$pipeline_async(var_args) {
  var args26941 = [];
  var len__19806__auto___26944 = arguments.length;
  var i__19807__auto___26945 = 0;
  while (true) {
    if (i__19807__auto___26945 < len__19806__auto___26944) {
      args26941.push(arguments[i__19807__auto___26945]);
      var G__26946 = i__19807__auto___26945 + 1;
      i__19807__auto___26945 = G__26946;
      continue;
    } else {
    }
    break;
  }
  var G__26943 = args26941.length;
  switch(G__26943) {
    case 4:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26941.length)].join(""));;
  }
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$4 = function(n, to, af, from) {
  return cljs.core.async.pipeline_async.call(null, n, to, af, from, true);
};
cljs.core.async.pipeline_async.cljs$core$IFn$_invoke$arity$5 = function(n, to, af, from, close_QMARK_) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.core.async.pipeline_async.cljs$lang$maxFixedArity = 5;
cljs.core.async.pipeline = function cljs$core$async$pipeline(var_args) {
  var args26948 = [];
  var len__19806__auto___26951 = arguments.length;
  var i__19807__auto___26952 = 0;
  while (true) {
    if (i__19807__auto___26952 < len__19806__auto___26951) {
      args26948.push(arguments[i__19807__auto___26952]);
      var G__26953 = i__19807__auto___26952 + 1;
      i__19807__auto___26952 = G__26953;
      continue;
    } else {
    }
    break;
  }
  var G__26950 = args26948.length;
  switch(G__26950) {
    case 4:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26948.length)].join(""));;
  }
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$4 = function(n, to, xf, from) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, true);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$5 = function(n, to, xf, from, close_QMARK_) {
  return cljs.core.async.pipeline.call(null, n, to, xf, from, close_QMARK_, null);
};
cljs.core.async.pipeline.cljs$core$IFn$_invoke$arity$6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
  return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
};
cljs.core.async.pipeline.cljs$lang$maxFixedArity = 6;
cljs.core.async.split = function cljs$core$async$split(var_args) {
  var args26955 = [];
  var len__19806__auto___27008 = arguments.length;
  var i__19807__auto___27009 = 0;
  while (true) {
    if (i__19807__auto___27009 < len__19806__auto___27008) {
      args26955.push(arguments[i__19807__auto___27009]);
      var G__27010 = i__19807__auto___27009 + 1;
      i__19807__auto___27009 = G__27010;
      continue;
    } else {
    }
    break;
  }
  var G__26957 = args26955.length;
  switch(G__26957) {
    case 2:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.async.split.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args26955.length)].join(""));;
  }
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.split.call(null, p, ch, null, null);
};
cljs.core.async.split.cljs$core$IFn$_invoke$arity$4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
  var tc = cljs.core.async.chan.call(null, t_buf_or_n);
  var fc = cljs.core.async.chan.call(null, f_buf_or_n);
  var c__26334__auto___27012 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___27012, tc, fc) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___27012, tc, fc) {
          return function(state_26983) {
            var state_val_26984 = state_26983[1];
            if (state_val_26984 === 7) {
              var inst_26979 = state_26983[2];
              var state_26983__$1 = state_26983;
              var statearr_26985_27013 = state_26983__$1;
              statearr_26985_27013[2] = inst_26979;
              statearr_26985_27013[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_26984 === 1) {
                var state_26983__$1 = state_26983;
                var statearr_26986_27014 = state_26983__$1;
                statearr_26986_27014[2] = null;
                statearr_26986_27014[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_26984 === 4) {
                  var inst_26960 = state_26983[7];
                  var inst_26960__$1 = state_26983[2];
                  var inst_26961 = inst_26960__$1 == null;
                  var state_26983__$1 = function() {
                    var statearr_26987 = state_26983;
                    statearr_26987[7] = inst_26960__$1;
                    return statearr_26987;
                  }();
                  if (cljs.core.truth_(inst_26961)) {
                    var statearr_26988_27015 = state_26983__$1;
                    statearr_26988_27015[1] = 5;
                  } else {
                    var statearr_26989_27016 = state_26983__$1;
                    statearr_26989_27016[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_26984 === 13) {
                    var state_26983__$1 = state_26983;
                    var statearr_26990_27017 = state_26983__$1;
                    statearr_26990_27017[2] = null;
                    statearr_26990_27017[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_26984 === 6) {
                      var inst_26960 = state_26983[7];
                      var inst_26966 = p.call(null, inst_26960);
                      var state_26983__$1 = state_26983;
                      if (cljs.core.truth_(inst_26966)) {
                        var statearr_26991_27018 = state_26983__$1;
                        statearr_26991_27018[1] = 9;
                      } else {
                        var statearr_26992_27019 = state_26983__$1;
                        statearr_26992_27019[1] = 10;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_26984 === 3) {
                        var inst_26981 = state_26983[2];
                        var state_26983__$1 = state_26983;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_26983__$1, inst_26981);
                      } else {
                        if (state_val_26984 === 12) {
                          var state_26983__$1 = state_26983;
                          var statearr_26993_27020 = state_26983__$1;
                          statearr_26993_27020[2] = null;
                          statearr_26993_27020[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_26984 === 2) {
                            var state_26983__$1 = state_26983;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_26983__$1, 4, ch);
                          } else {
                            if (state_val_26984 === 11) {
                              var inst_26960 = state_26983[7];
                              var inst_26970 = state_26983[2];
                              var state_26983__$1 = state_26983;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_26983__$1, 8, inst_26970, inst_26960);
                            } else {
                              if (state_val_26984 === 9) {
                                var state_26983__$1 = state_26983;
                                var statearr_26994_27021 = state_26983__$1;
                                statearr_26994_27021[2] = tc;
                                statearr_26994_27021[1] = 11;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_26984 === 5) {
                                  var inst_26963 = cljs.core.async.close_BANG_.call(null, tc);
                                  var inst_26964 = cljs.core.async.close_BANG_.call(null, fc);
                                  var state_26983__$1 = function() {
                                    var statearr_26995 = state_26983;
                                    statearr_26995[8] = inst_26963;
                                    return statearr_26995;
                                  }();
                                  var statearr_26996_27022 = state_26983__$1;
                                  statearr_26996_27022[2] = inst_26964;
                                  statearr_26996_27022[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_26984 === 14) {
                                    var inst_26977 = state_26983[2];
                                    var state_26983__$1 = state_26983;
                                    var statearr_26997_27023 = state_26983__$1;
                                    statearr_26997_27023[2] = inst_26977;
                                    statearr_26997_27023[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_26984 === 10) {
                                      var state_26983__$1 = state_26983;
                                      var statearr_26998_27024 = state_26983__$1;
                                      statearr_26998_27024[2] = fc;
                                      statearr_26998_27024[1] = 11;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_26984 === 8) {
                                        var inst_26972 = state_26983[2];
                                        var state_26983__$1 = state_26983;
                                        if (cljs.core.truth_(inst_26972)) {
                                          var statearr_26999_27025 = state_26983__$1;
                                          statearr_26999_27025[1] = 12;
                                        } else {
                                          var statearr_27000_27026 = state_26983__$1;
                                          statearr_27000_27026[1] = 13;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___27012, tc, fc);
        return function(switch__26222__auto__, c__26334__auto___27012, tc, fc) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_27004 = [null, null, null, null, null, null, null, null, null];
              statearr_27004[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_27004[1] = 1;
              return statearr_27004;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_26983) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_26983);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e27005) {
                    if (e27005 instanceof Object) {
                      var ex__26226__auto__ = e27005;
                      var statearr_27006_27027 = state_26983;
                      statearr_27006_27027[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_26983);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e27005;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27028 = state_26983;
                  state_26983 = G__27028;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_26983) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_26983);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___27012, tc, fc);
      }();
      var state__26336__auto__ = function() {
        var statearr_27007 = f__26335__auto__.call(null);
        statearr_27007[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___27012;
        return statearr_27007;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___27012, tc, fc));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
};
cljs.core.async.split.cljs$lang$maxFixedArity = 4;
cljs.core.async.reduce = function cljs$core$async$reduce(f, init, ch) {
  var c__26334__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto__) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto__) {
          return function(state_27092) {
            var state_val_27093 = state_27092[1];
            if (state_val_27093 === 7) {
              var inst_27088 = state_27092[2];
              var state_27092__$1 = state_27092;
              var statearr_27094_27115 = state_27092__$1;
              statearr_27094_27115[2] = inst_27088;
              statearr_27094_27115[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27093 === 1) {
                var inst_27072 = init;
                var state_27092__$1 = function() {
                  var statearr_27095 = state_27092;
                  statearr_27095[7] = inst_27072;
                  return statearr_27095;
                }();
                var statearr_27096_27116 = state_27092__$1;
                statearr_27096_27116[2] = null;
                statearr_27096_27116[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27093 === 4) {
                  var inst_27075 = state_27092[8];
                  var inst_27075__$1 = state_27092[2];
                  var inst_27076 = inst_27075__$1 == null;
                  var state_27092__$1 = function() {
                    var statearr_27097 = state_27092;
                    statearr_27097[8] = inst_27075__$1;
                    return statearr_27097;
                  }();
                  if (cljs.core.truth_(inst_27076)) {
                    var statearr_27098_27117 = state_27092__$1;
                    statearr_27098_27117[1] = 5;
                  } else {
                    var statearr_27099_27118 = state_27092__$1;
                    statearr_27099_27118[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27093 === 6) {
                    var inst_27075 = state_27092[8];
                    var inst_27079 = state_27092[9];
                    var inst_27072 = state_27092[7];
                    var inst_27079__$1 = f.call(null, inst_27072, inst_27075);
                    var inst_27080 = cljs.core.reduced_QMARK_.call(null, inst_27079__$1);
                    var state_27092__$1 = function() {
                      var statearr_27100 = state_27092;
                      statearr_27100[9] = inst_27079__$1;
                      return statearr_27100;
                    }();
                    if (inst_27080) {
                      var statearr_27101_27119 = state_27092__$1;
                      statearr_27101_27119[1] = 8;
                    } else {
                      var statearr_27102_27120 = state_27092__$1;
                      statearr_27102_27120[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27093 === 3) {
                      var inst_27090 = state_27092[2];
                      var state_27092__$1 = state_27092;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27092__$1, inst_27090);
                    } else {
                      if (state_val_27093 === 2) {
                        var state_27092__$1 = state_27092;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27092__$1, 4, ch);
                      } else {
                        if (state_val_27093 === 9) {
                          var inst_27079 = state_27092[9];
                          var inst_27072 = inst_27079;
                          var state_27092__$1 = function() {
                            var statearr_27103 = state_27092;
                            statearr_27103[7] = inst_27072;
                            return statearr_27103;
                          }();
                          var statearr_27104_27121 = state_27092__$1;
                          statearr_27104_27121[2] = null;
                          statearr_27104_27121[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27093 === 5) {
                            var inst_27072 = state_27092[7];
                            var state_27092__$1 = state_27092;
                            var statearr_27105_27122 = state_27092__$1;
                            statearr_27105_27122[2] = inst_27072;
                            statearr_27105_27122[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27093 === 10) {
                              var inst_27086 = state_27092[2];
                              var state_27092__$1 = state_27092;
                              var statearr_27106_27123 = state_27092__$1;
                              statearr_27106_27123[2] = inst_27086;
                              statearr_27106_27123[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27093 === 8) {
                                var inst_27079 = state_27092[9];
                                var inst_27082 = cljs.core.deref.call(null, inst_27079);
                                var state_27092__$1 = state_27092;
                                var statearr_27107_27124 = state_27092__$1;
                                statearr_27107_27124[2] = inst_27082;
                                statearr_27107_27124[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                return null;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto__);
        return function(switch__26222__auto__, c__26334__auto__) {
          return function() {
            var cljs$core$async$reduce_$_state_machine__26223__auto__ = null;
            var cljs$core$async$reduce_$_state_machine__26223__auto____0 = function() {
              var statearr_27111 = [null, null, null, null, null, null, null, null, null, null];
              statearr_27111[0] = cljs$core$async$reduce_$_state_machine__26223__auto__;
              statearr_27111[1] = 1;
              return statearr_27111;
            };
            var cljs$core$async$reduce_$_state_machine__26223__auto____1 = function(state_27092) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_27092);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e27112) {
                    if (e27112 instanceof Object) {
                      var ex__26226__auto__ = e27112;
                      var statearr_27113_27125 = state_27092;
                      statearr_27113_27125[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27092);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e27112;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27126 = state_27092;
                  state_27092 = G__27126;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$reduce_$_state_machine__26223__auto__ = function(state_27092) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$reduce_$_state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$reduce_$_state_machine__26223__auto____1.call(this, state_27092);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$reduce_$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$reduce_$_state_machine__26223__auto____0;
            cljs$core$async$reduce_$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$reduce_$_state_machine__26223__auto____1;
            return cljs$core$async$reduce_$_state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto__);
      }();
      var state__26336__auto__ = function() {
        var statearr_27114 = f__26335__auto__.call(null);
        statearr_27114[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto__;
        return statearr_27114;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto__));
  return c__26334__auto__;
};
cljs.core.async.onto_chan = function cljs$core$async$onto_chan(var_args) {
  var args27127 = [];
  var len__19806__auto___27179 = arguments.length;
  var i__19807__auto___27180 = 0;
  while (true) {
    if (i__19807__auto___27180 < len__19806__auto___27179) {
      args27127.push(arguments[i__19807__auto___27180]);
      var G__27181 = i__19807__auto___27180 + 1;
      i__19807__auto___27180 = G__27181;
      continue;
    } else {
    }
    break;
  }
  var G__27129 = args27127.length;
  switch(G__27129) {
    case 2:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27127.length)].join(""));;
  }
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$2 = function(ch, coll) {
  return cljs.core.async.onto_chan.call(null, ch, coll, true);
};
cljs.core.async.onto_chan.cljs$core$IFn$_invoke$arity$3 = function(ch, coll, close_QMARK_) {
  var c__26334__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto__) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto__) {
          return function(state_27154) {
            var state_val_27155 = state_27154[1];
            if (state_val_27155 === 7) {
              var inst_27136 = state_27154[2];
              var state_27154__$1 = state_27154;
              var statearr_27156_27183 = state_27154__$1;
              statearr_27156_27183[2] = inst_27136;
              statearr_27156_27183[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27155 === 1) {
                var inst_27130 = cljs.core.seq.call(null, coll);
                var inst_27131 = inst_27130;
                var state_27154__$1 = function() {
                  var statearr_27157 = state_27154;
                  statearr_27157[7] = inst_27131;
                  return statearr_27157;
                }();
                var statearr_27158_27184 = state_27154__$1;
                statearr_27158_27184[2] = null;
                statearr_27158_27184[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27155 === 4) {
                  var inst_27131 = state_27154[7];
                  var inst_27134 = cljs.core.first.call(null, inst_27131);
                  var state_27154__$1 = state_27154;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27154__$1, 7, ch, inst_27134);
                } else {
                  if (state_val_27155 === 13) {
                    var inst_27148 = state_27154[2];
                    var state_27154__$1 = state_27154;
                    var statearr_27159_27185 = state_27154__$1;
                    statearr_27159_27185[2] = inst_27148;
                    statearr_27159_27185[1] = 10;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27155 === 6) {
                      var inst_27139 = state_27154[2];
                      var state_27154__$1 = state_27154;
                      if (cljs.core.truth_(inst_27139)) {
                        var statearr_27160_27186 = state_27154__$1;
                        statearr_27160_27186[1] = 8;
                      } else {
                        var statearr_27161_27187 = state_27154__$1;
                        statearr_27161_27187[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27155 === 3) {
                        var inst_27152 = state_27154[2];
                        var state_27154__$1 = state_27154;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27154__$1, inst_27152);
                      } else {
                        if (state_val_27155 === 12) {
                          var state_27154__$1 = state_27154;
                          var statearr_27162_27188 = state_27154__$1;
                          statearr_27162_27188[2] = null;
                          statearr_27162_27188[1] = 13;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27155 === 2) {
                            var inst_27131 = state_27154[7];
                            var state_27154__$1 = state_27154;
                            if (cljs.core.truth_(inst_27131)) {
                              var statearr_27163_27189 = state_27154__$1;
                              statearr_27163_27189[1] = 4;
                            } else {
                              var statearr_27164_27190 = state_27154__$1;
                              statearr_27164_27190[1] = 5;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27155 === 11) {
                              var inst_27145 = cljs.core.async.close_BANG_.call(null, ch);
                              var state_27154__$1 = state_27154;
                              var statearr_27165_27191 = state_27154__$1;
                              statearr_27165_27191[2] = inst_27145;
                              statearr_27165_27191[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27155 === 9) {
                                var state_27154__$1 = state_27154;
                                if (cljs.core.truth_(close_QMARK_)) {
                                  var statearr_27166_27192 = state_27154__$1;
                                  statearr_27166_27192[1] = 11;
                                } else {
                                  var statearr_27167_27193 = state_27154__$1;
                                  statearr_27167_27193[1] = 12;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_27155 === 5) {
                                  var inst_27131 = state_27154[7];
                                  var state_27154__$1 = state_27154;
                                  var statearr_27168_27194 = state_27154__$1;
                                  statearr_27168_27194[2] = inst_27131;
                                  statearr_27168_27194[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27155 === 10) {
                                    var inst_27150 = state_27154[2];
                                    var state_27154__$1 = state_27154;
                                    var statearr_27169_27195 = state_27154__$1;
                                    statearr_27169_27195[2] = inst_27150;
                                    statearr_27169_27195[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27155 === 8) {
                                      var inst_27131 = state_27154[7];
                                      var inst_27141 = cljs.core.next.call(null, inst_27131);
                                      var inst_27131__$1 = inst_27141;
                                      var state_27154__$1 = function() {
                                        var statearr_27170 = state_27154;
                                        statearr_27170[7] = inst_27131__$1;
                                        return statearr_27170;
                                      }();
                                      var statearr_27171_27196 = state_27154__$1;
                                      statearr_27171_27196[2] = null;
                                      statearr_27171_27196[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      return null;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto__);
        return function(switch__26222__auto__, c__26334__auto__) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_27175 = [null, null, null, null, null, null, null, null];
              statearr_27175[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_27175[1] = 1;
              return statearr_27175;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_27154) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_27154);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e27176) {
                    if (e27176 instanceof Object) {
                      var ex__26226__auto__ = e27176;
                      var statearr_27177_27197 = state_27154;
                      statearr_27177_27197[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27154);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e27176;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27198 = state_27154;
                  state_27154 = G__27198;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_27154) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_27154);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto__);
      }();
      var state__26336__auto__ = function() {
        var statearr_27178 = f__26335__auto__.call(null);
        statearr_27178[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto__;
        return statearr_27178;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto__));
  return c__26334__auto__;
};
cljs.core.async.onto_chan.cljs$lang$maxFixedArity = 3;
cljs.core.async.to_chan = function cljs$core$async$to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
};
cljs.core.async.muxch_STAR_ = function cljs$core$async$muxch_STAR_(_) {
  if (!(_ == null) && !(_.cljs$core$async$Mux$muxch_STAR_$arity$1 == null)) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _);
    } else {
      var m__19400__auto____$1 = cljs.core.async.muxch_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
      }
    }
  }
};
cljs.core.async.Mult = function() {
};
cljs.core.async.tap_STAR_ = function cljs$core$async$tap_STAR_(m, ch, close_QMARK_) {
  if (!(m == null) && !(m.cljs$core$async$Mult$tap_STAR_$arity$3 == null)) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m, ch, close_QMARK_);
    } else {
      var m__19400__auto____$1 = cljs.core.async.tap_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
      }
    }
  }
};
cljs.core.async.untap_STAR_ = function cljs$core$async$untap_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m, ch);
    } else {
      var m__19400__auto____$1 = cljs.core.async.untap_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
      }
    }
  }
};
cljs.core.async.untap_all_STAR_ = function cljs$core$async$untap_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mult$untap_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m);
    } else {
      var m__19400__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
      }
    }
  }
};
cljs.core.async.mult = function cljs$core$async$mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async27420 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async27420 = function(mult, ch, cs, meta27421) {
        this.mult = mult;
        this.ch = ch;
        this.cs = cs;
        this.meta27421 = meta27421;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_27422, meta27421__$1) {
          var self__ = this;
          var _27422__$1 = this;
          return new cljs.core.async.t_cljs$core$async27420(self__.mult, self__.ch, self__.cs, meta27421__$1);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_27422) {
          var self__ = this;
          var _27422__$1 = this;
          return self__.meta27421;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.getBasis = function(cs) {
        return function() {
          return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mult", "mult", -1187640995, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", 
          "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mult(iple) of the supplied channel. Channels\n  containing copies of the channel can be created with 'tap', and\n  detached with 'untap'.\n\n  Each item is distributed to all taps in parallel and synchronously,\n  i.e. each tap must accept before the next item is distributed. Use\n  buffering/windowing to prevent slow taps from holding up the mult.\n\n  Items received when there are no taps get dropped.\n\n  If a tap puts to a closed channel, it will be removed from the mult."], 
          null)), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "meta27421", "meta27421", 1925877832, null)], null);
        };
      }(cs);
      cljs.core.async.t_cljs$core$async27420.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async27420.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async27420";
      cljs.core.async.t_cljs$core$async27420.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
          return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async27420");
        };
      }(cs);
      cljs.core.async.__GT_t_cljs$core$async27420 = function(cs) {
        return function cljs$core$async$mult_$___GT_t_cljs$core$async27420(mult__$1, ch__$1, cs__$1, meta27421) {
          return new cljs.core.async.t_cljs$core$async27420(mult__$1, ch__$1, cs__$1, meta27421);
        };
      }(cs);
    }
    return new cljs.core.async.t_cljs$core$async27420(cljs$core$async$mult, ch, cs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__26334__auto___27641 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___27641, cs, m, dchan, dctr, done) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___27641, cs, m, dchan, dctr, done) {
          return function(state_27553) {
            var state_val_27554 = state_27553[1];
            if (state_val_27554 === 7) {
              var inst_27549 = state_27553[2];
              var state_27553__$1 = state_27553;
              var statearr_27555_27642 = state_27553__$1;
              statearr_27555_27642[2] = inst_27549;
              statearr_27555_27642[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27554 === 20) {
                var inst_27454 = state_27553[7];
                var inst_27464 = cljs.core.first.call(null, inst_27454);
                var inst_27465 = cljs.core.nth.call(null, inst_27464, 0, null);
                var inst_27466 = cljs.core.nth.call(null, inst_27464, 1, null);
                var state_27553__$1 = function() {
                  var statearr_27556 = state_27553;
                  statearr_27556[8] = inst_27465;
                  return statearr_27556;
                }();
                if (cljs.core.truth_(inst_27466)) {
                  var statearr_27557_27643 = state_27553__$1;
                  statearr_27557_27643[1] = 22;
                } else {
                  var statearr_27558_27644 = state_27553__$1;
                  statearr_27558_27644[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27554 === 27) {
                  var inst_27501 = state_27553[9];
                  var inst_27496 = state_27553[10];
                  var inst_27494 = state_27553[11];
                  var inst_27425 = state_27553[12];
                  var inst_27501__$1 = cljs.core._nth.call(null, inst_27494, inst_27496);
                  var inst_27502 = cljs.core.async.put_BANG_.call(null, inst_27501__$1, inst_27425, done);
                  var state_27553__$1 = function() {
                    var statearr_27559 = state_27553;
                    statearr_27559[9] = inst_27501__$1;
                    return statearr_27559;
                  }();
                  if (cljs.core.truth_(inst_27502)) {
                    var statearr_27560_27645 = state_27553__$1;
                    statearr_27560_27645[1] = 30;
                  } else {
                    var statearr_27561_27646 = state_27553__$1;
                    statearr_27561_27646[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27554 === 1) {
                    var state_27553__$1 = state_27553;
                    var statearr_27562_27647 = state_27553__$1;
                    statearr_27562_27647[2] = null;
                    statearr_27562_27647[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27554 === 24) {
                      var inst_27454 = state_27553[7];
                      var inst_27471 = state_27553[2];
                      var inst_27472 = cljs.core.next.call(null, inst_27454);
                      var inst_27434 = inst_27472;
                      var inst_27435 = null;
                      var inst_27436 = 0;
                      var inst_27437 = 0;
                      var state_27553__$1 = function() {
                        var statearr_27563 = state_27553;
                        statearr_27563[13] = inst_27437;
                        statearr_27563[14] = inst_27436;
                        statearr_27563[15] = inst_27471;
                        statearr_27563[16] = inst_27434;
                        statearr_27563[17] = inst_27435;
                        return statearr_27563;
                      }();
                      var statearr_27564_27648 = state_27553__$1;
                      statearr_27564_27648[2] = null;
                      statearr_27564_27648[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27554 === 39) {
                        var state_27553__$1 = state_27553;
                        var statearr_27568_27649 = state_27553__$1;
                        statearr_27568_27649[2] = null;
                        statearr_27568_27649[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_27554 === 4) {
                          var inst_27425 = state_27553[12];
                          var inst_27425__$1 = state_27553[2];
                          var inst_27426 = inst_27425__$1 == null;
                          var state_27553__$1 = function() {
                            var statearr_27569 = state_27553;
                            statearr_27569[12] = inst_27425__$1;
                            return statearr_27569;
                          }();
                          if (cljs.core.truth_(inst_27426)) {
                            var statearr_27570_27650 = state_27553__$1;
                            statearr_27570_27650[1] = 5;
                          } else {
                            var statearr_27571_27651 = state_27553__$1;
                            statearr_27571_27651[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27554 === 15) {
                            var inst_27437 = state_27553[13];
                            var inst_27436 = state_27553[14];
                            var inst_27434 = state_27553[16];
                            var inst_27435 = state_27553[17];
                            var inst_27450 = state_27553[2];
                            var inst_27451 = inst_27437 + 1;
                            var tmp27565 = inst_27436;
                            var tmp27566 = inst_27434;
                            var tmp27567 = inst_27435;
                            var inst_27434__$1 = tmp27566;
                            var inst_27435__$1 = tmp27567;
                            var inst_27436__$1 = tmp27565;
                            var inst_27437__$1 = inst_27451;
                            var state_27553__$1 = function() {
                              var statearr_27572 = state_27553;
                              statearr_27572[13] = inst_27437__$1;
                              statearr_27572[14] = inst_27436__$1;
                              statearr_27572[18] = inst_27450;
                              statearr_27572[16] = inst_27434__$1;
                              statearr_27572[17] = inst_27435__$1;
                              return statearr_27572;
                            }();
                            var statearr_27573_27652 = state_27553__$1;
                            statearr_27573_27652[2] = null;
                            statearr_27573_27652[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_27554 === 21) {
                              var inst_27475 = state_27553[2];
                              var state_27553__$1 = state_27553;
                              var statearr_27577_27653 = state_27553__$1;
                              statearr_27577_27653[2] = inst_27475;
                              statearr_27577_27653[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27554 === 31) {
                                var inst_27501 = state_27553[9];
                                var inst_27505 = done.call(null, null);
                                var inst_27506 = cljs.core.async.untap_STAR_.call(null, m, inst_27501);
                                var state_27553__$1 = function() {
                                  var statearr_27578 = state_27553;
                                  statearr_27578[19] = inst_27505;
                                  return statearr_27578;
                                }();
                                var statearr_27579_27654 = state_27553__$1;
                                statearr_27579_27654[2] = inst_27506;
                                statearr_27579_27654[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_27554 === 32) {
                                  var inst_27496 = state_27553[10];
                                  var inst_27494 = state_27553[11];
                                  var inst_27493 = state_27553[20];
                                  var inst_27495 = state_27553[21];
                                  var inst_27508 = state_27553[2];
                                  var inst_27509 = inst_27496 + 1;
                                  var tmp27574 = inst_27494;
                                  var tmp27575 = inst_27493;
                                  var tmp27576 = inst_27495;
                                  var inst_27493__$1 = tmp27575;
                                  var inst_27494__$1 = tmp27574;
                                  var inst_27495__$1 = tmp27576;
                                  var inst_27496__$1 = inst_27509;
                                  var state_27553__$1 = function() {
                                    var statearr_27580 = state_27553;
                                    statearr_27580[10] = inst_27496__$1;
                                    statearr_27580[11] = inst_27494__$1;
                                    statearr_27580[20] = inst_27493__$1;
                                    statearr_27580[22] = inst_27508;
                                    statearr_27580[21] = inst_27495__$1;
                                    return statearr_27580;
                                  }();
                                  var statearr_27581_27655 = state_27553__$1;
                                  statearr_27581_27655[2] = null;
                                  statearr_27581_27655[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27554 === 40) {
                                    var inst_27521 = state_27553[23];
                                    var inst_27525 = done.call(null, null);
                                    var inst_27526 = cljs.core.async.untap_STAR_.call(null, m, inst_27521);
                                    var state_27553__$1 = function() {
                                      var statearr_27582 = state_27553;
                                      statearr_27582[24] = inst_27525;
                                      return statearr_27582;
                                    }();
                                    var statearr_27583_27656 = state_27553__$1;
                                    statearr_27583_27656[2] = inst_27526;
                                    statearr_27583_27656[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27554 === 33) {
                                      var inst_27512 = state_27553[25];
                                      var inst_27514 = cljs.core.chunked_seq_QMARK_.call(null, inst_27512);
                                      var state_27553__$1 = state_27553;
                                      if (inst_27514) {
                                        var statearr_27584_27657 = state_27553__$1;
                                        statearr_27584_27657[1] = 36;
                                      } else {
                                        var statearr_27585_27658 = state_27553__$1;
                                        statearr_27585_27658[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27554 === 13) {
                                        var inst_27444 = state_27553[26];
                                        var inst_27447 = cljs.core.async.close_BANG_.call(null, inst_27444);
                                        var state_27553__$1 = state_27553;
                                        var statearr_27586_27659 = state_27553__$1;
                                        statearr_27586_27659[2] = inst_27447;
                                        statearr_27586_27659[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_27554 === 22) {
                                          var inst_27465 = state_27553[8];
                                          var inst_27468 = cljs.core.async.close_BANG_.call(null, inst_27465);
                                          var state_27553__$1 = state_27553;
                                          var statearr_27587_27660 = state_27553__$1;
                                          statearr_27587_27660[2] = inst_27468;
                                          statearr_27587_27660[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_27554 === 36) {
                                            var inst_27512 = state_27553[25];
                                            var inst_27516 = cljs.core.chunk_first.call(null, inst_27512);
                                            var inst_27517 = cljs.core.chunk_rest.call(null, inst_27512);
                                            var inst_27518 = cljs.core.count.call(null, inst_27516);
                                            var inst_27493 = inst_27517;
                                            var inst_27494 = inst_27516;
                                            var inst_27495 = inst_27518;
                                            var inst_27496 = 0;
                                            var state_27553__$1 = function() {
                                              var statearr_27588 = state_27553;
                                              statearr_27588[10] = inst_27496;
                                              statearr_27588[11] = inst_27494;
                                              statearr_27588[20] = inst_27493;
                                              statearr_27588[21] = inst_27495;
                                              return statearr_27588;
                                            }();
                                            var statearr_27589_27661 = state_27553__$1;
                                            statearr_27589_27661[2] = null;
                                            statearr_27589_27661[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_27554 === 41) {
                                              var inst_27512 = state_27553[25];
                                              var inst_27528 = state_27553[2];
                                              var inst_27529 = cljs.core.next.call(null, inst_27512);
                                              var inst_27493 = inst_27529;
                                              var inst_27494 = null;
                                              var inst_27495 = 0;
                                              var inst_27496 = 0;
                                              var state_27553__$1 = function() {
                                                var statearr_27590 = state_27553;
                                                statearr_27590[10] = inst_27496;
                                                statearr_27590[11] = inst_27494;
                                                statearr_27590[20] = inst_27493;
                                                statearr_27590[21] = inst_27495;
                                                statearr_27590[27] = inst_27528;
                                                return statearr_27590;
                                              }();
                                              var statearr_27591_27662 = state_27553__$1;
                                              statearr_27591_27662[2] = null;
                                              statearr_27591_27662[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_27554 === 43) {
                                                var state_27553__$1 = state_27553;
                                                var statearr_27592_27663 = state_27553__$1;
                                                statearr_27592_27663[2] = null;
                                                statearr_27592_27663[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_27554 === 29) {
                                                  var inst_27537 = state_27553[2];
                                                  var state_27553__$1 = state_27553;
                                                  var statearr_27593_27664 = state_27553__$1;
                                                  statearr_27593_27664[2] = inst_27537;
                                                  statearr_27593_27664[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_27554 === 44) {
                                                    var inst_27546 = state_27553[2];
                                                    var state_27553__$1 = function() {
                                                      var statearr_27594 = state_27553;
                                                      statearr_27594[28] = inst_27546;
                                                      return statearr_27594;
                                                    }();
                                                    var statearr_27595_27665 = state_27553__$1;
                                                    statearr_27595_27665[2] = null;
                                                    statearr_27595_27665[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_27554 === 6) {
                                                      var inst_27485 = state_27553[29];
                                                      var inst_27484 = cljs.core.deref.call(null, cs);
                                                      var inst_27485__$1 = cljs.core.keys.call(null, inst_27484);
                                                      var inst_27486 = cljs.core.count.call(null, inst_27485__$1);
                                                      var inst_27487 = cljs.core.reset_BANG_.call(null, dctr, inst_27486);
                                                      var inst_27492 = cljs.core.seq.call(null, inst_27485__$1);
                                                      var inst_27493 = inst_27492;
                                                      var inst_27494 = null;
                                                      var inst_27495 = 0;
                                                      var inst_27496 = 0;
                                                      var state_27553__$1 = function() {
                                                        var statearr_27596 = state_27553;
                                                        statearr_27596[29] = inst_27485__$1;
                                                        statearr_27596[10] = inst_27496;
                                                        statearr_27596[11] = inst_27494;
                                                        statearr_27596[20] = inst_27493;
                                                        statearr_27596[21] = inst_27495;
                                                        statearr_27596[30] = inst_27487;
                                                        return statearr_27596;
                                                      }();
                                                      var statearr_27597_27666 = state_27553__$1;
                                                      statearr_27597_27666[2] = null;
                                                      statearr_27597_27666[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_27554 === 28) {
                                                        var inst_27512 = state_27553[25];
                                                        var inst_27493 = state_27553[20];
                                                        var inst_27512__$1 = cljs.core.seq.call(null, inst_27493);
                                                        var state_27553__$1 = function() {
                                                          var statearr_27598 = state_27553;
                                                          statearr_27598[25] = inst_27512__$1;
                                                          return statearr_27598;
                                                        }();
                                                        if (inst_27512__$1) {
                                                          var statearr_27599_27667 = state_27553__$1;
                                                          statearr_27599_27667[1] = 33;
                                                        } else {
                                                          var statearr_27600_27668 = state_27553__$1;
                                                          statearr_27600_27668[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_27554 === 25) {
                                                          var inst_27496 = state_27553[10];
                                                          var inst_27495 = state_27553[21];
                                                          var inst_27498 = inst_27496 < inst_27495;
                                                          var inst_27499 = inst_27498;
                                                          var state_27553__$1 = state_27553;
                                                          if (cljs.core.truth_(inst_27499)) {
                                                            var statearr_27601_27669 = state_27553__$1;
                                                            statearr_27601_27669[1] = 27;
                                                          } else {
                                                            var statearr_27602_27670 = state_27553__$1;
                                                            statearr_27602_27670[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_27554 === 34) {
                                                            var state_27553__$1 = state_27553;
                                                            var statearr_27603_27671 = state_27553__$1;
                                                            statearr_27603_27671[2] = null;
                                                            statearr_27603_27671[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_27554 === 17) {
                                                              var state_27553__$1 = state_27553;
                                                              var statearr_27604_27672 = state_27553__$1;
                                                              statearr_27604_27672[2] = null;
                                                              statearr_27604_27672[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_27554 === 3) {
                                                                var inst_27551 = state_27553[2];
                                                                var state_27553__$1 = state_27553;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27553__$1, inst_27551);
                                                              } else {
                                                                if (state_val_27554 === 12) {
                                                                  var inst_27480 = state_27553[2];
                                                                  var state_27553__$1 = state_27553;
                                                                  var statearr_27605_27673 = state_27553__$1;
                                                                  statearr_27605_27673[2] = inst_27480;
                                                                  statearr_27605_27673[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_27554 === 2) {
                                                                    var state_27553__$1 = state_27553;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27553__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_27554 === 23) {
                                                                      var state_27553__$1 = state_27553;
                                                                      var statearr_27606_27674 = state_27553__$1;
                                                                      statearr_27606_27674[2] = null;
                                                                      statearr_27606_27674[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_27554 === 35) {
                                                                        var inst_27535 = state_27553[2];
                                                                        var state_27553__$1 = state_27553;
                                                                        var statearr_27607_27675 = state_27553__$1;
                                                                        statearr_27607_27675[2] = inst_27535;
                                                                        statearr_27607_27675[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_27554 === 19) {
                                                                          var inst_27454 = state_27553[7];
                                                                          var inst_27458 = cljs.core.chunk_first.call(null, inst_27454);
                                                                          var inst_27459 = cljs.core.chunk_rest.call(null, inst_27454);
                                                                          var inst_27460 = cljs.core.count.call(null, inst_27458);
                                                                          var inst_27434 = inst_27459;
                                                                          var inst_27435 = inst_27458;
                                                                          var inst_27436 = inst_27460;
                                                                          var inst_27437 = 0;
                                                                          var state_27553__$1 = function() {
                                                                            var statearr_27608 = state_27553;
                                                                            statearr_27608[13] = inst_27437;
                                                                            statearr_27608[14] = inst_27436;
                                                                            statearr_27608[16] = inst_27434;
                                                                            statearr_27608[17] = inst_27435;
                                                                            return statearr_27608;
                                                                          }();
                                                                          var statearr_27609_27676 = state_27553__$1;
                                                                          statearr_27609_27676[2] = null;
                                                                          statearr_27609_27676[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_27554 === 11) {
                                                                            var inst_27434 = state_27553[16];
                                                                            var inst_27454 = state_27553[7];
                                                                            var inst_27454__$1 = cljs.core.seq.call(null, inst_27434);
                                                                            var state_27553__$1 = function() {
                                                                              var statearr_27610 = state_27553;
                                                                              statearr_27610[7] = inst_27454__$1;
                                                                              return statearr_27610;
                                                                            }();
                                                                            if (inst_27454__$1) {
                                                                              var statearr_27611_27677 = state_27553__$1;
                                                                              statearr_27611_27677[1] = 16;
                                                                            } else {
                                                                              var statearr_27612_27678 = state_27553__$1;
                                                                              statearr_27612_27678[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_27554 === 9) {
                                                                              var inst_27482 = state_27553[2];
                                                                              var state_27553__$1 = state_27553;
                                                                              var statearr_27613_27679 = state_27553__$1;
                                                                              statearr_27613_27679[2] = inst_27482;
                                                                              statearr_27613_27679[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_27554 === 5) {
                                                                                var inst_27432 = cljs.core.deref.call(null, cs);
                                                                                var inst_27433 = cljs.core.seq.call(null, inst_27432);
                                                                                var inst_27434 = inst_27433;
                                                                                var inst_27435 = null;
                                                                                var inst_27436 = 0;
                                                                                var inst_27437 = 0;
                                                                                var state_27553__$1 = function() {
                                                                                  var statearr_27614 = state_27553;
                                                                                  statearr_27614[13] = inst_27437;
                                                                                  statearr_27614[14] = inst_27436;
                                                                                  statearr_27614[16] = inst_27434;
                                                                                  statearr_27614[17] = inst_27435;
                                                                                  return statearr_27614;
                                                                                }();
                                                                                var statearr_27615_27680 = state_27553__$1;
                                                                                statearr_27615_27680[2] = null;
                                                                                statearr_27615_27680[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_27554 === 14) {
                                                                                  var state_27553__$1 = state_27553;
                                                                                  var statearr_27616_27681 = state_27553__$1;
                                                                                  statearr_27616_27681[2] = null;
                                                                                  statearr_27616_27681[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_27554 === 45) {
                                                                                    var inst_27543 = state_27553[2];
                                                                                    var state_27553__$1 = state_27553;
                                                                                    var statearr_27617_27682 = state_27553__$1;
                                                                                    statearr_27617_27682[2] = inst_27543;
                                                                                    statearr_27617_27682[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_27554 === 26) {
                                                                                      var inst_27485 = state_27553[29];
                                                                                      var inst_27539 = state_27553[2];
                                                                                      var inst_27540 = cljs.core.seq.call(null, inst_27485);
                                                                                      var state_27553__$1 = function() {
                                                                                        var statearr_27618 = state_27553;
                                                                                        statearr_27618[31] = inst_27539;
                                                                                        return statearr_27618;
                                                                                      }();
                                                                                      if (inst_27540) {
                                                                                        var statearr_27619_27683 = state_27553__$1;
                                                                                        statearr_27619_27683[1] = 42;
                                                                                      } else {
                                                                                        var statearr_27620_27684 = state_27553__$1;
                                                                                        statearr_27620_27684[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_27554 === 16) {
                                                                                        var inst_27454 = state_27553[7];
                                                                                        var inst_27456 = cljs.core.chunked_seq_QMARK_.call(null, inst_27454);
                                                                                        var state_27553__$1 = state_27553;
                                                                                        if (inst_27456) {
                                                                                          var statearr_27621_27685 = state_27553__$1;
                                                                                          statearr_27621_27685[1] = 19;
                                                                                        } else {
                                                                                          var statearr_27622_27686 = state_27553__$1;
                                                                                          statearr_27622_27686[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_27554 === 38) {
                                                                                          var inst_27532 = state_27553[2];
                                                                                          var state_27553__$1 = state_27553;
                                                                                          var statearr_27623_27687 = state_27553__$1;
                                                                                          statearr_27623_27687[2] = inst_27532;
                                                                                          statearr_27623_27687[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_27554 === 30) {
                                                                                            var state_27553__$1 = state_27553;
                                                                                            var statearr_27624_27688 = state_27553__$1;
                                                                                            statearr_27624_27688[2] = null;
                                                                                            statearr_27624_27688[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_27554 === 10) {
                                                                                              var inst_27437 = state_27553[13];
                                                                                              var inst_27435 = state_27553[17];
                                                                                              var inst_27443 = cljs.core._nth.call(null, inst_27435, inst_27437);
                                                                                              var inst_27444 = cljs.core.nth.call(null, inst_27443, 0, null);
                                                                                              var inst_27445 = cljs.core.nth.call(null, inst_27443, 1, null);
                                                                                              var state_27553__$1 = function() {
                                                                                                var statearr_27625 = state_27553;
                                                                                                statearr_27625[26] = inst_27444;
                                                                                                return statearr_27625;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_27445)) {
                                                                                                var statearr_27626_27689 = state_27553__$1;
                                                                                                statearr_27626_27689[1] = 13;
                                                                                              } else {
                                                                                                var statearr_27627_27690 = state_27553__$1;
                                                                                                statearr_27627_27690[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_27554 === 18) {
                                                                                                var inst_27478 = state_27553[2];
                                                                                                var state_27553__$1 = state_27553;
                                                                                                var statearr_27628_27691 = state_27553__$1;
                                                                                                statearr_27628_27691[2] = inst_27478;
                                                                                                statearr_27628_27691[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_27554 === 42) {
                                                                                                  var state_27553__$1 = state_27553;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_27553__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_27554 === 37) {
                                                                                                    var inst_27521 = state_27553[23];
                                                                                                    var inst_27512 = state_27553[25];
                                                                                                    var inst_27425 = state_27553[12];
                                                                                                    var inst_27521__$1 = cljs.core.first.call(null, inst_27512);
                                                                                                    var inst_27522 = cljs.core.async.put_BANG_.call(null, inst_27521__$1, inst_27425, done);
                                                                                                    var state_27553__$1 = function() {
                                                                                                      var statearr_27629 = state_27553;
                                                                                                      statearr_27629[23] = inst_27521__$1;
                                                                                                      return statearr_27629;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_27522)) {
                                                                                                      var statearr_27630_27692 = state_27553__$1;
                                                                                                      statearr_27630_27692[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_27631_27693 = state_27553__$1;
                                                                                                      statearr_27631_27693[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_27554 === 8) {
                                                                                                      var inst_27437 = state_27553[13];
                                                                                                      var inst_27436 = state_27553[14];
                                                                                                      var inst_27439 = inst_27437 < inst_27436;
                                                                                                      var inst_27440 = inst_27439;
                                                                                                      var state_27553__$1 = state_27553;
                                                                                                      if (cljs.core.truth_(inst_27440)) {
                                                                                                        var statearr_27632_27694 = state_27553__$1;
                                                                                                        statearr_27632_27694[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_27633_27695 = state_27553__$1;
                                                                                                        statearr_27633_27695[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___27641, cs, m, dchan, dctr, done);
        return function(switch__26222__auto__, c__26334__auto___27641, cs, m, dchan, dctr, done) {
          return function() {
            var cljs$core$async$mult_$_state_machine__26223__auto__ = null;
            var cljs$core$async$mult_$_state_machine__26223__auto____0 = function() {
              var statearr_27637 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_27637[0] = cljs$core$async$mult_$_state_machine__26223__auto__;
              statearr_27637[1] = 1;
              return statearr_27637;
            };
            var cljs$core$async$mult_$_state_machine__26223__auto____1 = function(state_27553) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_27553);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e27638) {
                    if (e27638 instanceof Object) {
                      var ex__26226__auto__ = e27638;
                      var statearr_27639_27696 = state_27553;
                      statearr_27639_27696[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27553);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e27638;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__27697 = state_27553;
                  state_27553 = G__27697;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$mult_$_state_machine__26223__auto__ = function(state_27553) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mult_$_state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$mult_$_state_machine__26223__auto____1.call(this, state_27553);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mult_$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mult_$_state_machine__26223__auto____0;
            cljs$core$async$mult_$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mult_$_state_machine__26223__auto____1;
            return cljs$core$async$mult_$_state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___27641, cs, m, dchan, dctr, done);
      }();
      var state__26336__auto__ = function() {
        var statearr_27640 = f__26335__auto__.call(null);
        statearr_27640[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___27641;
        return statearr_27640;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___27641, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function cljs$core$async$tap(var_args) {
  var args27698 = [];
  var len__19806__auto___27701 = arguments.length;
  var i__19807__auto___27702 = 0;
  while (true) {
    if (i__19807__auto___27702 < len__19806__auto___27701) {
      args27698.push(arguments[i__19807__auto___27702]);
      var G__27703 = i__19807__auto___27702 + 1;
      i__19807__auto___27702 = G__27703;
      continue;
    } else {
    }
    break;
  }
  var G__27700 = args27698.length;
  switch(G__27700) {
    case 2:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args27698.length)].join(""));;
  }
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$2 = function(mult, ch) {
  return cljs.core.async.tap.call(null, mult, ch, true);
};
cljs.core.async.tap.cljs$core$IFn$_invoke$arity$3 = function(mult, ch, close_QMARK_) {
  cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
  return ch;
};
cljs.core.async.tap.cljs$lang$maxFixedArity = 3;
cljs.core.async.untap = function cljs$core$async$untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function cljs$core$async$untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
};
cljs.core.async.admix_STAR_ = function cljs$core$async$admix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$admix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m, ch);
    } else {
      var m__19400__auto____$1 = cljs.core.async.admix_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
      }
    }
  }
};
cljs.core.async.unmix_STAR_ = function cljs$core$async$unmix_STAR_(m, ch) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m, ch);
    } else {
      var m__19400__auto____$1 = cljs.core.async.unmix_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
      }
    }
  }
};
cljs.core.async.unmix_all_STAR_ = function cljs$core$async$unmix_all_STAR_(m) {
  if (!(m == null) && !(m.cljs$core$async$Mix$unmix_all_STAR_$arity$1 == null)) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m);
    } else {
      var m__19400__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
      }
    }
  }
};
cljs.core.async.toggle_STAR_ = function cljs$core$async$toggle_STAR_(m, state_map) {
  if (!(m == null) && !(m.cljs$core$async$Mix$toggle_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m, state_map);
    } else {
      var m__19400__auto____$1 = cljs.core.async.toggle_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m, state_map);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
      }
    }
  }
};
cljs.core.async.solo_mode_STAR_ = function cljs$core$async$solo_mode_STAR_(m, mode) {
  if (!(m == null) && !(m.cljs$core$async$Mix$solo_mode_STAR_$arity$2 == null)) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__19399__auto__ = m == null ? null : m;
    var m__19400__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, m, mode);
    } else {
      var m__19400__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, m, mode);
      } else {
        throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
      }
    }
  }
};
cljs.core.async.ioc_alts_BANG_ = function cljs$core$async$ioc_alts_BANG_(var_args) {
  var args__19813__auto__ = [];
  var len__19806__auto___27715 = arguments.length;
  var i__19807__auto___27716 = 0;
  while (true) {
    if (i__19807__auto___27716 < len__19806__auto___27715) {
      args__19813__auto__.push(arguments[i__19807__auto___27716]);
      var G__27717 = i__19807__auto___27716 + 1;
      i__19807__auto___27716 = G__27717;
      continue;
    } else {
    }
    break;
  }
  var argseq__19814__auto__ = 3 < args__19813__auto__.length ? new cljs.core.IndexedSeq(args__19813__auto__.slice(3), 0, null) : null;
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__19814__auto__);
};
cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(state, cont_block, ports, p__27709) {
  var map__27710 = p__27709;
  var map__27710__$1 = (!(map__27710 == null) ? map__27710.cljs$lang$protocol_mask$partition0$ & 64 || map__27710.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__27710) : map__27710;
  var opts = map__27710__$1;
  var statearr_27712_27718 = state;
  statearr_27712_27718[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
  var temp__4657__auto__ = cljs.core.async.do_alts.call(null, function(map__27710, map__27710__$1, opts) {
    return function(val) {
      var statearr_27713_27719 = state;
      statearr_27713_27719[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
    };
  }(map__27710, map__27710__$1, opts), ports, opts);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var cb = temp__4657__auto__;
    var statearr_27714_27720 = state;
    statearr_27714_27720[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.async.ioc_alts_BANG_.cljs$lang$applyTo = function(seq27705) {
  var G__27706 = cljs.core.first.call(null, seq27705);
  var seq27705__$1 = cljs.core.next.call(null, seq27705);
  var G__27707 = cljs.core.first.call(null, seq27705__$1);
  var seq27705__$2 = cljs.core.next.call(null, seq27705__$1);
  var G__27708 = cljs.core.first.call(null, seq27705__$2);
  var seq27705__$3 = cljs.core.next.call(null, seq27705__$2);
  return cljs.core.async.ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__27706, G__27707, G__27708, seq27705__$3);
};
cljs.core.async.mix = function cljs$core$async$mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t_cljs$core$async27884 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async27884 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta27885) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta27885 = meta27885;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_27886, meta27885__$1) {
          var self__ = this;
          var _27886__$1 = this;
          return new cljs.core.async.t_cljs$core$async27884(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta27885__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_27886) {
          var self__ = this;
          var _27886__$1 = this;
          return self__.meta27885;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str("(solo-modes mode)")].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.getBasis = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function() {
          return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "change", "change", 477485025, null), cljs.core.with_meta(new cljs.core.Symbol(null, "mix", "mix", 2121373763, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [new cljs.core.Symbol(null, "out", "out", 729986010, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Creates and returns a mix of one or more input channels which will\n  be put on the supplied out channel. Input sources can be added to\n  the mix with 'admix', and removed with 'unmix'. A mix supports\n  soloing, muting and pausing multiple inputs atomically using\n  'toggle', and can solo using either muting or pausing as determined\n  by 'solo-mode'.\n\n  Each channel can have zero or more boolean modes set via 'toggle':\n\n  :solo - when true, only this (ond other soloed) channel(s) will appear\n          in the mix output channel. :mute and :pause states of soloed\n          channels are ignored. If solo-mode is :mute, non-soloed\n          channels are muted, if :pause, non-soloed channels are\n          paused.\n\n  :mute - muted channels will have their contents consumed but not included in the mix\n  :pause - paused channels will not have their contents consumed (and thus also not included in the mix)\n"], 
          null)), new cljs.core.Symbol(null, "solo-mode", "solo-mode", 2031788074, null), new cljs.core.Symbol(null, "pick", "pick", 1300068175, null), new cljs.core.Symbol(null, "cs", "cs", -117024463, null), new cljs.core.Symbol(null, "calc-state", "calc-state", -349968968, null), new cljs.core.Symbol(null, "out", "out", 729986010, null), new cljs.core.Symbol(null, "changed", "changed", -2083710852, null), new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, 
          "attrs", "attrs", -450137186, null), new cljs.core.Symbol(null, "meta27885", "meta27885", -1919589244, null)], null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t_cljs$core$async27884.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async27884.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async27884";
      cljs.core.async.t_cljs$core$async27884.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
          return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async27884");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t_cljs$core$async27884 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function cljs$core$async$mix_$___GT_t_cljs$core$async27884(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta27885) {
          return new cljs.core.async.t_cljs$core$async27884(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta27885);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t_cljs$core$async27884(change, cljs$core$async$mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__26334__auto___28047 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28047, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28047, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_27984) {
            var state_val_27985 = state_27984[1];
            if (state_val_27985 === 7) {
              var inst_27902 = state_27984[2];
              var state_27984__$1 = state_27984;
              var statearr_27986_28048 = state_27984__$1;
              statearr_27986_28048[2] = inst_27902;
              statearr_27986_28048[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_27985 === 20) {
                var inst_27914 = state_27984[7];
                var state_27984__$1 = state_27984;
                var statearr_27987_28049 = state_27984__$1;
                statearr_27987_28049[2] = inst_27914;
                statearr_27987_28049[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_27985 === 27) {
                  var state_27984__$1 = state_27984;
                  var statearr_27988_28050 = state_27984__$1;
                  statearr_27988_28050[2] = null;
                  statearr_27988_28050[1] = 28;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_27985 === 1) {
                    var inst_27890 = state_27984[8];
                    var inst_27890__$1 = calc_state.call(null);
                    var inst_27892 = inst_27890__$1 == null;
                    var inst_27893 = cljs.core.not.call(null, inst_27892);
                    var state_27984__$1 = function() {
                      var statearr_27989 = state_27984;
                      statearr_27989[8] = inst_27890__$1;
                      return statearr_27989;
                    }();
                    if (inst_27893) {
                      var statearr_27990_28051 = state_27984__$1;
                      statearr_27990_28051[1] = 2;
                    } else {
                      var statearr_27991_28052 = state_27984__$1;
                      statearr_27991_28052[1] = 3;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_27985 === 24) {
                      var inst_27958 = state_27984[9];
                      var inst_27937 = state_27984[10];
                      var inst_27944 = state_27984[11];
                      var inst_27958__$1 = inst_27937.call(null, inst_27944);
                      var state_27984__$1 = function() {
                        var statearr_27992 = state_27984;
                        statearr_27992[9] = inst_27958__$1;
                        return statearr_27992;
                      }();
                      if (cljs.core.truth_(inst_27958__$1)) {
                        var statearr_27993_28053 = state_27984__$1;
                        statearr_27993_28053[1] = 29;
                      } else {
                        var statearr_27994_28054 = state_27984__$1;
                        statearr_27994_28054[1] = 30;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_27985 === 4) {
                        var inst_27905 = state_27984[2];
                        var state_27984__$1 = state_27984;
                        if (cljs.core.truth_(inst_27905)) {
                          var statearr_27995_28055 = state_27984__$1;
                          statearr_27995_28055[1] = 8;
                        } else {
                          var statearr_27996_28056 = state_27984__$1;
                          statearr_27996_28056[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_27985 === 15) {
                          var inst_27931 = state_27984[2];
                          var state_27984__$1 = state_27984;
                          if (cljs.core.truth_(inst_27931)) {
                            var statearr_27997_28057 = state_27984__$1;
                            statearr_27997_28057[1] = 19;
                          } else {
                            var statearr_27998_28058 = state_27984__$1;
                            statearr_27998_28058[1] = 20;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_27985 === 21) {
                            var inst_27936 = state_27984[12];
                            var inst_27936__$1 = state_27984[2];
                            var inst_27937 = cljs.core.get.call(null, inst_27936__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                            var inst_27938 = cljs.core.get.call(null, inst_27936__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                            var inst_27939 = cljs.core.get.call(null, inst_27936__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                            var state_27984__$1 = function() {
                              var statearr_27999 = state_27984;
                              statearr_27999[10] = inst_27937;
                              statearr_27999[12] = inst_27936__$1;
                              statearr_27999[13] = inst_27938;
                              return statearr_27999;
                            }();
                            return cljs.core.async.ioc_alts_BANG_.call(null, state_27984__$1, 22, inst_27939);
                          } else {
                            if (state_val_27985 === 31) {
                              var inst_27966 = state_27984[2];
                              var state_27984__$1 = state_27984;
                              if (cljs.core.truth_(inst_27966)) {
                                var statearr_28000_28059 = state_27984__$1;
                                statearr_28000_28059[1] = 32;
                              } else {
                                var statearr_28001_28060 = state_27984__$1;
                                statearr_28001_28060[1] = 33;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_27985 === 32) {
                                var inst_27943 = state_27984[14];
                                var state_27984__$1 = state_27984;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_27984__$1, 35, out, inst_27943);
                              } else {
                                if (state_val_27985 === 33) {
                                  var inst_27936 = state_27984[12];
                                  var inst_27914 = inst_27936;
                                  var state_27984__$1 = function() {
                                    var statearr_28002 = state_27984;
                                    statearr_28002[7] = inst_27914;
                                    return statearr_28002;
                                  }();
                                  var statearr_28003_28061 = state_27984__$1;
                                  statearr_28003_28061[2] = null;
                                  statearr_28003_28061[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_27985 === 13) {
                                    var inst_27914 = state_27984[7];
                                    var inst_27921 = inst_27914.cljs$lang$protocol_mask$partition0$;
                                    var inst_27922 = inst_27921 & 64;
                                    var inst_27923 = inst_27914.cljs$core$ISeq$;
                                    var inst_27924 = inst_27922 || inst_27923;
                                    var state_27984__$1 = state_27984;
                                    if (cljs.core.truth_(inst_27924)) {
                                      var statearr_28004_28062 = state_27984__$1;
                                      statearr_28004_28062[1] = 16;
                                    } else {
                                      var statearr_28005_28063 = state_27984__$1;
                                      statearr_28005_28063[1] = 17;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_27985 === 22) {
                                      var inst_27943 = state_27984[14];
                                      var inst_27944 = state_27984[11];
                                      var inst_27942 = state_27984[2];
                                      var inst_27943__$1 = cljs.core.nth.call(null, inst_27942, 0, null);
                                      var inst_27944__$1 = cljs.core.nth.call(null, inst_27942, 1, null);
                                      var inst_27945 = inst_27943__$1 == null;
                                      var inst_27946 = cljs.core._EQ_.call(null, inst_27944__$1, change);
                                      var inst_27947 = inst_27945 || inst_27946;
                                      var state_27984__$1 = function() {
                                        var statearr_28006 = state_27984;
                                        statearr_28006[14] = inst_27943__$1;
                                        statearr_28006[11] = inst_27944__$1;
                                        return statearr_28006;
                                      }();
                                      if (cljs.core.truth_(inst_27947)) {
                                        var statearr_28007_28064 = state_27984__$1;
                                        statearr_28007_28064[1] = 23;
                                      } else {
                                        var statearr_28008_28065 = state_27984__$1;
                                        statearr_28008_28065[1] = 24;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_27985 === 36) {
                                        var inst_27936 = state_27984[12];
                                        var inst_27914 = inst_27936;
                                        var state_27984__$1 = function() {
                                          var statearr_28009 = state_27984;
                                          statearr_28009[7] = inst_27914;
                                          return statearr_28009;
                                        }();
                                        var statearr_28010_28066 = state_27984__$1;
                                        statearr_28010_28066[2] = null;
                                        statearr_28010_28066[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_27985 === 29) {
                                          var inst_27958 = state_27984[9];
                                          var state_27984__$1 = state_27984;
                                          var statearr_28011_28067 = state_27984__$1;
                                          statearr_28011_28067[2] = inst_27958;
                                          statearr_28011_28067[1] = 31;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_27985 === 6) {
                                            var state_27984__$1 = state_27984;
                                            var statearr_28012_28068 = state_27984__$1;
                                            statearr_28012_28068[2] = false;
                                            statearr_28012_28068[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_27985 === 28) {
                                              var inst_27954 = state_27984[2];
                                              var inst_27955 = calc_state.call(null);
                                              var inst_27914 = inst_27955;
                                              var state_27984__$1 = function() {
                                                var statearr_28013 = state_27984;
                                                statearr_28013[7] = inst_27914;
                                                statearr_28013[15] = inst_27954;
                                                return statearr_28013;
                                              }();
                                              var statearr_28014_28069 = state_27984__$1;
                                              statearr_28014_28069[2] = null;
                                              statearr_28014_28069[1] = 11;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_27985 === 25) {
                                                var inst_27980 = state_27984[2];
                                                var state_27984__$1 = state_27984;
                                                var statearr_28015_28070 = state_27984__$1;
                                                statearr_28015_28070[2] = inst_27980;
                                                statearr_28015_28070[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_27985 === 34) {
                                                  var inst_27978 = state_27984[2];
                                                  var state_27984__$1 = state_27984;
                                                  var statearr_28016_28071 = state_27984__$1;
                                                  statearr_28016_28071[2] = inst_27978;
                                                  statearr_28016_28071[1] = 25;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_27985 === 17) {
                                                    var state_27984__$1 = state_27984;
                                                    var statearr_28017_28072 = state_27984__$1;
                                                    statearr_28017_28072[2] = false;
                                                    statearr_28017_28072[1] = 18;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_27985 === 3) {
                                                      var state_27984__$1 = state_27984;
                                                      var statearr_28018_28073 = state_27984__$1;
                                                      statearr_28018_28073[2] = false;
                                                      statearr_28018_28073[1] = 4;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_27985 === 12) {
                                                        var inst_27982 = state_27984[2];
                                                        var state_27984__$1 = state_27984;
                                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_27984__$1, inst_27982);
                                                      } else {
                                                        if (state_val_27985 === 2) {
                                                          var inst_27890 = state_27984[8];
                                                          var inst_27895 = inst_27890.cljs$lang$protocol_mask$partition0$;
                                                          var inst_27896 = inst_27895 & 64;
                                                          var inst_27897 = inst_27890.cljs$core$ISeq$;
                                                          var inst_27898 = inst_27896 || inst_27897;
                                                          var state_27984__$1 = state_27984;
                                                          if (cljs.core.truth_(inst_27898)) {
                                                            var statearr_28019_28074 = state_27984__$1;
                                                            statearr_28019_28074[1] = 5;
                                                          } else {
                                                            var statearr_28020_28075 = state_27984__$1;
                                                            statearr_28020_28075[1] = 6;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_27985 === 23) {
                                                            var inst_27943 = state_27984[14];
                                                            var inst_27949 = inst_27943 == null;
                                                            var state_27984__$1 = state_27984;
                                                            if (cljs.core.truth_(inst_27949)) {
                                                              var statearr_28021_28076 = state_27984__$1;
                                                              statearr_28021_28076[1] = 26;
                                                            } else {
                                                              var statearr_28022_28077 = state_27984__$1;
                                                              statearr_28022_28077[1] = 27;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_27985 === 35) {
                                                              var inst_27969 = state_27984[2];
                                                              var state_27984__$1 = state_27984;
                                                              if (cljs.core.truth_(inst_27969)) {
                                                                var statearr_28023_28078 = state_27984__$1;
                                                                statearr_28023_28078[1] = 36;
                                                              } else {
                                                                var statearr_28024_28079 = state_27984__$1;
                                                                statearr_28024_28079[1] = 37;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_27985 === 19) {
                                                                var inst_27914 = state_27984[7];
                                                                var inst_27933 = cljs.core.apply.call(null, cljs.core.hash_map, inst_27914);
                                                                var state_27984__$1 = state_27984;
                                                                var statearr_28025_28080 = state_27984__$1;
                                                                statearr_28025_28080[2] = inst_27933;
                                                                statearr_28025_28080[1] = 21;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                if (state_val_27985 === 11) {
                                                                  var inst_27914 = state_27984[7];
                                                                  var inst_27918 = inst_27914 == null;
                                                                  var inst_27919 = cljs.core.not.call(null, inst_27918);
                                                                  var state_27984__$1 = state_27984;
                                                                  if (inst_27919) {
                                                                    var statearr_28026_28081 = state_27984__$1;
                                                                    statearr_28026_28081[1] = 13;
                                                                  } else {
                                                                    var statearr_28027_28082 = state_27984__$1;
                                                                    statearr_28027_28082[1] = 14;
                                                                  }
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_27985 === 9) {
                                                                    var inst_27890 = state_27984[8];
                                                                    var state_27984__$1 = state_27984;
                                                                    var statearr_28028_28083 = state_27984__$1;
                                                                    statearr_28028_28083[2] = inst_27890;
                                                                    statearr_28028_28083[1] = 10;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                  } else {
                                                                    if (state_val_27985 === 5) {
                                                                      var state_27984__$1 = state_27984;
                                                                      var statearr_28029_28084 = state_27984__$1;
                                                                      statearr_28029_28084[2] = true;
                                                                      statearr_28029_28084[1] = 7;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_27985 === 14) {
                                                                        var state_27984__$1 = state_27984;
                                                                        var statearr_28030_28085 = state_27984__$1;
                                                                        statearr_28030_28085[2] = false;
                                                                        statearr_28030_28085[1] = 15;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_27985 === 26) {
                                                                          var inst_27944 = state_27984[11];
                                                                          var inst_27951 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_27944);
                                                                          var state_27984__$1 = state_27984;
                                                                          var statearr_28031_28086 = state_27984__$1;
                                                                          statearr_28031_28086[2] = inst_27951;
                                                                          statearr_28031_28086[1] = 28;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_27985 === 16) {
                                                                            var state_27984__$1 = state_27984;
                                                                            var statearr_28032_28087 = state_27984__$1;
                                                                            statearr_28032_28087[2] = true;
                                                                            statearr_28032_28087[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_27985 === 38) {
                                                                              var inst_27974 = state_27984[2];
                                                                              var state_27984__$1 = state_27984;
                                                                              var statearr_28033_28088 = state_27984__$1;
                                                                              statearr_28033_28088[2] = inst_27974;
                                                                              statearr_28033_28088[1] = 34;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_27985 === 30) {
                                                                                var inst_27937 = state_27984[10];
                                                                                var inst_27944 = state_27984[11];
                                                                                var inst_27938 = state_27984[13];
                                                                                var inst_27961 = cljs.core.empty_QMARK_.call(null, inst_27937);
                                                                                var inst_27962 = inst_27938.call(null, inst_27944);
                                                                                var inst_27963 = cljs.core.not.call(null, inst_27962);
                                                                                var inst_27964 = inst_27961 && inst_27963;
                                                                                var state_27984__$1 = state_27984;
                                                                                var statearr_28034_28089 = state_27984__$1;
                                                                                statearr_28034_28089[2] = inst_27964;
                                                                                statearr_28034_28089[1] = 31;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_27985 === 10) {
                                                                                  var inst_27890 = state_27984[8];
                                                                                  var inst_27910 = state_27984[2];
                                                                                  var inst_27911 = cljs.core.get.call(null, inst_27910, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                                                  var inst_27912 = cljs.core.get.call(null, inst_27910, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                                                  var inst_27913 = cljs.core.get.call(null, inst_27910, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                                                  var inst_27914 = inst_27890;
                                                                                  var state_27984__$1 = function() {
                                                                                    var statearr_28035 = state_27984;
                                                                                    statearr_28035[16] = inst_27911;
                                                                                    statearr_28035[17] = inst_27912;
                                                                                    statearr_28035[7] = inst_27914;
                                                                                    statearr_28035[18] = inst_27913;
                                                                                    return statearr_28035;
                                                                                  }();
                                                                                  var statearr_28036_28090 = state_27984__$1;
                                                                                  statearr_28036_28090[2] = null;
                                                                                  statearr_28036_28090[1] = 11;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_27985 === 18) {
                                                                                    var inst_27928 = state_27984[2];
                                                                                    var state_27984__$1 = state_27984;
                                                                                    var statearr_28037_28091 = state_27984__$1;
                                                                                    statearr_28037_28091[2] = inst_27928;
                                                                                    statearr_28037_28091[1] = 15;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_27985 === 37) {
                                                                                      var state_27984__$1 = state_27984;
                                                                                      var statearr_28038_28092 = state_27984__$1;
                                                                                      statearr_28038_28092[2] = null;
                                                                                      statearr_28038_28092[1] = 38;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_27985 === 8) {
                                                                                        var inst_27890 = state_27984[8];
                                                                                        var inst_27907 = cljs.core.apply.call(null, cljs.core.hash_map, inst_27890);
                                                                                        var state_27984__$1 = state_27984;
                                                                                        var statearr_28039_28093 = state_27984__$1;
                                                                                        statearr_28039_28093[2] = inst_27907;
                                                                                        statearr_28039_28093[1] = 10;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        return null;
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28047, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__26222__auto__, c__26334__auto___28047, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var cljs$core$async$mix_$_state_machine__26223__auto__ = null;
            var cljs$core$async$mix_$_state_machine__26223__auto____0 = function() {
              var statearr_28043 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28043[0] = cljs$core$async$mix_$_state_machine__26223__auto__;
              statearr_28043[1] = 1;
              return statearr_28043;
            };
            var cljs$core$async$mix_$_state_machine__26223__auto____1 = function(state_27984) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_27984);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28044) {
                    if (e28044 instanceof Object) {
                      var ex__26226__auto__ = e28044;
                      var statearr_28045_28094 = state_27984;
                      statearr_28045_28094[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_27984);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28044;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28095 = state_27984;
                  state_27984 = G__28095;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$mix_$_state_machine__26223__auto__ = function(state_27984) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mix_$_state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$mix_$_state_machine__26223__auto____1.call(this, state_27984);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mix_$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mix_$_state_machine__26223__auto____0;
            cljs$core$async$mix_$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mix_$_state_machine__26223__auto____1;
            return cljs$core$async$mix_$_state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28047, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__26336__auto__ = function() {
        var statearr_28046 = f__26335__auto__.call(null);
        statearr_28046[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28047;
        return statearr_28046;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28047, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function cljs$core$async$admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function cljs$core$async$unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function cljs$core$async$unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function cljs$core$async$toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function cljs$core$async$solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
};
cljs.core.async.sub_STAR_ = function cljs$core$async$sub_STAR_(p, v, ch, close_QMARK_) {
  if (!(p == null) && !(p.cljs$core$async$Pub$sub_STAR_$arity$4 == null)) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__19399__auto__ = p == null ? null : p;
    var m__19400__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, p, v, ch, close_QMARK_);
    } else {
      var m__19400__auto____$1 = cljs.core.async.sub_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, p, v, ch, close_QMARK_);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
      }
    }
  }
};
cljs.core.async.unsub_STAR_ = function cljs$core$async$unsub_STAR_(p, v, ch) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_STAR_$arity$3 == null)) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__19399__auto__ = p == null ? null : p;
    var m__19400__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, p, v, ch);
    } else {
      var m__19400__auto____$1 = cljs.core.async.unsub_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, p, v, ch);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_ = function cljs$core$async$unsub_all_STAR_(var_args) {
  var args28096 = [];
  var len__19806__auto___28099 = arguments.length;
  var i__19807__auto___28100 = 0;
  while (true) {
    if (i__19807__auto___28100 < len__19806__auto___28099) {
      args28096.push(arguments[i__19807__auto___28100]);
      var G__28101 = i__19807__auto___28100 + 1;
      i__19807__auto___28100 = G__28101;
      continue;
    } else {
    }
    break;
  }
  var G__28098 = args28096.length;
  switch(G__28098) {
    case 1:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28096.length)].join(""));;
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = function(p) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$1 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
  } else {
    var x__19399__auto__ = p == null ? null : p;
    var m__19400__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, p);
    } else {
      var m__19400__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, p);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = function(p, v) {
  if (!(p == null) && !(p.cljs$core$async$Pub$unsub_all_STAR_$arity$2 == null)) {
    return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
  } else {
    var x__19399__auto__ = p == null ? null : p;
    var m__19400__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, p, v);
    } else {
      var m__19400__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, p, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
      }
    }
  }
};
cljs.core.async.unsub_all_STAR_.cljs$lang$maxFixedArity = 2;
cljs.core.async.pub = function cljs$core$async$pub(var_args) {
  var args28104 = [];
  var len__19806__auto___28229 = arguments.length;
  var i__19807__auto___28230 = 0;
  while (true) {
    if (i__19807__auto___28230 < len__19806__auto___28229) {
      args28104.push(arguments[i__19807__auto___28230]);
      var G__28231 = i__19807__auto___28230 + 1;
      i__19807__auto___28230 = G__28231;
      continue;
    } else {
    }
    break;
  }
  var G__28106 = args28104.length;
  switch(G__28106) {
    case 2:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28104.length)].join(""));;
  }
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$2 = function(ch, topic_fn) {
  return cljs.core.async.pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
};
cljs.core.async.pub.cljs$core$IFn$_invoke$arity$3 = function(ch, topic_fn, buf_fn) {
  var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ensure_mult = function(mults) {
    return function(topic) {
      var or__18736__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
      if (cljs.core.truth_(or__18736__auto__)) {
        return or__18736__auto__;
      } else {
        return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__18736__auto__, mults) {
          return function(p1__28103_SHARP_) {
            if (cljs.core.truth_(p1__28103_SHARP_.call(null, topic))) {
              return p1__28103_SHARP_;
            } else {
              return cljs.core.assoc.call(null, p1__28103_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
            }
          };
        }(or__18736__auto__, mults)), topic);
      }
    };
  }(mults);
  var p = function() {
    if (typeof cljs.core.async.t_cljs$core$async28107 !== "undefined") {
    } else {
      cljs.core.async.t_cljs$core$async28107 = function(ch, topic_fn, buf_fn, mults, ensure_mult, meta28108) {
        this.ch = ch;
        this.topic_fn = topic_fn;
        this.buf_fn = buf_fn;
        this.mults = mults;
        this.ensure_mult = ensure_mult;
        this.meta28108 = meta28108;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
        this.cljs$lang$protocol_mask$partition1$ = 0;
      };
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
        return function(_28109, meta28108__$1) {
          var self__ = this;
          var _28109__$1 = this;
          return new cljs.core.async.t_cljs$core$async28107(self__.ch, self__.topic_fn, self__.buf_fn, self__.mults, self__.ensure_mult, meta28108__$1);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
        return function(_28109) {
          var self__ = this;
          var _28109__$1 = this;
          return self__.meta28108;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Pub$ = true;
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1, close_QMARK_) {
          var self__ = this;
          var p__$1 = this;
          var m = self__.ensure_mult.call(null, topic);
          return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
        return function(p, topic, ch__$1) {
          var self__ = this;
          var p__$1 = this;
          var temp__4657__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
          if (cljs.core.truth_(temp__4657__auto__)) {
            var m = temp__4657__auto__;
            return cljs.core.async.untap.call(null, m, ch__$1);
          } else {
            return null;
          }
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
        return function(_, topic) {
          var self__ = this;
          var ___$1 = this;
          return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.getBasis = function(mults, ensure_mult) {
        return function() {
          return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "topic-fn", "topic-fn", -862449736, null), new cljs.core.Symbol(null, "buf-fn", "buf-fn", -1200281591, null), new cljs.core.Symbol(null, "mults", "mults", -461114485, null), new cljs.core.Symbol(null, "ensure-mult", "ensure-mult", 1796584816, null), new cljs.core.Symbol(null, "meta28108", "meta28108", -1211297665, 
          null)], null);
        };
      }(mults, ensure_mult);
      cljs.core.async.t_cljs$core$async28107.cljs$lang$type = true;
      cljs.core.async.t_cljs$core$async28107.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28107";
      cljs.core.async.t_cljs$core$async28107.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
        return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
          return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async28107");
        };
      }(mults, ensure_mult);
      cljs.core.async.__GT_t_cljs$core$async28107 = function(mults, ensure_mult) {
        return function cljs$core$async$__GT_t_cljs$core$async28107(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta28108) {
          return new cljs.core.async.t_cljs$core$async28107(ch__$1, topic_fn__$1, buf_fn__$1, mults__$1, ensure_mult__$1, meta28108);
        };
      }(mults, ensure_mult);
    }
    return new cljs.core.async.t_cljs$core$async28107(ch, topic_fn, buf_fn, mults, ensure_mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__26334__auto___28233 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28233, mults, ensure_mult, p) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28233, mults, ensure_mult, p) {
          return function(state_28181) {
            var state_val_28182 = state_28181[1];
            if (state_val_28182 === 7) {
              var inst_28177 = state_28181[2];
              var state_28181__$1 = state_28181;
              var statearr_28183_28234 = state_28181__$1;
              statearr_28183_28234[2] = inst_28177;
              statearr_28183_28234[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28182 === 20) {
                var state_28181__$1 = state_28181;
                var statearr_28184_28235 = state_28181__$1;
                statearr_28184_28235[2] = null;
                statearr_28184_28235[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28182 === 1) {
                  var state_28181__$1 = state_28181;
                  var statearr_28185_28236 = state_28181__$1;
                  statearr_28185_28236[2] = null;
                  statearr_28185_28236[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28182 === 24) {
                    var inst_28160 = state_28181[7];
                    var inst_28169 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_28160);
                    var state_28181__$1 = state_28181;
                    var statearr_28186_28237 = state_28181__$1;
                    statearr_28186_28237[2] = inst_28169;
                    statearr_28186_28237[1] = 25;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28182 === 4) {
                      var inst_28112 = state_28181[8];
                      var inst_28112__$1 = state_28181[2];
                      var inst_28113 = inst_28112__$1 == null;
                      var state_28181__$1 = function() {
                        var statearr_28187 = state_28181;
                        statearr_28187[8] = inst_28112__$1;
                        return statearr_28187;
                      }();
                      if (cljs.core.truth_(inst_28113)) {
                        var statearr_28188_28238 = state_28181__$1;
                        statearr_28188_28238[1] = 5;
                      } else {
                        var statearr_28189_28239 = state_28181__$1;
                        statearr_28189_28239[1] = 6;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28182 === 15) {
                        var inst_28154 = state_28181[2];
                        var state_28181__$1 = state_28181;
                        var statearr_28190_28240 = state_28181__$1;
                        statearr_28190_28240[2] = inst_28154;
                        statearr_28190_28240[1] = 12;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28182 === 21) {
                          var inst_28174 = state_28181[2];
                          var state_28181__$1 = function() {
                            var statearr_28191 = state_28181;
                            statearr_28191[9] = inst_28174;
                            return statearr_28191;
                          }();
                          var statearr_28192_28241 = state_28181__$1;
                          statearr_28192_28241[2] = null;
                          statearr_28192_28241[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28182 === 13) {
                            var inst_28136 = state_28181[10];
                            var inst_28138 = cljs.core.chunked_seq_QMARK_.call(null, inst_28136);
                            var state_28181__$1 = state_28181;
                            if (inst_28138) {
                              var statearr_28193_28242 = state_28181__$1;
                              statearr_28193_28242[1] = 16;
                            } else {
                              var statearr_28194_28243 = state_28181__$1;
                              statearr_28194_28243[1] = 17;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28182 === 22) {
                              var inst_28166 = state_28181[2];
                              var state_28181__$1 = state_28181;
                              if (cljs.core.truth_(inst_28166)) {
                                var statearr_28195_28244 = state_28181__$1;
                                statearr_28195_28244[1] = 23;
                              } else {
                                var statearr_28196_28245 = state_28181__$1;
                                statearr_28196_28245[1] = 24;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28182 === 6) {
                                var inst_28112 = state_28181[8];
                                var inst_28162 = state_28181[11];
                                var inst_28160 = state_28181[7];
                                var inst_28160__$1 = topic_fn.call(null, inst_28112);
                                var inst_28161 = cljs.core.deref.call(null, mults);
                                var inst_28162__$1 = cljs.core.get.call(null, inst_28161, inst_28160__$1);
                                var state_28181__$1 = function() {
                                  var statearr_28197 = state_28181;
                                  statearr_28197[11] = inst_28162__$1;
                                  statearr_28197[7] = inst_28160__$1;
                                  return statearr_28197;
                                }();
                                if (cljs.core.truth_(inst_28162__$1)) {
                                  var statearr_28198_28246 = state_28181__$1;
                                  statearr_28198_28246[1] = 19;
                                } else {
                                  var statearr_28199_28247 = state_28181__$1;
                                  statearr_28199_28247[1] = 20;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28182 === 25) {
                                  var inst_28171 = state_28181[2];
                                  var state_28181__$1 = state_28181;
                                  var statearr_28200_28248 = state_28181__$1;
                                  statearr_28200_28248[2] = inst_28171;
                                  statearr_28200_28248[1] = 21;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_28182 === 17) {
                                    var inst_28136 = state_28181[10];
                                    var inst_28145 = cljs.core.first.call(null, inst_28136);
                                    var inst_28146 = cljs.core.async.muxch_STAR_.call(null, inst_28145);
                                    var inst_28147 = cljs.core.async.close_BANG_.call(null, inst_28146);
                                    var inst_28148 = cljs.core.next.call(null, inst_28136);
                                    var inst_28122 = inst_28148;
                                    var inst_28123 = null;
                                    var inst_28124 = 0;
                                    var inst_28125 = 0;
                                    var state_28181__$1 = function() {
                                      var statearr_28201 = state_28181;
                                      statearr_28201[12] = inst_28147;
                                      statearr_28201[13] = inst_28123;
                                      statearr_28201[14] = inst_28124;
                                      statearr_28201[15] = inst_28125;
                                      statearr_28201[16] = inst_28122;
                                      return statearr_28201;
                                    }();
                                    var statearr_28202_28249 = state_28181__$1;
                                    statearr_28202_28249[2] = null;
                                    statearr_28202_28249[1] = 8;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_28182 === 3) {
                                      var inst_28179 = state_28181[2];
                                      var state_28181__$1 = state_28181;
                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28181__$1, inst_28179);
                                    } else {
                                      if (state_val_28182 === 12) {
                                        var inst_28156 = state_28181[2];
                                        var state_28181__$1 = state_28181;
                                        var statearr_28203_28250 = state_28181__$1;
                                        statearr_28203_28250[2] = inst_28156;
                                        statearr_28203_28250[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28182 === 2) {
                                          var state_28181__$1 = state_28181;
                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28181__$1, 4, ch);
                                        } else {
                                          if (state_val_28182 === 23) {
                                            var state_28181__$1 = state_28181;
                                            var statearr_28204_28251 = state_28181__$1;
                                            statearr_28204_28251[2] = null;
                                            statearr_28204_28251[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_28182 === 19) {
                                              var inst_28112 = state_28181[8];
                                              var inst_28162 = state_28181[11];
                                              var inst_28164 = cljs.core.async.muxch_STAR_.call(null, inst_28162);
                                              var state_28181__$1 = state_28181;
                                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28181__$1, 22, inst_28164, inst_28112);
                                            } else {
                                              if (state_val_28182 === 11) {
                                                var inst_28136 = state_28181[10];
                                                var inst_28122 = state_28181[16];
                                                var inst_28136__$1 = cljs.core.seq.call(null, inst_28122);
                                                var state_28181__$1 = function() {
                                                  var statearr_28205 = state_28181;
                                                  statearr_28205[10] = inst_28136__$1;
                                                  return statearr_28205;
                                                }();
                                                if (inst_28136__$1) {
                                                  var statearr_28206_28252 = state_28181__$1;
                                                  statearr_28206_28252[1] = 13;
                                                } else {
                                                  var statearr_28207_28253 = state_28181__$1;
                                                  statearr_28207_28253[1] = 14;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_28182 === 9) {
                                                  var inst_28158 = state_28181[2];
                                                  var state_28181__$1 = state_28181;
                                                  var statearr_28208_28254 = state_28181__$1;
                                                  statearr_28208_28254[2] = inst_28158;
                                                  statearr_28208_28254[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_28182 === 5) {
                                                    var inst_28119 = cljs.core.deref.call(null, mults);
                                                    var inst_28120 = cljs.core.vals.call(null, inst_28119);
                                                    var inst_28121 = cljs.core.seq.call(null, inst_28120);
                                                    var inst_28122 = inst_28121;
                                                    var inst_28123 = null;
                                                    var inst_28124 = 0;
                                                    var inst_28125 = 0;
                                                    var state_28181__$1 = function() {
                                                      var statearr_28209 = state_28181;
                                                      statearr_28209[13] = inst_28123;
                                                      statearr_28209[14] = inst_28124;
                                                      statearr_28209[15] = inst_28125;
                                                      statearr_28209[16] = inst_28122;
                                                      return statearr_28209;
                                                    }();
                                                    var statearr_28210_28255 = state_28181__$1;
                                                    statearr_28210_28255[2] = null;
                                                    statearr_28210_28255[1] = 8;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_28182 === 14) {
                                                      var state_28181__$1 = state_28181;
                                                      var statearr_28214_28256 = state_28181__$1;
                                                      statearr_28214_28256[2] = null;
                                                      statearr_28214_28256[1] = 15;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_28182 === 16) {
                                                        var inst_28136 = state_28181[10];
                                                        var inst_28140 = cljs.core.chunk_first.call(null, inst_28136);
                                                        var inst_28141 = cljs.core.chunk_rest.call(null, inst_28136);
                                                        var inst_28142 = cljs.core.count.call(null, inst_28140);
                                                        var inst_28122 = inst_28141;
                                                        var inst_28123 = inst_28140;
                                                        var inst_28124 = inst_28142;
                                                        var inst_28125 = 0;
                                                        var state_28181__$1 = function() {
                                                          var statearr_28215 = state_28181;
                                                          statearr_28215[13] = inst_28123;
                                                          statearr_28215[14] = inst_28124;
                                                          statearr_28215[15] = inst_28125;
                                                          statearr_28215[16] = inst_28122;
                                                          return statearr_28215;
                                                        }();
                                                        var statearr_28216_28257 = state_28181__$1;
                                                        statearr_28216_28257[2] = null;
                                                        statearr_28216_28257[1] = 8;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_28182 === 10) {
                                                          var inst_28123 = state_28181[13];
                                                          var inst_28124 = state_28181[14];
                                                          var inst_28125 = state_28181[15];
                                                          var inst_28122 = state_28181[16];
                                                          var inst_28130 = cljs.core._nth.call(null, inst_28123, inst_28125);
                                                          var inst_28131 = cljs.core.async.muxch_STAR_.call(null, inst_28130);
                                                          var inst_28132 = cljs.core.async.close_BANG_.call(null, inst_28131);
                                                          var inst_28133 = inst_28125 + 1;
                                                          var tmp28211 = inst_28123;
                                                          var tmp28212 = inst_28124;
                                                          var tmp28213 = inst_28122;
                                                          var inst_28122__$1 = tmp28213;
                                                          var inst_28123__$1 = tmp28211;
                                                          var inst_28124__$1 = tmp28212;
                                                          var inst_28125__$1 = inst_28133;
                                                          var state_28181__$1 = function() {
                                                            var statearr_28217 = state_28181;
                                                            statearr_28217[13] = inst_28123__$1;
                                                            statearr_28217[17] = inst_28132;
                                                            statearr_28217[14] = inst_28124__$1;
                                                            statearr_28217[15] = inst_28125__$1;
                                                            statearr_28217[16] = inst_28122__$1;
                                                            return statearr_28217;
                                                          }();
                                                          var statearr_28218_28258 = state_28181__$1;
                                                          statearr_28218_28258[2] = null;
                                                          statearr_28218_28258[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_28182 === 18) {
                                                            var inst_28151 = state_28181[2];
                                                            var state_28181__$1 = state_28181;
                                                            var statearr_28219_28259 = state_28181__$1;
                                                            statearr_28219_28259[2] = inst_28151;
                                                            statearr_28219_28259[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_28182 === 8) {
                                                              var inst_28124 = state_28181[14];
                                                              var inst_28125 = state_28181[15];
                                                              var inst_28127 = inst_28125 < inst_28124;
                                                              var inst_28128 = inst_28127;
                                                              var state_28181__$1 = state_28181;
                                                              if (cljs.core.truth_(inst_28128)) {
                                                                var statearr_28220_28260 = state_28181__$1;
                                                                statearr_28220_28260[1] = 10;
                                                              } else {
                                                                var statearr_28221_28261 = state_28181__$1;
                                                                statearr_28221_28261[1] = 11;
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              return null;
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28233, mults, ensure_mult, p);
        return function(switch__26222__auto__, c__26334__auto___28233, mults, ensure_mult, p) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28225 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28225[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28225[1] = 1;
              return statearr_28225;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28181) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28181);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28226) {
                    if (e28226 instanceof Object) {
                      var ex__26226__auto__ = e28226;
                      var statearr_28227_28262 = state_28181;
                      statearr_28227_28262[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28181);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28226;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28263 = state_28181;
                  state_28181 = G__28263;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28181) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28181);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28233, mults, ensure_mult, p);
      }();
      var state__26336__auto__ = function() {
        var statearr_28228 = f__26335__auto__.call(null);
        statearr_28228[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28233;
        return statearr_28228;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28233, mults, ensure_mult, p));
  return p;
};
cljs.core.async.pub.cljs$lang$maxFixedArity = 3;
cljs.core.async.sub = function cljs$core$async$sub(var_args) {
  var args28264 = [];
  var len__19806__auto___28267 = arguments.length;
  var i__19807__auto___28268 = 0;
  while (true) {
    if (i__19807__auto___28268 < len__19806__auto___28267) {
      args28264.push(arguments[i__19807__auto___28268]);
      var G__28269 = i__19807__auto___28268 + 1;
      i__19807__auto___28268 = G__28269;
      continue;
    } else {
    }
    break;
  }
  var G__28266 = args28264.length;
  switch(G__28266) {
    case 3:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28264.length)].join(""));;
  }
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$3 = function(p, topic, ch) {
  return cljs.core.async.sub.call(null, p, topic, ch, true);
};
cljs.core.async.sub.cljs$core$IFn$_invoke$arity$4 = function(p, topic, ch, close_QMARK_) {
  return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
};
cljs.core.async.sub.cljs$lang$maxFixedArity = 4;
cljs.core.async.unsub = function cljs$core$async$unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function cljs$core$async$unsub_all(var_args) {
  var args28271 = [];
  var len__19806__auto___28274 = arguments.length;
  var i__19807__auto___28275 = 0;
  while (true) {
    if (i__19807__auto___28275 < len__19806__auto___28274) {
      args28271.push(arguments[i__19807__auto___28275]);
      var G__28276 = i__19807__auto___28275 + 1;
      i__19807__auto___28275 = G__28276;
      continue;
    } else {
    }
    break;
  }
  var G__28273 = args28271.length;
  switch(G__28273) {
    case 1:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28271.length)].join(""));;
  }
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return cljs.core.async.unsub_all_STAR_.call(null, p);
};
cljs.core.async.unsub_all.cljs$core$IFn$_invoke$arity$2 = function(p, topic) {
  return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
};
cljs.core.async.unsub_all.cljs$lang$maxFixedArity = 2;
cljs.core.async.map = function cljs$core$async$map(var_args) {
  var args28278 = [];
  var len__19806__auto___28349 = arguments.length;
  var i__19807__auto___28350 = 0;
  while (true) {
    if (i__19807__auto___28350 < len__19806__auto___28349) {
      args28278.push(arguments[i__19807__auto___28350]);
      var G__28351 = i__19807__auto___28350 + 1;
      i__19807__auto___28350 = G__28351;
      continue;
    } else {
    }
    break;
  }
  var G__28280 = args28278.length;
  switch(G__28280) {
    case 2:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28278.length)].join(""));;
  }
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$2 = function(f, chs) {
  return cljs.core.async.map.call(null, f, chs, null);
};
cljs.core.async.map.cljs$core$IFn$_invoke$arity$3 = function(f, chs, buf_or_n) {
  var chs__$1 = cljs.core.vec.call(null, chs);
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var cnt = cljs.core.count.call(null, chs__$1);
  var rets = cljs.core.object_array.call(null, cnt);
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
    return function(i) {
      return function(chs__$1, out, cnt, rets, dchan, dctr) {
        return function(ret) {
          rets[i] = ret;
          if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
            return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
          } else {
            return null;
          }
        };
      }(chs__$1, out, cnt, rets, dchan, dctr);
    };
  }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
  var c__26334__auto___28353 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28353, chs__$1, out, cnt, rets, dchan, dctr, done) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28353, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function(state_28319) {
            var state_val_28320 = state_28319[1];
            if (state_val_28320 === 7) {
              var state_28319__$1 = state_28319;
              var statearr_28321_28354 = state_28319__$1;
              statearr_28321_28354[2] = null;
              statearr_28321_28354[1] = 8;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28320 === 1) {
                var state_28319__$1 = state_28319;
                var statearr_28322_28355 = state_28319__$1;
                statearr_28322_28355[2] = null;
                statearr_28322_28355[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28320 === 4) {
                  var inst_28283 = state_28319[7];
                  var inst_28285 = inst_28283 < cnt;
                  var state_28319__$1 = state_28319;
                  if (cljs.core.truth_(inst_28285)) {
                    var statearr_28323_28356 = state_28319__$1;
                    statearr_28323_28356[1] = 6;
                  } else {
                    var statearr_28324_28357 = state_28319__$1;
                    statearr_28324_28357[1] = 7;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28320 === 15) {
                    var inst_28315 = state_28319[2];
                    var state_28319__$1 = state_28319;
                    var statearr_28325_28358 = state_28319__$1;
                    statearr_28325_28358[2] = inst_28315;
                    statearr_28325_28358[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28320 === 13) {
                      var inst_28308 = cljs.core.async.close_BANG_.call(null, out);
                      var state_28319__$1 = state_28319;
                      var statearr_28326_28359 = state_28319__$1;
                      statearr_28326_28359[2] = inst_28308;
                      statearr_28326_28359[1] = 15;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28320 === 6) {
                        var state_28319__$1 = state_28319;
                        var statearr_28327_28360 = state_28319__$1;
                        statearr_28327_28360[2] = null;
                        statearr_28327_28360[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28320 === 3) {
                          var inst_28317 = state_28319[2];
                          var state_28319__$1 = state_28319;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28319__$1, inst_28317);
                        } else {
                          if (state_val_28320 === 12) {
                            var inst_28305 = state_28319[8];
                            var inst_28305__$1 = state_28319[2];
                            var inst_28306 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_28305__$1);
                            var state_28319__$1 = function() {
                              var statearr_28328 = state_28319;
                              statearr_28328[8] = inst_28305__$1;
                              return statearr_28328;
                            }();
                            if (cljs.core.truth_(inst_28306)) {
                              var statearr_28329_28361 = state_28319__$1;
                              statearr_28329_28361[1] = 13;
                            } else {
                              var statearr_28330_28362 = state_28319__$1;
                              statearr_28330_28362[1] = 14;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28320 === 2) {
                              var inst_28282 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                              var inst_28283 = 0;
                              var state_28319__$1 = function() {
                                var statearr_28331 = state_28319;
                                statearr_28331[7] = inst_28283;
                                statearr_28331[9] = inst_28282;
                                return statearr_28331;
                              }();
                              var statearr_28332_28363 = state_28319__$1;
                              statearr_28332_28363[2] = null;
                              statearr_28332_28363[1] = 4;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28320 === 11) {
                                var inst_28283 = state_28319[7];
                                var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_28319, 10, Object, null, 9);
                                var inst_28292 = chs__$1.call(null, inst_28283);
                                var inst_28293 = done.call(null, inst_28283);
                                var inst_28294 = cljs.core.async.take_BANG_.call(null, inst_28292, inst_28293);
                                var state_28319__$1 = state_28319;
                                var statearr_28333_28364 = state_28319__$1;
                                statearr_28333_28364[2] = inst_28294;
                                cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28319__$1);
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28320 === 9) {
                                  var inst_28283 = state_28319[7];
                                  var inst_28296 = state_28319[2];
                                  var inst_28297 = inst_28283 + 1;
                                  var inst_28283__$1 = inst_28297;
                                  var state_28319__$1 = function() {
                                    var statearr_28334 = state_28319;
                                    statearr_28334[10] = inst_28296;
                                    statearr_28334[7] = inst_28283__$1;
                                    return statearr_28334;
                                  }();
                                  var statearr_28335_28365 = state_28319__$1;
                                  statearr_28335_28365[2] = null;
                                  statearr_28335_28365[1] = 4;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_28320 === 5) {
                                    var inst_28303 = state_28319[2];
                                    var state_28319__$1 = function() {
                                      var statearr_28336 = state_28319;
                                      statearr_28336[11] = inst_28303;
                                      return statearr_28336;
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28319__$1, 12, dchan);
                                  } else {
                                    if (state_val_28320 === 14) {
                                      var inst_28305 = state_28319[8];
                                      var inst_28310 = cljs.core.apply.call(null, f, inst_28305);
                                      var state_28319__$1 = state_28319;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28319__$1, 16, out, inst_28310);
                                    } else {
                                      if (state_val_28320 === 16) {
                                        var inst_28312 = state_28319[2];
                                        var state_28319__$1 = function() {
                                          var statearr_28337 = state_28319;
                                          statearr_28337[12] = inst_28312;
                                          return statearr_28337;
                                        }();
                                        var statearr_28338_28366 = state_28319__$1;
                                        statearr_28338_28366[2] = null;
                                        statearr_28338_28366[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28320 === 10) {
                                          var inst_28287 = state_28319[2];
                                          var inst_28288 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var state_28319__$1 = function() {
                                            var statearr_28339 = state_28319;
                                            statearr_28339[13] = inst_28287;
                                            return statearr_28339;
                                          }();
                                          var statearr_28340_28367 = state_28319__$1;
                                          statearr_28340_28367[2] = inst_28288;
                                          cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28319__$1);
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_28320 === 8) {
                                            var inst_28301 = state_28319[2];
                                            var state_28319__$1 = state_28319;
                                            var statearr_28341_28368 = state_28319__$1;
                                            statearr_28341_28368[2] = inst_28301;
                                            statearr_28341_28368[1] = 5;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28353, chs__$1, out, cnt, rets, dchan, dctr, done);
        return function(switch__26222__auto__, c__26334__auto___28353, chs__$1, out, cnt, rets, dchan, dctr, done) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28345 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28345[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28345[1] = 1;
              return statearr_28345;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28319) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28319);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28346) {
                    if (e28346 instanceof Object) {
                      var ex__26226__auto__ = e28346;
                      var statearr_28347_28369 = state_28319;
                      statearr_28347_28369[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28319);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28346;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28370 = state_28319;
                  state_28319 = G__28370;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28319) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28319);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28353, chs__$1, out, cnt, rets, dchan, dctr, done);
      }();
      var state__26336__auto__ = function() {
        var statearr_28348 = f__26335__auto__.call(null);
        statearr_28348[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28353;
        return statearr_28348;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28353, chs__$1, out, cnt, rets, dchan, dctr, done));
  return out;
};
cljs.core.async.map.cljs$lang$maxFixedArity = 3;
cljs.core.async.merge = function cljs$core$async$merge(var_args) {
  var args28372 = [];
  var len__19806__auto___28428 = arguments.length;
  var i__19807__auto___28429 = 0;
  while (true) {
    if (i__19807__auto___28429 < len__19806__auto___28428) {
      args28372.push(arguments[i__19807__auto___28429]);
      var G__28430 = i__19807__auto___28429 + 1;
      i__19807__auto___28429 = G__28430;
      continue;
    } else {
    }
    break;
  }
  var G__28374 = args28372.length;
  switch(G__28374) {
    case 1:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28372.length)].join(""));;
  }
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$1 = function(chs) {
  return cljs.core.async.merge.call(null, chs, null);
};
cljs.core.async.merge.cljs$core$IFn$_invoke$arity$2 = function(chs, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26334__auto___28432 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28432, out) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28432, out) {
          return function(state_28404) {
            var state_val_28405 = state_28404[1];
            if (state_val_28405 === 7) {
              var inst_28384 = state_28404[7];
              var inst_28383 = state_28404[8];
              var inst_28383__$1 = state_28404[2];
              var inst_28384__$1 = cljs.core.nth.call(null, inst_28383__$1, 0, null);
              var inst_28385 = cljs.core.nth.call(null, inst_28383__$1, 1, null);
              var inst_28386 = inst_28384__$1 == null;
              var state_28404__$1 = function() {
                var statearr_28406 = state_28404;
                statearr_28406[9] = inst_28385;
                statearr_28406[7] = inst_28384__$1;
                statearr_28406[8] = inst_28383__$1;
                return statearr_28406;
              }();
              if (cljs.core.truth_(inst_28386)) {
                var statearr_28407_28433 = state_28404__$1;
                statearr_28407_28433[1] = 8;
              } else {
                var statearr_28408_28434 = state_28404__$1;
                statearr_28408_28434[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28405 === 1) {
                var inst_28375 = cljs.core.vec.call(null, chs);
                var inst_28376 = inst_28375;
                var state_28404__$1 = function() {
                  var statearr_28409 = state_28404;
                  statearr_28409[10] = inst_28376;
                  return statearr_28409;
                }();
                var statearr_28410_28435 = state_28404__$1;
                statearr_28410_28435[2] = null;
                statearr_28410_28435[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28405 === 4) {
                  var inst_28376 = state_28404[10];
                  var state_28404__$1 = state_28404;
                  return cljs.core.async.ioc_alts_BANG_.call(null, state_28404__$1, 7, inst_28376);
                } else {
                  if (state_val_28405 === 6) {
                    var inst_28400 = state_28404[2];
                    var state_28404__$1 = state_28404;
                    var statearr_28411_28436 = state_28404__$1;
                    statearr_28411_28436[2] = inst_28400;
                    statearr_28411_28436[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28405 === 3) {
                      var inst_28402 = state_28404[2];
                      var state_28404__$1 = state_28404;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28404__$1, inst_28402);
                    } else {
                      if (state_val_28405 === 2) {
                        var inst_28376 = state_28404[10];
                        var inst_28378 = cljs.core.count.call(null, inst_28376);
                        var inst_28379 = inst_28378 > 0;
                        var state_28404__$1 = state_28404;
                        if (cljs.core.truth_(inst_28379)) {
                          var statearr_28413_28437 = state_28404__$1;
                          statearr_28413_28437[1] = 4;
                        } else {
                          var statearr_28414_28438 = state_28404__$1;
                          statearr_28414_28438[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28405 === 11) {
                          var inst_28376 = state_28404[10];
                          var inst_28393 = state_28404[2];
                          var tmp28412 = inst_28376;
                          var inst_28376__$1 = tmp28412;
                          var state_28404__$1 = function() {
                            var statearr_28415 = state_28404;
                            statearr_28415[10] = inst_28376__$1;
                            statearr_28415[11] = inst_28393;
                            return statearr_28415;
                          }();
                          var statearr_28416_28439 = state_28404__$1;
                          statearr_28416_28439[2] = null;
                          statearr_28416_28439[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28405 === 9) {
                            var inst_28384 = state_28404[7];
                            var state_28404__$1 = state_28404;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28404__$1, 11, out, inst_28384);
                          } else {
                            if (state_val_28405 === 5) {
                              var inst_28398 = cljs.core.async.close_BANG_.call(null, out);
                              var state_28404__$1 = state_28404;
                              var statearr_28417_28440 = state_28404__$1;
                              statearr_28417_28440[2] = inst_28398;
                              statearr_28417_28440[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28405 === 10) {
                                var inst_28396 = state_28404[2];
                                var state_28404__$1 = state_28404;
                                var statearr_28418_28441 = state_28404__$1;
                                statearr_28418_28441[2] = inst_28396;
                                statearr_28418_28441[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28405 === 8) {
                                  var inst_28385 = state_28404[9];
                                  var inst_28384 = state_28404[7];
                                  var inst_28383 = state_28404[8];
                                  var inst_28376 = state_28404[10];
                                  var inst_28388 = function() {
                                    var cs = inst_28376;
                                    var vec__28381 = inst_28383;
                                    var v = inst_28384;
                                    var c = inst_28385;
                                    return function(cs, vec__28381, v, c, inst_28385, inst_28384, inst_28383, inst_28376, state_val_28405, c__26334__auto___28432, out) {
                                      return function(p1__28371_SHARP_) {
                                        return cljs.core.not_EQ_.call(null, c, p1__28371_SHARP_);
                                      };
                                    }(cs, vec__28381, v, c, inst_28385, inst_28384, inst_28383, inst_28376, state_val_28405, c__26334__auto___28432, out);
                                  }();
                                  var inst_28389 = cljs.core.filterv.call(null, inst_28388, inst_28376);
                                  var inst_28376__$1 = inst_28389;
                                  var state_28404__$1 = function() {
                                    var statearr_28419 = state_28404;
                                    statearr_28419[10] = inst_28376__$1;
                                    return statearr_28419;
                                  }();
                                  var statearr_28420_28442 = state_28404__$1;
                                  statearr_28420_28442[2] = null;
                                  statearr_28420_28442[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28432, out);
        return function(switch__26222__auto__, c__26334__auto___28432, out) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28424 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28424[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28424[1] = 1;
              return statearr_28424;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28404) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28404);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28425) {
                    if (e28425 instanceof Object) {
                      var ex__26226__auto__ = e28425;
                      var statearr_28426_28443 = state_28404;
                      statearr_28426_28443[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28404);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28425;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28444 = state_28404;
                  state_28404 = G__28444;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28404) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28404);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28432, out);
      }();
      var state__26336__auto__ = function() {
        var statearr_28427 = f__26335__auto__.call(null);
        statearr_28427[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28432;
        return statearr_28427;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28432, out));
  return out;
};
cljs.core.async.merge.cljs$lang$maxFixedArity = 2;
cljs.core.async.into = function cljs$core$async$into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function cljs$core$async$take(var_args) {
  var args28445 = [];
  var len__19806__auto___28494 = arguments.length;
  var i__19807__auto___28495 = 0;
  while (true) {
    if (i__19807__auto___28495 < len__19806__auto___28494) {
      args28445.push(arguments[i__19807__auto___28495]);
      var G__28496 = i__19807__auto___28495 + 1;
      i__19807__auto___28495 = G__28496;
      continue;
    } else {
    }
    break;
  }
  var G__28447 = args28445.length;
  switch(G__28447) {
    case 2:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.take.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28445.length)].join(""));;
  }
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.take.call(null, n, ch, null);
};
cljs.core.async.take.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26334__auto___28498 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28498, out) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28498, out) {
          return function(state_28471) {
            var state_val_28472 = state_28471[1];
            if (state_val_28472 === 7) {
              var inst_28453 = state_28471[7];
              var inst_28453__$1 = state_28471[2];
              var inst_28454 = inst_28453__$1 == null;
              var inst_28455 = cljs.core.not.call(null, inst_28454);
              var state_28471__$1 = function() {
                var statearr_28473 = state_28471;
                statearr_28473[7] = inst_28453__$1;
                return statearr_28473;
              }();
              if (inst_28455) {
                var statearr_28474_28499 = state_28471__$1;
                statearr_28474_28499[1] = 8;
              } else {
                var statearr_28475_28500 = state_28471__$1;
                statearr_28475_28500[1] = 9;
              }
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28472 === 1) {
                var inst_28448 = 0;
                var state_28471__$1 = function() {
                  var statearr_28476 = state_28471;
                  statearr_28476[8] = inst_28448;
                  return statearr_28476;
                }();
                var statearr_28477_28501 = state_28471__$1;
                statearr_28477_28501[2] = null;
                statearr_28477_28501[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28472 === 4) {
                  var state_28471__$1 = state_28471;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28471__$1, 7, ch);
                } else {
                  if (state_val_28472 === 6) {
                    var inst_28466 = state_28471[2];
                    var state_28471__$1 = state_28471;
                    var statearr_28478_28502 = state_28471__$1;
                    statearr_28478_28502[2] = inst_28466;
                    statearr_28478_28502[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28472 === 3) {
                      var inst_28468 = state_28471[2];
                      var inst_28469 = cljs.core.async.close_BANG_.call(null, out);
                      var state_28471__$1 = function() {
                        var statearr_28479 = state_28471;
                        statearr_28479[9] = inst_28468;
                        return statearr_28479;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28471__$1, inst_28469);
                    } else {
                      if (state_val_28472 === 2) {
                        var inst_28448 = state_28471[8];
                        var inst_28450 = inst_28448 < n;
                        var state_28471__$1 = state_28471;
                        if (cljs.core.truth_(inst_28450)) {
                          var statearr_28480_28503 = state_28471__$1;
                          statearr_28480_28503[1] = 4;
                        } else {
                          var statearr_28481_28504 = state_28471__$1;
                          statearr_28481_28504[1] = 5;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28472 === 11) {
                          var inst_28448 = state_28471[8];
                          var inst_28458 = state_28471[2];
                          var inst_28459 = inst_28448 + 1;
                          var inst_28448__$1 = inst_28459;
                          var state_28471__$1 = function() {
                            var statearr_28482 = state_28471;
                            statearr_28482[8] = inst_28448__$1;
                            statearr_28482[10] = inst_28458;
                            return statearr_28482;
                          }();
                          var statearr_28483_28505 = state_28471__$1;
                          statearr_28483_28505[2] = null;
                          statearr_28483_28505[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28472 === 9) {
                            var state_28471__$1 = state_28471;
                            var statearr_28484_28506 = state_28471__$1;
                            statearr_28484_28506[2] = null;
                            statearr_28484_28506[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28472 === 5) {
                              var state_28471__$1 = state_28471;
                              var statearr_28485_28507 = state_28471__$1;
                              statearr_28485_28507[2] = null;
                              statearr_28485_28507[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28472 === 10) {
                                var inst_28463 = state_28471[2];
                                var state_28471__$1 = state_28471;
                                var statearr_28486_28508 = state_28471__$1;
                                statearr_28486_28508[2] = inst_28463;
                                statearr_28486_28508[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28472 === 8) {
                                  var inst_28453 = state_28471[7];
                                  var state_28471__$1 = state_28471;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28471__$1, 11, out, inst_28453);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28498, out);
        return function(switch__26222__auto__, c__26334__auto___28498, out) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28490 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_28490[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28490[1] = 1;
              return statearr_28490;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28471) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28471);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28491) {
                    if (e28491 instanceof Object) {
                      var ex__26226__auto__ = e28491;
                      var statearr_28492_28509 = state_28471;
                      statearr_28492_28509[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28471);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28491;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28510 = state_28471;
                  state_28471 = G__28510;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28471) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28471);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28498, out);
      }();
      var state__26336__auto__ = function() {
        var statearr_28493 = f__26335__auto__.call(null);
        statearr_28493[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28498;
        return statearr_28493;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28498, out));
  return out;
};
cljs.core.async.take.cljs$lang$maxFixedArity = 3;
cljs.core.async.map_LT_ = function cljs$core$async$map_LT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async28518 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async28518 = function(map_LT_, f, ch, meta28519) {
      this.map_LT_ = map_LT_;
      this.f = f;
      this.ch = ch;
      this.meta28519 = meta28519;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28520, meta28519__$1) {
      var self__ = this;
      var _28520__$1 = this;
      return new cljs.core.async.t_cljs$core$async28518(self__.map_LT_, self__.f, self__.ch, meta28519__$1);
    };
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28520) {
      var self__ = this;
      var _28520__$1 = this;
      return self__.meta28519;
    };
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t_cljs$core$async28521 !== "undefined") {
        } else {
          cljs.core.async.t_cljs$core$async28521 = function(map_LT_, f, ch, meta28519, _, fn1, meta28522) {
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta28519 = meta28519;
            this._ = _;
            this.fn1 = fn1;
            this.meta28522 = meta28522;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
            this.cljs$lang$protocol_mask$partition1$ = 0;
          };
          cljs.core.async.t_cljs$core$async28521.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_28523, meta28522__$1) {
              var self__ = this;
              var _28523__$1 = this;
              return new cljs.core.async.t_cljs$core$async28521(self__.map_LT_, self__.f, self__.ch, self__.meta28519, self__._, self__.fn1, meta28522__$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28521.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_28523) {
              var self__ = this;
              var _28523__$1 = this;
              return self__.meta28522;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28521.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t_cljs$core$async28521.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28521.prototype.cljs$core$async$impl$protocols$Handler$blockable_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return true;
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28521.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__28511_SHARP_) {
                  return f1.call(null, p1__28511_SHARP_ == null ? null : self__.f.call(null, p1__28511_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28521.getBasis = function(___$1) {
            return function() {
              return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
              "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28519", "meta28519", 1568721855, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_", "_", -1201019570, null), 
              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol("cljs.core.async", "t_cljs$core$async28518", "cljs.core.async/t_cljs$core$async28518", -553272926, null)], null)), new cljs.core.Symbol(null, "fn1", "fn1", 895834444, null), new cljs.core.Symbol(null, "meta28522", "meta28522", -74709071, null)], null);
            };
          }(___$1);
          cljs.core.async.t_cljs$core$async28521.cljs$lang$type = true;
          cljs.core.async.t_cljs$core$async28521.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28521";
          cljs.core.async.t_cljs$core$async28521.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
              return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async28521");
            };
          }(___$1);
          cljs.core.async.__GT_t_cljs$core$async28521 = function(___$1) {
            return function cljs$core$async$map_LT__$___GT_t_cljs$core$async28521(map_LT___$1, f__$1, ch__$1, meta28519__$1, ___$2, fn1__$1, meta28522) {
              return new cljs.core.async.t_cljs$core$async28521(map_LT___$1, f__$1, ch__$1, meta28519__$1, ___$2, fn1__$1, meta28522);
            };
          }(___$1);
        }
        return new cljs.core.async.t_cljs$core$async28521(self__.map_LT_, self__.f, self__.ch, self__.meta28519, ___$1, fn1, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__18724__auto__ = ret;
        if (cljs.core.truth_(and__18724__auto__)) {
          return !(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__18724__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async28518.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t_cljs$core$async28518.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3c", "map\x3c", -1235808357, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28519", "meta28519", 1568721855, null)], null);
    };
    cljs.core.async.t_cljs$core$async28518.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async28518.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28518";
    cljs.core.async.t_cljs$core$async28518.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async28518");
    };
    cljs.core.async.__GT_t_cljs$core$async28518 = function cljs$core$async$map_LT__$___GT_t_cljs$core$async28518(map_LT___$1, f__$1, ch__$1, meta28519) {
      return new cljs.core.async.t_cljs$core$async28518(map_LT___$1, f__$1, ch__$1, meta28519);
    };
  }
  return new cljs.core.async.t_cljs$core$async28518(cljs$core$async$map_LT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function cljs$core$async$map_GT_(f, ch) {
  if (typeof cljs.core.async.t_cljs$core$async28527 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async28527 = function(map_GT_, f, ch, meta28528) {
      this.map_GT_ = map_GT_;
      this.f = f;
      this.ch = ch;
      this.meta28528 = meta28528;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28529, meta28528__$1) {
      var self__ = this;
      var _28529__$1 = this;
      return new cljs.core.async.t_cljs$core$async28527(self__.map_GT_, self__.f, self__.ch, meta28528__$1);
    };
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28529) {
      var self__ = this;
      var _28529__$1 = this;
      return self__.meta28528;
    };
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async28527.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t_cljs$core$async28527.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "map\x3e", "map\x3e", 1676369295, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", 
      "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28528", "meta28528", 339689756, null)], null);
    };
    cljs.core.async.t_cljs$core$async28527.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async28527.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28527";
    cljs.core.async.t_cljs$core$async28527.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async28527");
    };
    cljs.core.async.__GT_t_cljs$core$async28527 = function cljs$core$async$map_GT__$___GT_t_cljs$core$async28527(map_GT___$1, f__$1, ch__$1, meta28528) {
      return new cljs.core.async.t_cljs$core$async28527(map_GT___$1, f__$1, ch__$1, meta28528);
    };
  }
  return new cljs.core.async.t_cljs$core$async28527(cljs$core$async$map_GT_, f, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function cljs$core$async$filter_GT_(p, ch) {
  if (typeof cljs.core.async.t_cljs$core$async28533 !== "undefined") {
  } else {
    cljs.core.async.t_cljs$core$async28533 = function(filter_GT_, p, ch, meta28534) {
      this.filter_GT_ = filter_GT_;
      this.p = p;
      this.ch = ch;
      this.meta28534 = meta28534;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_28535, meta28534__$1) {
      var self__ = this;
      var _28535__$1 = this;
      return new cljs.core.async.t_cljs$core$async28533(self__.filter_GT_, self__.p, self__.ch, meta28534__$1);
    };
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$IMeta$_meta$arity$1 = function(_28535) {
      var self__ = this;
      var _28535__$1 = this;
      return self__.meta28534;
    };
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t_cljs$core$async28533.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t_cljs$core$async28533.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "filter\x3e", "filter\x3e", -37644455, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Deprecated - this function will be removed. Use transducer instead"], null)), new cljs.core.Symbol(null, "p", "p", 1791580836, null), new cljs.core.Symbol(null, "ch", "ch", 1085813622, null), new cljs.core.Symbol(null, "meta28534", "meta28534", 1710680266, null)], null);
    };
    cljs.core.async.t_cljs$core$async28533.cljs$lang$type = true;
    cljs.core.async.t_cljs$core$async28533.cljs$lang$ctorStr = "cljs.core.async/t_cljs$core$async28533";
    cljs.core.async.t_cljs$core$async28533.cljs$lang$ctorPrWriter = function(this__19342__auto__, writer__19343__auto__, opt__19344__auto__) {
      return cljs.core._write.call(null, writer__19343__auto__, "cljs.core.async/t_cljs$core$async28533");
    };
    cljs.core.async.__GT_t_cljs$core$async28533 = function cljs$core$async$filter_GT__$___GT_t_cljs$core$async28533(filter_GT___$1, p__$1, ch__$1, meta28534) {
      return new cljs.core.async.t_cljs$core$async28533(filter_GT___$1, p__$1, ch__$1, meta28534);
    };
  }
  return new cljs.core.async.t_cljs$core$async28533(cljs$core$async$filter_GT_, p, ch, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function cljs$core$async$remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function cljs$core$async$filter_LT_(var_args) {
  var args28536 = [];
  var len__19806__auto___28580 = arguments.length;
  var i__19807__auto___28581 = 0;
  while (true) {
    if (i__19807__auto___28581 < len__19806__auto___28580) {
      args28536.push(arguments[i__19807__auto___28581]);
      var G__28582 = i__19807__auto___28581 + 1;
      i__19807__auto___28581 = G__28582;
      continue;
    } else {
    }
    break;
  }
  var G__28538 = args28536.length;
  switch(G__28538) {
    case 2:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28536.length)].join(""));;
  }
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.filter_LT_.call(null, p, ch, null);
};
cljs.core.async.filter_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26334__auto___28584 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28584, out) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28584, out) {
          return function(state_28559) {
            var state_val_28560 = state_28559[1];
            if (state_val_28560 === 7) {
              var inst_28555 = state_28559[2];
              var state_28559__$1 = state_28559;
              var statearr_28561_28585 = state_28559__$1;
              statearr_28561_28585[2] = inst_28555;
              statearr_28561_28585[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28560 === 1) {
                var state_28559__$1 = state_28559;
                var statearr_28562_28586 = state_28559__$1;
                statearr_28562_28586[2] = null;
                statearr_28562_28586[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28560 === 4) {
                  var inst_28541 = state_28559[7];
                  var inst_28541__$1 = state_28559[2];
                  var inst_28542 = inst_28541__$1 == null;
                  var state_28559__$1 = function() {
                    var statearr_28563 = state_28559;
                    statearr_28563[7] = inst_28541__$1;
                    return statearr_28563;
                  }();
                  if (cljs.core.truth_(inst_28542)) {
                    var statearr_28564_28587 = state_28559__$1;
                    statearr_28564_28587[1] = 5;
                  } else {
                    var statearr_28565_28588 = state_28559__$1;
                    statearr_28565_28588[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28560 === 6) {
                    var inst_28541 = state_28559[7];
                    var inst_28546 = p.call(null, inst_28541);
                    var state_28559__$1 = state_28559;
                    if (cljs.core.truth_(inst_28546)) {
                      var statearr_28566_28589 = state_28559__$1;
                      statearr_28566_28589[1] = 8;
                    } else {
                      var statearr_28567_28590 = state_28559__$1;
                      statearr_28567_28590[1] = 9;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28560 === 3) {
                      var inst_28557 = state_28559[2];
                      var state_28559__$1 = state_28559;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28559__$1, inst_28557);
                    } else {
                      if (state_val_28560 === 2) {
                        var state_28559__$1 = state_28559;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28559__$1, 4, ch);
                      } else {
                        if (state_val_28560 === 11) {
                          var inst_28549 = state_28559[2];
                          var state_28559__$1 = state_28559;
                          var statearr_28568_28591 = state_28559__$1;
                          statearr_28568_28591[2] = inst_28549;
                          statearr_28568_28591[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28560 === 9) {
                            var state_28559__$1 = state_28559;
                            var statearr_28569_28592 = state_28559__$1;
                            statearr_28569_28592[2] = null;
                            statearr_28569_28592[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28560 === 5) {
                              var inst_28544 = cljs.core.async.close_BANG_.call(null, out);
                              var state_28559__$1 = state_28559;
                              var statearr_28570_28593 = state_28559__$1;
                              statearr_28570_28593[2] = inst_28544;
                              statearr_28570_28593[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28560 === 10) {
                                var inst_28552 = state_28559[2];
                                var state_28559__$1 = function() {
                                  var statearr_28571 = state_28559;
                                  statearr_28571[8] = inst_28552;
                                  return statearr_28571;
                                }();
                                var statearr_28572_28594 = state_28559__$1;
                                statearr_28572_28594[2] = null;
                                statearr_28572_28594[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28560 === 8) {
                                  var inst_28541 = state_28559[7];
                                  var state_28559__$1 = state_28559;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28559__$1, 11, out, inst_28541);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28584, out);
        return function(switch__26222__auto__, c__26334__auto___28584, out) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28576 = [null, null, null, null, null, null, null, null, null];
              statearr_28576[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28576[1] = 1;
              return statearr_28576;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28559) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28559);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28577) {
                    if (e28577 instanceof Object) {
                      var ex__26226__auto__ = e28577;
                      var statearr_28578_28595 = state_28559;
                      statearr_28578_28595[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28559);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28577;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28596 = state_28559;
                  state_28559 = G__28596;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28559) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28559);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28584, out);
      }();
      var state__26336__auto__ = function() {
        var statearr_28579 = f__26335__auto__.call(null);
        statearr_28579[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28584;
        return statearr_28579;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28584, out));
  return out;
};
cljs.core.async.filter_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.remove_LT_ = function cljs$core$async$remove_LT_(var_args) {
  var args28597 = [];
  var len__19806__auto___28600 = arguments.length;
  var i__19807__auto___28601 = 0;
  while (true) {
    if (i__19807__auto___28601 < len__19806__auto___28600) {
      args28597.push(arguments[i__19807__auto___28601]);
      var G__28602 = i__19807__auto___28601 + 1;
      i__19807__auto___28601 = G__28602;
      continue;
    } else {
    }
    break;
  }
  var G__28599 = args28597.length;
  switch(G__28599) {
    case 2:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28597.length)].join(""));;
  }
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$2 = function(p, ch) {
  return cljs.core.async.remove_LT_.call(null, p, ch, null);
};
cljs.core.async.remove_LT_.cljs$core$IFn$_invoke$arity$3 = function(p, ch, buf_or_n) {
  return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
};
cljs.core.async.remove_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_STAR_ = function cljs$core$async$mapcat_STAR_(f, in$, out) {
  var c__26334__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto__) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto__) {
          return function(state_28769) {
            var state_val_28770 = state_28769[1];
            if (state_val_28770 === 7) {
              var inst_28765 = state_28769[2];
              var state_28769__$1 = state_28769;
              var statearr_28771_28812 = state_28769__$1;
              statearr_28771_28812[2] = inst_28765;
              statearr_28771_28812[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28770 === 20) {
                var inst_28735 = state_28769[7];
                var inst_28746 = state_28769[2];
                var inst_28747 = cljs.core.next.call(null, inst_28735);
                var inst_28721 = inst_28747;
                var inst_28722 = null;
                var inst_28723 = 0;
                var inst_28724 = 0;
                var state_28769__$1 = function() {
                  var statearr_28772 = state_28769;
                  statearr_28772[8] = inst_28723;
                  statearr_28772[9] = inst_28721;
                  statearr_28772[10] = inst_28724;
                  statearr_28772[11] = inst_28722;
                  statearr_28772[12] = inst_28746;
                  return statearr_28772;
                }();
                var statearr_28773_28813 = state_28769__$1;
                statearr_28773_28813[2] = null;
                statearr_28773_28813[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28770 === 1) {
                  var state_28769__$1 = state_28769;
                  var statearr_28774_28814 = state_28769__$1;
                  statearr_28774_28814[2] = null;
                  statearr_28774_28814[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28770 === 4) {
                    var inst_28710 = state_28769[13];
                    var inst_28710__$1 = state_28769[2];
                    var inst_28711 = inst_28710__$1 == null;
                    var state_28769__$1 = function() {
                      var statearr_28775 = state_28769;
                      statearr_28775[13] = inst_28710__$1;
                      return statearr_28775;
                    }();
                    if (cljs.core.truth_(inst_28711)) {
                      var statearr_28776_28815 = state_28769__$1;
                      statearr_28776_28815[1] = 5;
                    } else {
                      var statearr_28777_28816 = state_28769__$1;
                      statearr_28777_28816[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28770 === 15) {
                      var state_28769__$1 = state_28769;
                      var statearr_28781_28817 = state_28769__$1;
                      statearr_28781_28817[2] = null;
                      statearr_28781_28817[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28770 === 21) {
                        var state_28769__$1 = state_28769;
                        var statearr_28782_28818 = state_28769__$1;
                        statearr_28782_28818[2] = null;
                        statearr_28782_28818[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28770 === 13) {
                          var inst_28723 = state_28769[8];
                          var inst_28721 = state_28769[9];
                          var inst_28724 = state_28769[10];
                          var inst_28722 = state_28769[11];
                          var inst_28731 = state_28769[2];
                          var inst_28732 = inst_28724 + 1;
                          var tmp28778 = inst_28723;
                          var tmp28779 = inst_28721;
                          var tmp28780 = inst_28722;
                          var inst_28721__$1 = tmp28779;
                          var inst_28722__$1 = tmp28780;
                          var inst_28723__$1 = tmp28778;
                          var inst_28724__$1 = inst_28732;
                          var state_28769__$1 = function() {
                            var statearr_28783 = state_28769;
                            statearr_28783[8] = inst_28723__$1;
                            statearr_28783[9] = inst_28721__$1;
                            statearr_28783[10] = inst_28724__$1;
                            statearr_28783[14] = inst_28731;
                            statearr_28783[11] = inst_28722__$1;
                            return statearr_28783;
                          }();
                          var statearr_28784_28819 = state_28769__$1;
                          statearr_28784_28819[2] = null;
                          statearr_28784_28819[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28770 === 22) {
                            var state_28769__$1 = state_28769;
                            var statearr_28785_28820 = state_28769__$1;
                            statearr_28785_28820[2] = null;
                            statearr_28785_28820[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_28770 === 6) {
                              var inst_28710 = state_28769[13];
                              var inst_28719 = f.call(null, inst_28710);
                              var inst_28720 = cljs.core.seq.call(null, inst_28719);
                              var inst_28721 = inst_28720;
                              var inst_28722 = null;
                              var inst_28723 = 0;
                              var inst_28724 = 0;
                              var state_28769__$1 = function() {
                                var statearr_28786 = state_28769;
                                statearr_28786[8] = inst_28723;
                                statearr_28786[9] = inst_28721;
                                statearr_28786[10] = inst_28724;
                                statearr_28786[11] = inst_28722;
                                return statearr_28786;
                              }();
                              var statearr_28787_28821 = state_28769__$1;
                              statearr_28787_28821[2] = null;
                              statearr_28787_28821[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28770 === 17) {
                                var inst_28735 = state_28769[7];
                                var inst_28739 = cljs.core.chunk_first.call(null, inst_28735);
                                var inst_28740 = cljs.core.chunk_rest.call(null, inst_28735);
                                var inst_28741 = cljs.core.count.call(null, inst_28739);
                                var inst_28721 = inst_28740;
                                var inst_28722 = inst_28739;
                                var inst_28723 = inst_28741;
                                var inst_28724 = 0;
                                var state_28769__$1 = function() {
                                  var statearr_28788 = state_28769;
                                  statearr_28788[8] = inst_28723;
                                  statearr_28788[9] = inst_28721;
                                  statearr_28788[10] = inst_28724;
                                  statearr_28788[11] = inst_28722;
                                  return statearr_28788;
                                }();
                                var statearr_28789_28822 = state_28769__$1;
                                statearr_28789_28822[2] = null;
                                statearr_28789_28822[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28770 === 3) {
                                  var inst_28767 = state_28769[2];
                                  var state_28769__$1 = state_28769;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28769__$1, inst_28767);
                                } else {
                                  if (state_val_28770 === 12) {
                                    var inst_28755 = state_28769[2];
                                    var state_28769__$1 = state_28769;
                                    var statearr_28790_28823 = state_28769__$1;
                                    statearr_28790_28823[2] = inst_28755;
                                    statearr_28790_28823[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_28770 === 2) {
                                      var state_28769__$1 = state_28769;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28769__$1, 4, in$);
                                    } else {
                                      if (state_val_28770 === 23) {
                                        var inst_28763 = state_28769[2];
                                        var state_28769__$1 = state_28769;
                                        var statearr_28791_28824 = state_28769__$1;
                                        statearr_28791_28824[2] = inst_28763;
                                        statearr_28791_28824[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28770 === 19) {
                                          var inst_28750 = state_28769[2];
                                          var state_28769__$1 = state_28769;
                                          var statearr_28792_28825 = state_28769__$1;
                                          statearr_28792_28825[2] = inst_28750;
                                          statearr_28792_28825[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_28770 === 11) {
                                            var inst_28721 = state_28769[9];
                                            var inst_28735 = state_28769[7];
                                            var inst_28735__$1 = cljs.core.seq.call(null, inst_28721);
                                            var state_28769__$1 = function() {
                                              var statearr_28793 = state_28769;
                                              statearr_28793[7] = inst_28735__$1;
                                              return statearr_28793;
                                            }();
                                            if (inst_28735__$1) {
                                              var statearr_28794_28826 = state_28769__$1;
                                              statearr_28794_28826[1] = 14;
                                            } else {
                                              var statearr_28795_28827 = state_28769__$1;
                                              statearr_28795_28827[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_28770 === 9) {
                                              var inst_28757 = state_28769[2];
                                              var inst_28758 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_28769__$1 = function() {
                                                var statearr_28796 = state_28769;
                                                statearr_28796[15] = inst_28757;
                                                return statearr_28796;
                                              }();
                                              if (cljs.core.truth_(inst_28758)) {
                                                var statearr_28797_28828 = state_28769__$1;
                                                statearr_28797_28828[1] = 21;
                                              } else {
                                                var statearr_28798_28829 = state_28769__$1;
                                                statearr_28798_28829[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_28770 === 5) {
                                                var inst_28713 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_28769__$1 = state_28769;
                                                var statearr_28799_28830 = state_28769__$1;
                                                statearr_28799_28830[2] = inst_28713;
                                                statearr_28799_28830[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_28770 === 14) {
                                                  var inst_28735 = state_28769[7];
                                                  var inst_28737 = cljs.core.chunked_seq_QMARK_.call(null, inst_28735);
                                                  var state_28769__$1 = state_28769;
                                                  if (inst_28737) {
                                                    var statearr_28800_28831 = state_28769__$1;
                                                    statearr_28800_28831[1] = 17;
                                                  } else {
                                                    var statearr_28801_28832 = state_28769__$1;
                                                    statearr_28801_28832[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_28770 === 16) {
                                                    var inst_28753 = state_28769[2];
                                                    var state_28769__$1 = state_28769;
                                                    var statearr_28802_28833 = state_28769__$1;
                                                    statearr_28802_28833[2] = inst_28753;
                                                    statearr_28802_28833[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_28770 === 10) {
                                                      var inst_28724 = state_28769[10];
                                                      var inst_28722 = state_28769[11];
                                                      var inst_28729 = cljs.core._nth.call(null, inst_28722, inst_28724);
                                                      var state_28769__$1 = state_28769;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28769__$1, 13, out, inst_28729);
                                                    } else {
                                                      if (state_val_28770 === 18) {
                                                        var inst_28735 = state_28769[7];
                                                        var inst_28744 = cljs.core.first.call(null, inst_28735);
                                                        var state_28769__$1 = state_28769;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28769__$1, 20, out, inst_28744);
                                                      } else {
                                                        if (state_val_28770 === 8) {
                                                          var inst_28723 = state_28769[8];
                                                          var inst_28724 = state_28769[10];
                                                          var inst_28726 = inst_28724 < inst_28723;
                                                          var inst_28727 = inst_28726;
                                                          var state_28769__$1 = state_28769;
                                                          if (cljs.core.truth_(inst_28727)) {
                                                            var statearr_28803_28834 = state_28769__$1;
                                                            statearr_28803_28834[1] = 10;
                                                          } else {
                                                            var statearr_28804_28835 = state_28769__$1;
                                                            statearr_28804_28835[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto__);
        return function(switch__26222__auto__, c__26334__auto__) {
          return function() {
            var cljs$core$async$mapcat_STAR__$_state_machine__26223__auto__ = null;
            var cljs$core$async$mapcat_STAR__$_state_machine__26223__auto____0 = function() {
              var statearr_28808 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28808[0] = cljs$core$async$mapcat_STAR__$_state_machine__26223__auto__;
              statearr_28808[1] = 1;
              return statearr_28808;
            };
            var cljs$core$async$mapcat_STAR__$_state_machine__26223__auto____1 = function(state_28769) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28769);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28809) {
                    if (e28809 instanceof Object) {
                      var ex__26226__auto__ = e28809;
                      var statearr_28810_28836 = state_28769;
                      statearr_28810_28836[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28769);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28809;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28837 = state_28769;
                  state_28769 = G__28837;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$mapcat_STAR__$_state_machine__26223__auto__ = function(state_28769) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$mapcat_STAR__$_state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$mapcat_STAR__$_state_machine__26223__auto____1.call(this, state_28769);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$mapcat_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$mapcat_STAR__$_state_machine__26223__auto____0;
            cljs$core$async$mapcat_STAR__$_state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$mapcat_STAR__$_state_machine__26223__auto____1;
            return cljs$core$async$mapcat_STAR__$_state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto__);
      }();
      var state__26336__auto__ = function() {
        var statearr_28811 = f__26335__auto__.call(null);
        statearr_28811[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto__;
        return statearr_28811;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto__));
  return c__26334__auto__;
};
cljs.core.async.mapcat_LT_ = function cljs$core$async$mapcat_LT_(var_args) {
  var args28838 = [];
  var len__19806__auto___28841 = arguments.length;
  var i__19807__auto___28842 = 0;
  while (true) {
    if (i__19807__auto___28842 < len__19806__auto___28841) {
      args28838.push(arguments[i__19807__auto___28842]);
      var G__28843 = i__19807__auto___28842 + 1;
      i__19807__auto___28842 = G__28843;
      continue;
    } else {
    }
    break;
  }
  var G__28840 = args28838.length;
  switch(G__28840) {
    case 2:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28838.length)].join(""));;
  }
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = function(f, in$) {
  return cljs.core.async.mapcat_LT_.call(null, f, in$, null);
};
cljs.core.async.mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = function(f, in$, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return out;
};
cljs.core.async.mapcat_LT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.mapcat_GT_ = function cljs$core$async$mapcat_GT_(var_args) {
  var args28845 = [];
  var len__19806__auto___28848 = arguments.length;
  var i__19807__auto___28849 = 0;
  while (true) {
    if (i__19807__auto___28849 < len__19806__auto___28848) {
      args28845.push(arguments[i__19807__auto___28849]);
      var G__28850 = i__19807__auto___28849 + 1;
      i__19807__auto___28849 = G__28850;
      continue;
    } else {
    }
    break;
  }
  var G__28847 = args28845.length;
  switch(G__28847) {
    case 2:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28845.length)].join(""));;
  }
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = function(f, out) {
  return cljs.core.async.mapcat_GT_.call(null, f, out, null);
};
cljs.core.async.mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = function(f, out, buf_or_n) {
  var in$ = cljs.core.async.chan.call(null, buf_or_n);
  cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
  return in$;
};
cljs.core.async.mapcat_GT_.cljs$lang$maxFixedArity = 3;
cljs.core.async.unique = function cljs$core$async$unique(var_args) {
  var args28852 = [];
  var len__19806__auto___28903 = arguments.length;
  var i__19807__auto___28904 = 0;
  while (true) {
    if (i__19807__auto___28904 < len__19806__auto___28903) {
      args28852.push(arguments[i__19807__auto___28904]);
      var G__28905 = i__19807__auto___28904 + 1;
      i__19807__auto___28904 = G__28905;
      continue;
    } else {
    }
    break;
  }
  var G__28854 = args28852.length;
  switch(G__28854) {
    case 1:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28852.length)].join(""));;
  }
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$1 = function(ch) {
  return cljs.core.async.unique.call(null, ch, null);
};
cljs.core.async.unique.cljs$core$IFn$_invoke$arity$2 = function(ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26334__auto___28907 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28907, out) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28907, out) {
          return function(state_28878) {
            var state_val_28879 = state_28878[1];
            if (state_val_28879 === 7) {
              var inst_28873 = state_28878[2];
              var state_28878__$1 = state_28878;
              var statearr_28880_28908 = state_28878__$1;
              statearr_28880_28908[2] = inst_28873;
              statearr_28880_28908[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28879 === 1) {
                var inst_28855 = null;
                var state_28878__$1 = function() {
                  var statearr_28881 = state_28878;
                  statearr_28881[7] = inst_28855;
                  return statearr_28881;
                }();
                var statearr_28882_28909 = state_28878__$1;
                statearr_28882_28909[2] = null;
                statearr_28882_28909[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28879 === 4) {
                  var inst_28858 = state_28878[8];
                  var inst_28858__$1 = state_28878[2];
                  var inst_28859 = inst_28858__$1 == null;
                  var inst_28860 = cljs.core.not.call(null, inst_28859);
                  var state_28878__$1 = function() {
                    var statearr_28883 = state_28878;
                    statearr_28883[8] = inst_28858__$1;
                    return statearr_28883;
                  }();
                  if (inst_28860) {
                    var statearr_28884_28910 = state_28878__$1;
                    statearr_28884_28910[1] = 5;
                  } else {
                    var statearr_28885_28911 = state_28878__$1;
                    statearr_28885_28911[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28879 === 6) {
                    var state_28878__$1 = state_28878;
                    var statearr_28886_28912 = state_28878__$1;
                    statearr_28886_28912[2] = null;
                    statearr_28886_28912[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28879 === 3) {
                      var inst_28875 = state_28878[2];
                      var inst_28876 = cljs.core.async.close_BANG_.call(null, out);
                      var state_28878__$1 = function() {
                        var statearr_28887 = state_28878;
                        statearr_28887[9] = inst_28875;
                        return statearr_28887;
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28878__$1, inst_28876);
                    } else {
                      if (state_val_28879 === 2) {
                        var state_28878__$1 = state_28878;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28878__$1, 4, ch);
                      } else {
                        if (state_val_28879 === 11) {
                          var inst_28858 = state_28878[8];
                          var inst_28867 = state_28878[2];
                          var inst_28855 = inst_28858;
                          var state_28878__$1 = function() {
                            var statearr_28888 = state_28878;
                            statearr_28888[10] = inst_28867;
                            statearr_28888[7] = inst_28855;
                            return statearr_28888;
                          }();
                          var statearr_28889_28913 = state_28878__$1;
                          statearr_28889_28913[2] = null;
                          statearr_28889_28913[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_28879 === 9) {
                            var inst_28858 = state_28878[8];
                            var state_28878__$1 = state_28878;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28878__$1, 11, out, inst_28858);
                          } else {
                            if (state_val_28879 === 5) {
                              var inst_28858 = state_28878[8];
                              var inst_28855 = state_28878[7];
                              var inst_28862 = cljs.core._EQ_.call(null, inst_28858, inst_28855);
                              var state_28878__$1 = state_28878;
                              if (inst_28862) {
                                var statearr_28891_28914 = state_28878__$1;
                                statearr_28891_28914[1] = 8;
                              } else {
                                var statearr_28892_28915 = state_28878__$1;
                                statearr_28892_28915[1] = 9;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_28879 === 10) {
                                var inst_28870 = state_28878[2];
                                var state_28878__$1 = state_28878;
                                var statearr_28893_28916 = state_28878__$1;
                                statearr_28893_28916[2] = inst_28870;
                                statearr_28893_28916[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28879 === 8) {
                                  var inst_28855 = state_28878[7];
                                  var tmp28890 = inst_28855;
                                  var inst_28855__$1 = tmp28890;
                                  var state_28878__$1 = function() {
                                    var statearr_28894 = state_28878;
                                    statearr_28894[7] = inst_28855__$1;
                                    return statearr_28894;
                                  }();
                                  var statearr_28895_28917 = state_28878__$1;
                                  statearr_28895_28917[2] = null;
                                  statearr_28895_28917[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28907, out);
        return function(switch__26222__auto__, c__26334__auto___28907, out) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28899 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_28899[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28899[1] = 1;
              return statearr_28899;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28878) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28878);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28900) {
                    if (e28900 instanceof Object) {
                      var ex__26226__auto__ = e28900;
                      var statearr_28901_28918 = state_28878;
                      statearr_28901_28918[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28878);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28900;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__28919 = state_28878;
                  state_28878 = G__28919;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28878) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28878);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28907, out);
      }();
      var state__26336__auto__ = function() {
        var statearr_28902 = f__26335__auto__.call(null);
        statearr_28902[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28907;
        return statearr_28902;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28907, out));
  return out;
};
cljs.core.async.unique.cljs$lang$maxFixedArity = 2;
cljs.core.async.partition = function cljs$core$async$partition(var_args) {
  var args28920 = [];
  var len__19806__auto___28990 = arguments.length;
  var i__19807__auto___28991 = 0;
  while (true) {
    if (i__19807__auto___28991 < len__19806__auto___28990) {
      args28920.push(arguments[i__19807__auto___28991]);
      var G__28992 = i__19807__auto___28991 + 1;
      i__19807__auto___28991 = G__28992;
      continue;
    } else {
    }
    break;
  }
  var G__28922 = args28920.length;
  switch(G__28922) {
    case 2:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args28920.length)].join(""));;
  }
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$2 = function(n, ch) {
  return cljs.core.async.partition.call(null, n, ch, null);
};
cljs.core.async.partition.cljs$core$IFn$_invoke$arity$3 = function(n, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26334__auto___28994 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___28994, out) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___28994, out) {
          return function(state_28960) {
            var state_val_28961 = state_28960[1];
            if (state_val_28961 === 7) {
              var inst_28956 = state_28960[2];
              var state_28960__$1 = state_28960;
              var statearr_28962_28995 = state_28960__$1;
              statearr_28962_28995[2] = inst_28956;
              statearr_28962_28995[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_28961 === 1) {
                var inst_28923 = new Array(n);
                var inst_28924 = inst_28923;
                var inst_28925 = 0;
                var state_28960__$1 = function() {
                  var statearr_28963 = state_28960;
                  statearr_28963[7] = inst_28924;
                  statearr_28963[8] = inst_28925;
                  return statearr_28963;
                }();
                var statearr_28964_28996 = state_28960__$1;
                statearr_28964_28996[2] = null;
                statearr_28964_28996[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_28961 === 4) {
                  var inst_28928 = state_28960[9];
                  var inst_28928__$1 = state_28960[2];
                  var inst_28929 = inst_28928__$1 == null;
                  var inst_28930 = cljs.core.not.call(null, inst_28929);
                  var state_28960__$1 = function() {
                    var statearr_28965 = state_28960;
                    statearr_28965[9] = inst_28928__$1;
                    return statearr_28965;
                  }();
                  if (inst_28930) {
                    var statearr_28966_28997 = state_28960__$1;
                    statearr_28966_28997[1] = 5;
                  } else {
                    var statearr_28967_28998 = state_28960__$1;
                    statearr_28967_28998[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_28961 === 15) {
                    var inst_28950 = state_28960[2];
                    var state_28960__$1 = state_28960;
                    var statearr_28968_28999 = state_28960__$1;
                    statearr_28968_28999[2] = inst_28950;
                    statearr_28968_28999[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_28961 === 13) {
                      var state_28960__$1 = state_28960;
                      var statearr_28969_29000 = state_28960__$1;
                      statearr_28969_29000[2] = null;
                      statearr_28969_29000[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_28961 === 6) {
                        var inst_28925 = state_28960[8];
                        var inst_28946 = inst_28925 > 0;
                        var state_28960__$1 = state_28960;
                        if (cljs.core.truth_(inst_28946)) {
                          var statearr_28970_29001 = state_28960__$1;
                          statearr_28970_29001[1] = 12;
                        } else {
                          var statearr_28971_29002 = state_28960__$1;
                          statearr_28971_29002[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_28961 === 3) {
                          var inst_28958 = state_28960[2];
                          var state_28960__$1 = state_28960;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_28960__$1, inst_28958);
                        } else {
                          if (state_val_28961 === 12) {
                            var inst_28924 = state_28960[7];
                            var inst_28948 = cljs.core.vec.call(null, inst_28924);
                            var state_28960__$1 = state_28960;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28960__$1, 15, out, inst_28948);
                          } else {
                            if (state_val_28961 === 2) {
                              var state_28960__$1 = state_28960;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_28960__$1, 4, ch);
                            } else {
                              if (state_val_28961 === 11) {
                                var inst_28940 = state_28960[2];
                                var inst_28941 = new Array(n);
                                var inst_28924 = inst_28941;
                                var inst_28925 = 0;
                                var state_28960__$1 = function() {
                                  var statearr_28972 = state_28960;
                                  statearr_28972[10] = inst_28940;
                                  statearr_28972[7] = inst_28924;
                                  statearr_28972[8] = inst_28925;
                                  return statearr_28972;
                                }();
                                var statearr_28973_29003 = state_28960__$1;
                                statearr_28973_29003[2] = null;
                                statearr_28973_29003[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_28961 === 9) {
                                  var inst_28924 = state_28960[7];
                                  var inst_28938 = cljs.core.vec.call(null, inst_28924);
                                  var state_28960__$1 = state_28960;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_28960__$1, 11, out, inst_28938);
                                } else {
                                  if (state_val_28961 === 5) {
                                    var inst_28924 = state_28960[7];
                                    var inst_28925 = state_28960[8];
                                    var inst_28928 = state_28960[9];
                                    var inst_28933 = state_28960[11];
                                    var inst_28932 = inst_28924[inst_28925] = inst_28928;
                                    var inst_28933__$1 = inst_28925 + 1;
                                    var inst_28934 = inst_28933__$1 < n;
                                    var state_28960__$1 = function() {
                                      var statearr_28974 = state_28960;
                                      statearr_28974[12] = inst_28932;
                                      statearr_28974[11] = inst_28933__$1;
                                      return statearr_28974;
                                    }();
                                    if (cljs.core.truth_(inst_28934)) {
                                      var statearr_28975_29004 = state_28960__$1;
                                      statearr_28975_29004[1] = 8;
                                    } else {
                                      var statearr_28976_29005 = state_28960__$1;
                                      statearr_28976_29005[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_28961 === 14) {
                                      var inst_28953 = state_28960[2];
                                      var inst_28954 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_28960__$1 = function() {
                                        var statearr_28978 = state_28960;
                                        statearr_28978[13] = inst_28953;
                                        return statearr_28978;
                                      }();
                                      var statearr_28979_29006 = state_28960__$1;
                                      statearr_28979_29006[2] = inst_28954;
                                      statearr_28979_29006[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_28961 === 10) {
                                        var inst_28944 = state_28960[2];
                                        var state_28960__$1 = state_28960;
                                        var statearr_28980_29007 = state_28960__$1;
                                        statearr_28980_29007[2] = inst_28944;
                                        statearr_28980_29007[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_28961 === 8) {
                                          var inst_28924 = state_28960[7];
                                          var inst_28933 = state_28960[11];
                                          var tmp28977 = inst_28924;
                                          var inst_28924__$1 = tmp28977;
                                          var inst_28925 = inst_28933;
                                          var state_28960__$1 = function() {
                                            var statearr_28981 = state_28960;
                                            statearr_28981[7] = inst_28924__$1;
                                            statearr_28981[8] = inst_28925;
                                            return statearr_28981;
                                          }();
                                          var statearr_28982_29008 = state_28960__$1;
                                          statearr_28982_29008[2] = null;
                                          statearr_28982_29008[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___28994, out);
        return function(switch__26222__auto__, c__26334__auto___28994, out) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_28986 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_28986[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_28986[1] = 1;
              return statearr_28986;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_28960) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_28960);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e28987) {
                    if (e28987 instanceof Object) {
                      var ex__26226__auto__ = e28987;
                      var statearr_28988_29009 = state_28960;
                      statearr_28988_29009[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_28960);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e28987;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__29010 = state_28960;
                  state_28960 = G__29010;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_28960) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_28960);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___28994, out);
      }();
      var state__26336__auto__ = function() {
        var statearr_28989 = f__26335__auto__.call(null);
        statearr_28989[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___28994;
        return statearr_28989;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___28994, out));
  return out;
};
cljs.core.async.partition.cljs$lang$maxFixedArity = 3;
cljs.core.async.partition_by = function cljs$core$async$partition_by(var_args) {
  var args29011 = [];
  var len__19806__auto___29085 = arguments.length;
  var i__19807__auto___29086 = 0;
  while (true) {
    if (i__19807__auto___29086 < len__19806__auto___29085) {
      args29011.push(arguments[i__19807__auto___29086]);
      var G__29087 = i__19807__auto___29086 + 1;
      i__19807__auto___29086 = G__29087;
      continue;
    } else {
    }
    break;
  }
  var G__29013 = args29011.length;
  switch(G__29013) {
    case 2:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args29011.length)].join(""));;
  }
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, ch) {
  return cljs.core.async.partition_by.call(null, f, ch, null);
};
cljs.core.async.partition_by.cljs$core$IFn$_invoke$arity$3 = function(f, ch, buf_or_n) {
  var out = cljs.core.async.chan.call(null, buf_or_n);
  var c__26334__auto___29089 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__26334__auto___29089, out) {
    return function() {
      var f__26335__auto__ = function() {
        var switch__26222__auto__ = function(c__26334__auto___29089, out) {
          return function(state_29055) {
            var state_val_29056 = state_29055[1];
            if (state_val_29056 === 7) {
              var inst_29051 = state_29055[2];
              var state_29055__$1 = state_29055;
              var statearr_29057_29090 = state_29055__$1;
              statearr_29057_29090[2] = inst_29051;
              statearr_29057_29090[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_29056 === 1) {
                var inst_29014 = [];
                var inst_29015 = inst_29014;
                var inst_29016 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                var state_29055__$1 = function() {
                  var statearr_29058 = state_29055;
                  statearr_29058[7] = inst_29015;
                  statearr_29058[8] = inst_29016;
                  return statearr_29058;
                }();
                var statearr_29059_29091 = state_29055__$1;
                statearr_29059_29091[2] = null;
                statearr_29059_29091[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_29056 === 4) {
                  var inst_29019 = state_29055[9];
                  var inst_29019__$1 = state_29055[2];
                  var inst_29020 = inst_29019__$1 == null;
                  var inst_29021 = cljs.core.not.call(null, inst_29020);
                  var state_29055__$1 = function() {
                    var statearr_29060 = state_29055;
                    statearr_29060[9] = inst_29019__$1;
                    return statearr_29060;
                  }();
                  if (inst_29021) {
                    var statearr_29061_29092 = state_29055__$1;
                    statearr_29061_29092[1] = 5;
                  } else {
                    var statearr_29062_29093 = state_29055__$1;
                    statearr_29062_29093[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_29056 === 15) {
                    var inst_29045 = state_29055[2];
                    var state_29055__$1 = state_29055;
                    var statearr_29063_29094 = state_29055__$1;
                    statearr_29063_29094[2] = inst_29045;
                    statearr_29063_29094[1] = 14;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_29056 === 13) {
                      var state_29055__$1 = state_29055;
                      var statearr_29064_29095 = state_29055__$1;
                      statearr_29064_29095[2] = null;
                      statearr_29064_29095[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_29056 === 6) {
                        var inst_29015 = state_29055[7];
                        var inst_29040 = inst_29015.length;
                        var inst_29041 = inst_29040 > 0;
                        var state_29055__$1 = state_29055;
                        if (cljs.core.truth_(inst_29041)) {
                          var statearr_29065_29096 = state_29055__$1;
                          statearr_29065_29096[1] = 12;
                        } else {
                          var statearr_29066_29097 = state_29055__$1;
                          statearr_29066_29097[1] = 13;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_29056 === 3) {
                          var inst_29053 = state_29055[2];
                          var state_29055__$1 = state_29055;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_29055__$1, inst_29053);
                        } else {
                          if (state_val_29056 === 12) {
                            var inst_29015 = state_29055[7];
                            var inst_29043 = cljs.core.vec.call(null, inst_29015);
                            var state_29055__$1 = state_29055;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_29055__$1, 15, out, inst_29043);
                          } else {
                            if (state_val_29056 === 2) {
                              var state_29055__$1 = state_29055;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_29055__$1, 4, ch);
                            } else {
                              if (state_val_29056 === 11) {
                                var inst_29019 = state_29055[9];
                                var inst_29023 = state_29055[10];
                                var inst_29033 = state_29055[2];
                                var inst_29034 = [];
                                var inst_29035 = inst_29034.push(inst_29019);
                                var inst_29015 = inst_29034;
                                var inst_29016 = inst_29023;
                                var state_29055__$1 = function() {
                                  var statearr_29067 = state_29055;
                                  statearr_29067[11] = inst_29035;
                                  statearr_29067[7] = inst_29015;
                                  statearr_29067[8] = inst_29016;
                                  statearr_29067[12] = inst_29033;
                                  return statearr_29067;
                                }();
                                var statearr_29068_29098 = state_29055__$1;
                                statearr_29068_29098[2] = null;
                                statearr_29068_29098[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_29056 === 9) {
                                  var inst_29015 = state_29055[7];
                                  var inst_29031 = cljs.core.vec.call(null, inst_29015);
                                  var state_29055__$1 = state_29055;
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_29055__$1, 11, out, inst_29031);
                                } else {
                                  if (state_val_29056 === 5) {
                                    var inst_29019 = state_29055[9];
                                    var inst_29016 = state_29055[8];
                                    var inst_29023 = state_29055[10];
                                    var inst_29023__$1 = f.call(null, inst_29019);
                                    var inst_29024 = cljs.core._EQ_.call(null, inst_29023__$1, inst_29016);
                                    var inst_29025 = cljs.core.keyword_identical_QMARK_.call(null, inst_29016, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                    var inst_29026 = inst_29024 || inst_29025;
                                    var state_29055__$1 = function() {
                                      var statearr_29069 = state_29055;
                                      statearr_29069[10] = inst_29023__$1;
                                      return statearr_29069;
                                    }();
                                    if (cljs.core.truth_(inst_29026)) {
                                      var statearr_29070_29099 = state_29055__$1;
                                      statearr_29070_29099[1] = 8;
                                    } else {
                                      var statearr_29071_29100 = state_29055__$1;
                                      statearr_29071_29100[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_29056 === 14) {
                                      var inst_29048 = state_29055[2];
                                      var inst_29049 = cljs.core.async.close_BANG_.call(null, out);
                                      var state_29055__$1 = function() {
                                        var statearr_29073 = state_29055;
                                        statearr_29073[13] = inst_29048;
                                        return statearr_29073;
                                      }();
                                      var statearr_29074_29101 = state_29055__$1;
                                      statearr_29074_29101[2] = inst_29049;
                                      statearr_29074_29101[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_29056 === 10) {
                                        var inst_29038 = state_29055[2];
                                        var state_29055__$1 = state_29055;
                                        var statearr_29075_29102 = state_29055__$1;
                                        statearr_29075_29102[2] = inst_29038;
                                        statearr_29075_29102[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_29056 === 8) {
                                          var inst_29015 = state_29055[7];
                                          var inst_29019 = state_29055[9];
                                          var inst_29023 = state_29055[10];
                                          var inst_29028 = inst_29015.push(inst_29019);
                                          var tmp29072 = inst_29015;
                                          var inst_29015__$1 = tmp29072;
                                          var inst_29016 = inst_29023;
                                          var state_29055__$1 = function() {
                                            var statearr_29076 = state_29055;
                                            statearr_29076[7] = inst_29015__$1;
                                            statearr_29076[8] = inst_29016;
                                            statearr_29076[14] = inst_29028;
                                            return statearr_29076;
                                          }();
                                          var statearr_29077_29103 = state_29055__$1;
                                          statearr_29077_29103[2] = null;
                                          statearr_29077_29103[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__26334__auto___29089, out);
        return function(switch__26222__auto__, c__26334__auto___29089, out) {
          return function() {
            var cljs$core$async$state_machine__26223__auto__ = null;
            var cljs$core$async$state_machine__26223__auto____0 = function() {
              var statearr_29081 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_29081[0] = cljs$core$async$state_machine__26223__auto__;
              statearr_29081[1] = 1;
              return statearr_29081;
            };
            var cljs$core$async$state_machine__26223__auto____1 = function(state_29055) {
              while (true) {
                var ret_value__26224__auto__ = function() {
                  try {
                    while (true) {
                      var result__26225__auto__ = switch__26222__auto__.call(null, state_29055);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__26225__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__26225__auto__;
                      }
                      break;
                    }
                  } catch (e29082) {
                    if (e29082 instanceof Object) {
                      var ex__26226__auto__ = e29082;
                      var statearr_29083_29104 = state_29055;
                      statearr_29083_29104[5] = ex__26226__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_29055);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e29082;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__26224__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__29105 = state_29055;
                  state_29055 = G__29105;
                  continue;
                } else {
                  return ret_value__26224__auto__;
                }
                break;
              }
            };
            cljs$core$async$state_machine__26223__auto__ = function(state_29055) {
              switch(arguments.length) {
                case 0:
                  return cljs$core$async$state_machine__26223__auto____0.call(this);
                case 1:
                  return cljs$core$async$state_machine__26223__auto____1.call(this, state_29055);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$0 = cljs$core$async$state_machine__26223__auto____0;
            cljs$core$async$state_machine__26223__auto__.cljs$core$IFn$_invoke$arity$1 = cljs$core$async$state_machine__26223__auto____1;
            return cljs$core$async$state_machine__26223__auto__;
          }();
        }(switch__26222__auto__, c__26334__auto___29089, out);
      }();
      var state__26336__auto__ = function() {
        var statearr_29084 = f__26335__auto__.call(null);
        statearr_29084[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__26334__auto___29089;
        return statearr_29084;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__26336__auto__);
    };
  }(c__26334__auto___29089, out));
  return out;
};
cljs.core.async.partition_by.cljs$lang$maxFixedArity = 3;
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_EDGE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();
goog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.operaVersion_ = function() {
  var version = goog.global.opera.version;
  try {
    return version();
  } catch (e) {
    return version;
  }
};
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    return goog.userAgent.operaVersion_();
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.EDGE) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^[-,."'%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "'");
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ࠀ-῿" + "‎Ⰰ-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-߿‏יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = /^(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm))$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^;,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var match = dataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? dataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "'");
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (goog.isString(value)) {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or string,' + ' value "' + value + '" given.');
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = Math.sign || function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    if (goog.dom.canUseQuerySelector_(parent)) {
      retVal = parent.querySelector("." + className);
    } else {
      retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
    }
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = (doc.documentElement);
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (doc.scrollingElement) {
    return doc.scrollingElement;
  }
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = (doc.createElement(goog.dom.TagName.TABLE));
  var tbody = table.appendChild(doc.createElement(goog.dom.TagName.TBODY));
  for (var i = 0;i < rows;i++) {
    var tr = doc.createElement(goog.dom.TagName.TR);
    for (var j = 0;j < columns;j++) {
      var td = doc.createElement(goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.create("br"), html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch((node).tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return (element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return (goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (goog.isDef(node.firstElementChild)) {
    return (node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (goog.isDef(node.lastElementChild)) {
    return (node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (goog.isDef(node.nextElementSibling)) {
    return (node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (goog.isDef(node.previousElementSibling)) {
    return (node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return (node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return (node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement(goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return (goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps));
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  if (goog.isDef(win.devicePixelRatio)) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^\s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = new cljs.core.PersistentArrayMap(null, 4, ["\x26", "\x26amp;", "\x3c", "\x26lt;", "\x3e", "\x26gt;", '"', "\x26quot;"], null);
hiccups.runtime.container_tags = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 33, ["table", null, "canvas", null, "body", null, "h3", null, "dt", null, "label", null, "fieldset", null, "form", null, "em", null, "option", null, "h2", null, "h4", null, "style", null, "span", null, "script", null, "ol", null, "dd", null, "a", null, "head", null, "textarea", null, "i", null, "div", null, "b", null, "h5", null, "pre", null, "ul", null, "iframe", null, "strong", null, "html", 
null, "h1", null, "li", null, "dl", null, "h6", null], null), null);
hiccups.runtime.as_str = function hiccups$runtime$as_str(x) {
  if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
    return cljs.core.name.call(null, x);
  } else {
    return [cljs.core.str(x)].join("");
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = new cljs.core.Keyword(null, "xml", "xml", -1170142052);
hiccups.runtime.xml_mode_QMARK_ = function hiccups$runtime$xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, new cljs.core.Keyword(null, "xml", "xml", -1170142052));
};
hiccups.runtime.in_mode = function hiccups$runtime$in_mode(mode, f) {
  var _STAR_html_mode_STAR_23889 = hiccups.runtime._STAR_html_mode_STAR_;
  hiccups.runtime._STAR_html_mode_STAR_ = mode;
  try {
    return f.call(null);
  } finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_23889;
  }
};
hiccups.runtime.escape_html = function hiccups$runtime$escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes);
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function hiccups$runtime$end_tag() {
  if (cljs.core.truth_(hiccups.runtime.xml_mode_QMARK_.call(null))) {
    return " /\x3e";
  } else {
    return "\x3e";
  }
};
hiccups.runtime.xml_attribute = function hiccups$runtime$xml_attribute(name, value) {
  return [cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name)), cljs.core.str('\x3d"'), cljs.core.str(hiccups.runtime.escape_html.call(null, value)), cljs.core.str('"')].join("");
};
hiccups.runtime.render_attribute = function hiccups$runtime$render_attribute(p__23890) {
  var vec__23892 = p__23890;
  var name = cljs.core.nth.call(null, vec__23892, 0, null);
  var value = cljs.core.nth.call(null, vec__23892, 1, null);
  if (value === true) {
    if (cljs.core.truth_(hiccups.runtime.xml_mode_QMARK_.call(null))) {
      return hiccups.runtime.xml_attribute.call(null, name, name);
    } else {
      return [cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name))].join("");
    }
  } else {
    if (cljs.core.not.call(null, value)) {
      return "";
    } else {
      return hiccups.runtime.xml_attribute.call(null, name, value);
    }
  }
};
hiccups.runtime.render_attr_map = function hiccups$runtime$render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)));
};
hiccups.runtime.normalize_element = function hiccups$runtime$normalize_element(p__23893) {
  var vec__23896 = p__23893;
  var tag = cljs.core.nth.call(null, vec__23896, 0, null);
  var content = cljs.core.nthnext.call(null, vec__23896, 1);
  if (!(tag instanceof cljs.core.Keyword || tag instanceof cljs.core.Symbol || typeof tag === "string")) {
    throw [cljs.core.str(tag), cljs.core.str(" is not a valid tag name")].join("");
  } else {
  }
  var vec__23897 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag));
  var _ = cljs.core.nth.call(null, vec__23897, 0, null);
  var tag__$1 = cljs.core.nth.call(null, vec__23897, 1, null);
  var id = cljs.core.nth.call(null, vec__23897, 2, null);
  var class$ = cljs.core.nth.call(null, vec__23897, 3, null);
  var tag_attrs = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "class", "class", -2030961996), cljs.core.truth_(class$) ? clojure.string.replace.call(null, class$, ".", " ") : null], null);
  var map_attrs = cljs.core.first.call(null, content);
  if (cljs.core.map_QMARK_.call(null, map_attrs)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, cljs.core.merge.call(null, tag_attrs, map_attrs), cljs.core.next.call(null, content)], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag__$1, tag_attrs, content], null);
  }
};
hiccups.runtime.render_element = function hiccups$runtime$render_element(element) {
  var vec__23899 = hiccups.runtime.normalize_element.call(null, element);
  var tag = cljs.core.nth.call(null, vec__23899, 0, null);
  var attrs = cljs.core.nth.call(null, vec__23899, 1, null);
  var content = cljs.core.nth.call(null, vec__23899, 2, null);
  if (cljs.core.truth_(function() {
    var or__18736__auto__ = content;
    if (cljs.core.truth_(or__18736__auto__)) {
      return or__18736__auto__;
    } else {
      return hiccups.runtime.container_tags.call(null, tag);
    }
  }())) {
    return [cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs)), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, content)), cljs.core.str("\x3c/"), cljs.core.str(tag), cljs.core.str("\x3e")].join("");
  } else {
    return [cljs.core.str("\x3c"), cljs.core.str(tag), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs)), cljs.core.str(hiccups.runtime.end_tag.call(null))].join("");
  }
};
hiccups.runtime.render_html = function hiccups$runtime$render_html(x) {
  if (cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x);
  } else {
    if (cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, hiccups$runtime$render_html, x));
    } else {
      return hiccups.runtime.as_str.call(null, x);
    }
  }
};
goog.provide("eph_titanic.html");
goog.require("cljs.core");
goog.require("hiccups.runtime");
goog.require("goog.string.Unicode");
eph_titanic.html.table = function eph_titanic$html$table(rows, cols) {
  return [cljs.core.str("\x3ctable"), cljs.core.str(""), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, function() {
    var iter__19516__auto__ = function eph_titanic$html$table_$_iter__29318(s__29319) {
      return new cljs.core.LazySeq(null, function() {
        var s__29319__$1 = s__29319;
        while (true) {
          var temp__4657__auto__ = cljs.core.seq.call(null, s__29319__$1);
          if (temp__4657__auto__) {
            var s__29319__$2 = temp__4657__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__29319__$2)) {
              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__29319__$2);
              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
              var b__29321 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
              if (function() {
                var i__29320 = 0;
                while (true) {
                  if (i__29320 < size__19515__auto__) {
                    var r = cljs.core._nth.call(null, c__19514__auto__, i__29320);
                    cljs.core.chunk_append.call(null, b__29321, [cljs.core.str("\x3ctr"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), eph_titanic.html.row_id.call(null, r), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, function() {
                      var iter__19516__auto__ = function(i__29320, r, c__19514__auto__, size__19515__auto__, b__29321, s__29319__$2, temp__4657__auto__) {
                        return function eph_titanic$html$table_$_iter__29318_$_iter__29330(s__29331) {
                          return new cljs.core.LazySeq(null, function(i__29320, r, c__19514__auto__, size__19515__auto__, b__29321, s__29319__$2, temp__4657__auto__) {
                            return function() {
                              var s__29331__$1 = s__29331;
                              while (true) {
                                var temp__4657__auto____$1 = cljs.core.seq.call(null, s__29331__$1);
                                if (temp__4657__auto____$1) {
                                  var s__29331__$2 = temp__4657__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__29331__$2)) {
                                    var c__19514__auto____$1 = cljs.core.chunk_first.call(null, s__29331__$2);
                                    var size__19515__auto____$1 = cljs.core.count.call(null, c__19514__auto____$1);
                                    var b__29333 = cljs.core.chunk_buffer.call(null, size__19515__auto____$1);
                                    if (function() {
                                      var i__29332 = 0;
                                      while (true) {
                                        if (i__29332 < size__19515__auto____$1) {
                                          var c = cljs.core._nth.call(null, c__19514__auto____$1, i__29332);
                                          cljs.core.chunk_append.call(null, b__29333, [cljs.core.str("\x3ctd"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), eph_titanic.html.cell_id.call(null, eph_titanic.html.cell_num.call(null, cols, r, c)), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, 
                                          goog.string.Unicode.NBSP)), cljs.core.str("\x3c/td\x3e")].join(""));
                                          var G__29338 = i__29332 + 1;
                                          i__29332 = G__29338;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29333), eph_titanic$html$table_$_iter__29318_$_iter__29330.call(null, cljs.core.chunk_rest.call(null, s__29331__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29333), null);
                                    }
                                  } else {
                                    var c = cljs.core.first.call(null, s__29331__$2);
                                    return cljs.core.cons.call(null, [cljs.core.str("\x3ctd"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), eph_titanic.html.cell_id.call(null, eph_titanic.html.cell_num.call(null, cols, r, c)), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, goog.string.Unicode.NBSP)), 
                                    cljs.core.str("\x3c/td\x3e")].join(""), eph_titanic$html$table_$_iter__29318_$_iter__29330.call(null, cljs.core.rest.call(null, s__29331__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(i__29320, r, c__19514__auto__, size__19515__auto__, b__29321, s__29319__$2, temp__4657__auto__), null, null);
                        };
                      }(i__29320, r, c__19514__auto__, size__19515__auto__, b__29321, s__29319__$2, temp__4657__auto__);
                      return iter__19516__auto__.call(null, cljs.core.range.call(null, cols));
                    }())), cljs.core.str("\x3c/tr\x3e")].join(""));
                    var G__29339 = i__29320 + 1;
                    i__29320 = G__29339;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29321), eph_titanic$html$table_$_iter__29318.call(null, cljs.core.chunk_rest.call(null, s__29319__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29321), null);
              }
            } else {
              var r = cljs.core.first.call(null, s__29319__$2);
              return cljs.core.cons.call(null, [cljs.core.str("\x3ctr"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), eph_titanic.html.row_id.call(null, r), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str("\x3e"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, function() {
                var iter__19516__auto__ = function(r, s__29319__$2, temp__4657__auto__) {
                  return function eph_titanic$html$table_$_iter__29318_$_iter__29334(s__29335) {
                    return new cljs.core.LazySeq(null, function(r, s__29319__$2, temp__4657__auto__) {
                      return function() {
                        var s__29335__$1 = s__29335;
                        while (true) {
                          var temp__4657__auto____$1 = cljs.core.seq.call(null, s__29335__$1);
                          if (temp__4657__auto____$1) {
                            var s__29335__$2 = temp__4657__auto____$1;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__29335__$2)) {
                              var c__19514__auto__ = cljs.core.chunk_first.call(null, s__29335__$2);
                              var size__19515__auto__ = cljs.core.count.call(null, c__19514__auto__);
                              var b__29337 = cljs.core.chunk_buffer.call(null, size__19515__auto__);
                              if (function() {
                                var i__29336 = 0;
                                while (true) {
                                  if (i__29336 < size__19515__auto__) {
                                    var c = cljs.core._nth.call(null, c__19514__auto__, i__29336);
                                    cljs.core.chunk_append.call(null, b__29337, [cljs.core.str("\x3ctd"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), eph_titanic.html.cell_id.call(null, eph_titanic.html.cell_num.call(null, cols, r, c)), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, goog.string.Unicode.NBSP)), 
                                    cljs.core.str("\x3c/td\x3e")].join(""));
                                    var G__29340 = i__29336 + 1;
                                    i__29336 = G__29340;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29337), eph_titanic$html$table_$_iter__29318_$_iter__29334.call(null, cljs.core.chunk_rest.call(null, s__29335__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__29337), null);
                              }
                            } else {
                              var c = cljs.core.first.call(null, s__29335__$2);
                              return cljs.core.cons.call(null, [cljs.core.str("\x3ctd"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "id", "id", -1388402092), eph_titanic.html.cell_id.call(null, eph_titanic.html.cell_num.call(null, cols, r, c)), new cljs.core.Keyword(null, "class", "class", -2030961996), null], null))), cljs.core.str("\x3e"), cljs.core.str(hiccups.runtime.render_html.call(null, goog.string.Unicode.NBSP)), 
                              cljs.core.str("\x3c/td\x3e")].join(""), eph_titanic$html$table_$_iter__29318_$_iter__29334.call(null, cljs.core.rest.call(null, s__29335__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(r, s__29319__$2, temp__4657__auto__), null, null);
                  };
                }(r, s__29319__$2, temp__4657__auto__);
                return iter__19516__auto__.call(null, cljs.core.range.call(null, cols));
              }())), cljs.core.str("\x3c/tr\x3e")].join(""), eph_titanic$html$table_$_iter__29318.call(null, cljs.core.rest.call(null, s__29319__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__19516__auto__.call(null, cljs.core.range.call(null, rows));
  }())), cljs.core.str("\x3c/table\x3e")].join("");
};
eph_titanic.html.row_id = function eph_titanic$html$row_id(num) {
  return [cljs.core.str("r"), cljs.core.str(num)].join("");
};
eph_titanic.html.cell_id = function eph_titanic$html$cell_id(num) {
  return [cljs.core.str("c"), cljs.core.str(num)].join("");
};
eph_titanic.html.cell_num = function eph_titanic$html$cell_num(cols, row, col) {
  return cols * row + col;
};
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return !goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return (prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    box.expandToIncludeCoordinate(arguments[i]);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.prototype.expandToIncludeCoordinate = function(coord) {
  this.top = Math.min(this.top, coord.y);
  this.right = Math.max(this.right, coord.x);
  this.bottom = Math.max(this.bottom, coord.y);
  this.left = Math.min(this.left, coord.x);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromPositionAndSize = function(position, size) {
  return new goog.math.Rect(position.x, position.y, size.width, size.height);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return [a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.events.BrowserEvent");
goog.forwardDeclare("goog.events.Event");
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    for (var key in style) {
      goog.style.setStyle_(element, style[key], key);
    }
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.styleNameCache_ = {};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var propertyName = goog.style.styleNameCache_[style];
  if (!propertyName) {
    var camelStyle = goog.string.toCamelCase(style);
    propertyName = camelStyle;
    if (element.style[camelStyle] === undefined) {
      var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
      if (element.style[prefixedStyle] !== undefined) {
        propertyName = prefixedStyle;
      }
    }
    goog.style.styleNameCache_[style] = propertyName;
  }
  return propertyName;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), false);
  el.style.top = goog.style.getPixelStyleValue_((y), false);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate((element).offsetLeft, (element).offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return {"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return rect;
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    if (parent.nodeType == goog.dom.NodeType.DOCUMENT_FRAGMENT && parent.host) {
      parent = parent.host;
    }
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return (parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  if (container == goog.dom.getDocumentScrollElement()) {
    var relX = elementPos.x - container.scrollLeft;
    var relY = elementPos.y - container.scrollTop;
    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(10)) {
      relX += containerBorder.left;
      relY += containerBorder.top;
    }
  } else {
    var relX = elementPos.x - containerPos.x - containerBorder.left;
    var relY = elementPos.y - containerPos.y - containerBorder.top;
  }
  var spaceX = container.clientWidth - (element).offsetWidth;
  var spaceY = container.clientHeight - (element).offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, opt_container, opt_center) {
  var container = opt_container || goog.dom.getDocumentScrollElement();
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  goog.asserts.assertObject(el, "Parameter is required");
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  var box = goog.style.getBoundingClientRect_(el);
  var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
  pos.x = box.left + scrollCoord.x;
  pos.y = box.top + scrollCoord.y;
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && currentWin != currentWin.parent && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var box = goog.style.getBoundingClientRect_(el);
  return new goog.math.Coordinate(box.left, box.top);
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var targetEvent = el.changedTouches ? el.changedTouches[0] : el;
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, (el).offsetLeft + dx, (el).offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, h);
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = (element).offsetWidth;
  var offsetHeight = (element).offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass(goog.dom.TagName.HEAD)[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass(goog.dom.TagName.BODY)[0];
      head = dh.createDom(goog.dom.TagName.HEAD);
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom(goog.dom.TagName.STYLE);
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    style.display = "inline-block";
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    if (el.style) {
      el.style[name] = value;
    }
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        if (descendant.style) {
          descendant.style[name] = value;
        }
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size((element).offsetWidth, (element).offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("10") && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("10") && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom(goog.dom.TagName.SPAN, {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.match(/\s*([\w-]+)\s*\:(.+)/);
    if (keyValue) {
      var styleName = keyValue[1];
      var styleValue = goog.string.trim(keyValue[2]);
      result[goog.string.toCamelCase(styleName.toLowerCase())] = styleValue;
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement(goog.dom.TagName.DIV);
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement(goog.dom.TagName.DIV);
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("eph_titanic.dom");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("goog.style");
NodeList.prototype.cljs$core$ISeqable$ = true;
NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  var array__$1 = this;
  return cljs.core.array_seq.call(null, array__$1);
};
HTMLCollection.prototype.cljs$core$ISeqable$ = true;
HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(array) {
  var array__$1 = this;
  return cljs.core.array_seq.call(null, array__$1);
};
eph_titanic.dom.elt = function eph_titanic$dom$elt(id) {
  return goog.dom.getElement(id);
};
eph_titanic.dom.value = function eph_titanic$dom$value(id) {
  var G__29344 = id;
  var G__29344__$1 = G__29344 == null ? null : goog.dom.getElement(G__29344);
  if (G__29344__$1 == null) {
    return null;
  } else {
    return G__29344__$1.value;
  }
};
eph_titanic.dom.value__GT_int = function eph_titanic$dom$value__GT_int(id) {
  var G__29347 = id;
  var G__29347__$1 = G__29347 == null ? null : eph_titanic.dom.value.call(null, G__29347);
  var G__29347__$2 = G__29347__$1 == null ? null : parseInt(G__29347__$1);
  if (G__29347__$2 == null) {
    return null;
  } else {
    return function(G__29347, G__29347__$1, G__29347__$2) {
      return function(p1__29345_SHARP_) {
        if (cljs.core.not.call(null, isNaN(p1__29345_SHARP_))) {
          return p1__29345_SHARP_;
        } else {
          return null;
        }
      };
    }(G__29347, G__29347__$1, G__29347__$2).call(null, G__29347__$2);
  }
};
eph_titanic.dom.get_elements_by_tag = function eph_titanic$dom$get_elements_by_tag(el, tag) {
  var G__29349 = goog.dom.getElementsByTagNameAndClass(tag, null, el);
  if (G__29349 == null) {
    return null;
  } else {
    return cljs.core.array_seq.call(null, G__29349);
  }
};
eph_titanic.dom.iframe_doc = function eph_titanic$dom$iframe_doc(iframe) {
  return goog.dom.getFrameContentDocument(iframe);
};
eph_titanic.dom.iframe_window = function eph_titanic$dom$iframe_window(iframe) {
  return goog.dom.getFrameContentWindow(iframe);
};
eph_titanic.dom.first_iframe = function eph_titanic$dom$first_iframe(el) {
  var G__29351 = eph_titanic.dom.get_elements_by_tag.call(null, el, "iframe");
  if (G__29351 == null) {
    return null;
  } else {
    return cljs.core.first.call(null, G__29351);
  }
};
eph_titanic.dom.set_visible_BANG_ = function eph_titanic$dom$set_visible_BANG_(el) {
  if (!cljs.core._EQ_.call(null, "visible", function() {
    var G__29353 = el;
    var G__29353__$1 = G__29353 == null ? null : G__29353.style;
    if (G__29353__$1 == null) {
      return null;
    } else {
      return G__29353__$1.visibility;
    }
  }())) {
    return el["style"]["visibility"] = "visible";
  } else {
    return null;
  }
};
eph_titanic.dom.set_hidden_BANG_ = function eph_titanic$dom$set_hidden_BANG_(el) {
  if (!cljs.core._EQ_.call(null, "hidden", function() {
    var G__29355 = el;
    var G__29355__$1 = G__29355 == null ? null : G__29355.style;
    if (G__29355__$1 == null) {
      return null;
    } else {
      return G__29355__$1.visibility;
    }
  }())) {
    return el["style"]["visibility"] = "hidden";
  } else {
    return null;
  }
};
eph_titanic.dom.get_styles = function eph_titanic$dom$get_styles(el) {
  return eph_titanic.dom.get_elements_by_tag.call(null, el, "style");
};
eph_titanic.dom.install_style_BANG_ = function eph_titanic$dom$install_style_BANG_(css_str, doc) {
  return goog.style.installStyles(css_str, doc);
};
goog.provide("eph_titanic.ui");
goog.require("cljs.core");
goog.require("eph_titanic.dom");
eph_titanic.ui.alert = function eph_titanic$ui$alert(msg) {
  return alert(msg);
};
eph_titanic.ui.ok_button = function eph_titanic$ui$ok_button() {
  return eph_titanic.dom.elt.call(null, "ok");
};
eph_titanic.ui.rows = function eph_titanic$ui$rows() {
  return eph_titanic.dom.value__GT_int.call(null, "rows");
};
eph_titanic.ui.cols = function eph_titanic$ui$cols() {
  return eph_titanic.dom.value__GT_int.call(null, "cols");
};
eph_titanic.ui.main = function eph_titanic$ui$main() {
  return eph_titanic.dom.elt.call(null, "main");
};
eph_titanic.ui.coords = function eph_titanic$ui$coords() {
  return eph_titanic.dom.elt.call(null, "coords");
};
eph_titanic.ui.log = function eph_titanic$ui$log() {
  return eph_titanic.dom.elt.call(null, "log");
};
eph_titanic.ui.setup_iframe_style = function eph_titanic$ui$setup_iframe_style(var_args) {
  var args20886 = [];
  var len__19806__auto___20890 = arguments.length;
  var i__19807__auto___20891 = 0;
  while (true) {
    if (i__19807__auto___20891 < len__19806__auto___20890) {
      args20886.push(arguments[i__19807__auto___20891]);
      var G__20892 = i__19807__auto___20891 + 1;
      i__19807__auto___20891 = G__20892;
      continue;
    } else {
    }
    break;
  }
  var G__20888 = args20886.length;
  switch(G__20888) {
    case 0:
      return eph_titanic.ui.setup_iframe_style.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return eph_titanic.ui.setup_iframe_style.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args20886.length)].join(""));;
  }
};
eph_titanic.ui.setup_iframe_style.cljs$core$IFn$_invoke$arity$0 = function() {
  return eph_titanic.ui.setup_iframe_style.call(null, function() {
    var G__20889 = eph_titanic.ui.main.call(null);
    var G__20889__$1 = G__20889 == null ? null : eph_titanic.dom.first_iframe.call(null, G__20889);
    if (G__20889__$1 == null) {
      return null;
    } else {
      return eph_titanic.dom.iframe_doc.call(null, G__20889__$1);
    }
  }());
};
eph_titanic.ui.setup_iframe_style.cljs$core$IFn$_invoke$arity$1 = function(doc) {
  if (cljs.core.not.call(null, cljs.core.first.call(null, eph_titanic.dom.get_styles.call(null, doc.head)))) {
    return eph_titanic.dom.install_style_BANG_.call(null, "table { border: 1px solid black; }\n  td { border: 1px solid black; width: 12pt; }\n  td.sel, tr.sel { background-color: #FF3300; }", doc);
  } else {
    return null;
  }
};
eph_titanic.ui.setup_iframe_style.cljs$lang$maxFixedArity = 1;
goog.provide("eph_titanic.state");
goog.require("cljs.core");
goog.require("eph_titanic.dom");
goog.require("eph_titanic.html");
goog.require("eph_titanic.ui");
goog.require("cljs.core.async");
goog.require("goog.dom.DomHelper");
eph_titanic.state.init_state = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 0, new cljs.core.Keyword(null, "rows", "rows", 850049680), null, new cljs.core.Keyword(null, "cols", "cols", -1914801295), null, new cljs.core.Keyword(null, "selected-set", "selected-set", -244808012), null], null);
eph_titanic.state.eval_tag = function eph_titanic$state$eval_tag(app_state, tag, val) {
  var G__24389 = tag instanceof cljs.core.Keyword ? tag.fqn : null;
  switch(G__24389) {
    case "create-table":
      cljs.core.println.call(null, tag, val);
      return cljs.core.swap_BANG_.call(null, app_state, function(G__24389) {
        return function(p1__24386_SHARP_) {
          var G__24390 = p1__24386_SHARP_;
          var G__24390__$1 = G__24390 == null ? null : cljs.core.merge.call(null, G__24390, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selected-set", "selected-set", -244808012), null], null), val);
          if (G__24390__$1 == null) {
            return null;
          } else {
            return cljs.core.update_in.call(null, G__24390__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666)], null), cljs.core.inc);
          }
        };
      }(G__24389));
      break;
    default:
      return new cljs.core.Keyword(null, "default-ignore", "default-ignore", 929124030);
  }
};
eph_titanic.state.state_change_BANG_ = function eph_titanic$state$state_change_BANG_(p__24392, _, ___$1, old, new$) {
  var map__24396 = p__24392;
  var map__24396__$1 = (!(map__24396 == null) ? map__24396.cljs$lang$protocol_mask$partition0$ & 64 || map__24396.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__24396) : map__24396;
  var ui_main = cljs.core.get.call(null, map__24396__$1, new cljs.core.Keyword(null, "ui-main", "ui-main", 226371438));
  var create_table = cljs.core.get.call(null, map__24396__$1, new cljs.core.Keyword(null, "create-table", "create-table", 1297148194));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "sc", "sc", 1148023032), new cljs.core.Keyword(null, "main", "main", -2117802661), ui_main);
  var temp__4655__auto__ = function() {
    var G__24398 = ui_main.call(null);
    var G__24398__$1 = G__24398 == null ? null : eph_titanic.dom.first_iframe.call(null, G__24398);
    if (G__24398__$1 == null) {
      return null;
    } else {
      return eph_titanic.dom.iframe_doc.call(null, G__24398__$1);
    }
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var iframe_doc = temp__4655__auto__;
    cljs.core.println.call(null, new cljs.core.Keyword(null, "sc", "sc", 1148023032), new cljs.core.Keyword(null, "doc", "doc", 1913296891), iframe_doc);
    if (cljs.core.not_EQ_.call(null, cljs.core.select_keys.call(null, old, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rows", "rows", 850049680), new cljs.core.Keyword(null, "cols", "cols", -1914801295), new cljs.core.Keyword(null, "table-update", "table-update", 560610666)], null)), cljs.core.select_keys.call(null, new$, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "rows", "rows", 850049680), new cljs.core.Keyword(null, "cols", "cols", -1914801295), new cljs.core.Keyword(null, "table-update", "table-update", 560610666)], null)))) {
      cljs.core.println.call(null, new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), cljs.core.select_keys.call(null, new$, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rows", "rows", 850049680), new cljs.core.Keyword(null, "cols", "cols", -1914801295), new cljs.core.Keyword(null, "table-update", "table-update", 560610666)], null)));
      iframe_doc.body.innerHTML = eph_titanic.html.table.call(null, (new cljs.core.Keyword(null, "rows", "rows", 850049680)).cljs$core$IFn$_invoke$arity$1(new$), (new cljs.core.Keyword(null, "cols", "cols", -1914801295)).cljs$core$IFn$_invoke$arity$1(new$));
      return eph_titanic.dom.set_visible_BANG_.call(null, ui_main.call(null));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
eph_titanic.state.start_event_loop = function eph_titanic$state$start_event_loop(app_state, chan) {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "start-main-event-loop", "start-main-event-loop", -1420256604));
  var c__22115__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__22115__auto__) {
    return function() {
      var f__22116__auto__ = function() {
        var switch__22050__auto__ = function(c__22115__auto__) {
          return function(state_24466) {
            var state_val_24467 = state_24466[1];
            if (state_val_24467 === 1) {
              var state_24466__$1 = state_24466;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24466__$1, 2, chan);
            } else {
              if (state_val_24467 === 2) {
                var inst_24446 = state_24466[2];
                var inst_24447 = cljs.core.nth.call(null, inst_24446, 0, null);
                var inst_24448 = cljs.core.nth.call(null, inst_24446, 1, null);
                var inst_24449 = inst_24446;
                var state_24466__$1 = function() {
                  var statearr_24468 = state_24466;
                  statearr_24468[7] = inst_24449;
                  statearr_24468[8] = inst_24448;
                  statearr_24468[9] = inst_24447;
                  return statearr_24468;
                }();
                var statearr_24469_24485 = state_24466__$1;
                statearr_24469_24485[2] = null;
                statearr_24469_24485[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_24467 === 3) {
                  var inst_24449 = state_24466[7];
                  var inst_24452 = cljs.core.nth.call(null, inst_24449, 0, null);
                  var inst_24453 = cljs.core.nth.call(null, inst_24449, 1, null);
                  var state_24466__$1 = function() {
                    var statearr_24470 = state_24466;
                    statearr_24470[10] = inst_24452;
                    statearr_24470[11] = inst_24453;
                    return statearr_24470;
                  }();
                  if (cljs.core.truth_(inst_24449)) {
                    var statearr_24471_24486 = state_24466__$1;
                    statearr_24471_24486[1] = 5;
                  } else {
                    var statearr_24472_24487 = state_24466__$1;
                    statearr_24472_24487[1] = 6;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_24467 === 4) {
                    var inst_24464 = state_24466[2];
                    var state_24466__$1 = state_24466;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_24466__$1, inst_24464);
                  } else {
                    if (state_val_24467 === 5) {
                      var inst_24452 = state_24466[10];
                      var inst_24453 = state_24466[11];
                      var inst_24455 = cljs.core.println.call(null, new cljs.core.Keyword(null, "loop", "loop", -395552849), inst_24452, inst_24453);
                      var inst_24456 = eph_titanic.state.eval_tag.call(null, app_state, inst_24452, inst_24453);
                      var state_24466__$1 = function() {
                        var statearr_24473 = state_24466;
                        statearr_24473[12] = inst_24456;
                        statearr_24473[13] = inst_24455;
                        return statearr_24473;
                      }();
                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_24466__$1, 8, chan);
                    } else {
                      if (state_val_24467 === 6) {
                        var state_24466__$1 = state_24466;
                        var statearr_24474_24488 = state_24466__$1;
                        statearr_24474_24488[2] = null;
                        statearr_24474_24488[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_24467 === 7) {
                          var inst_24462 = state_24466[2];
                          var state_24466__$1 = state_24466;
                          var statearr_24475_24489 = state_24466__$1;
                          statearr_24475_24489[2] = inst_24462;
                          statearr_24475_24489[1] = 4;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_24467 === 8) {
                            var inst_24458 = state_24466[2];
                            var inst_24449 = inst_24458;
                            var state_24466__$1 = function() {
                              var statearr_24476 = state_24466;
                              statearr_24476[7] = inst_24449;
                              return statearr_24476;
                            }();
                            var statearr_24477_24490 = state_24466__$1;
                            statearr_24477_24490[2] = null;
                            statearr_24477_24490[1] = 3;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            return null;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__22115__auto__);
        return function(switch__22050__auto__, c__22115__auto__) {
          return function() {
            var eph_titanic$state$start_event_loop_$_state_machine__22051__auto__ = null;
            var eph_titanic$state$start_event_loop_$_state_machine__22051__auto____0 = function() {
              var statearr_24481 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_24481[0] = eph_titanic$state$start_event_loop_$_state_machine__22051__auto__;
              statearr_24481[1] = 1;
              return statearr_24481;
            };
            var eph_titanic$state$start_event_loop_$_state_machine__22051__auto____1 = function(state_24466) {
              while (true) {
                var ret_value__22052__auto__ = function() {
                  try {
                    while (true) {
                      var result__22053__auto__ = switch__22050__auto__.call(null, state_24466);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__22053__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__22053__auto__;
                      }
                      break;
                    }
                  } catch (e24482) {
                    if (e24482 instanceof Object) {
                      var ex__22054__auto__ = e24482;
                      var statearr_24483_24491 = state_24466;
                      statearr_24483_24491[5] = ex__22054__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_24466);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e24482;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__22052__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__24492 = state_24466;
                  state_24466 = G__24492;
                  continue;
                } else {
                  return ret_value__22052__auto__;
                }
                break;
              }
            };
            eph_titanic$state$start_event_loop_$_state_machine__22051__auto__ = function(state_24466) {
              switch(arguments.length) {
                case 0:
                  return eph_titanic$state$start_event_loop_$_state_machine__22051__auto____0.call(this);
                case 1:
                  return eph_titanic$state$start_event_loop_$_state_machine__22051__auto____1.call(this, state_24466);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            eph_titanic$state$start_event_loop_$_state_machine__22051__auto__.cljs$core$IFn$_invoke$arity$0 = eph_titanic$state$start_event_loop_$_state_machine__22051__auto____0;
            eph_titanic$state$start_event_loop_$_state_machine__22051__auto__.cljs$core$IFn$_invoke$arity$1 = eph_titanic$state$start_event_loop_$_state_machine__22051__auto____1;
            return eph_titanic$state$start_event_loop_$_state_machine__22051__auto__;
          }();
        }(switch__22050__auto__, c__22115__auto__);
      }();
      var state__22117__auto__ = function() {
        var statearr_24484 = f__22116__auto__.call(null);
        statearr_24484[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__22115__auto__;
        return statearr_24484;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__22117__auto__);
    };
  }(c__22115__auto__));
  return c__22115__auto__;
};
goog.provide("eph_titanic.state_test");
goog.require("cljs.core");
goog.require("eph_titanic.state");
goog.require("cljs.test");
goog.require("cljs.core.async");
eph_titanic.state_test.eval_tag_test = function eph_titanic$state_test$eval_tag_test() {
  return cljs.test.test_var.call(null, eph_titanic$state_test$eval_tag_test.cljs$lang$var);
};
eph_titanic.state_test.eval_tag_test.cljs$lang$test = function() {
  var t1 = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "rows", "rows", 850049680), 1, new cljs.core.Keyword(null, "cols", "cols", -1914801295), 2], null);
  var s1 = eph_titanic.state.eval_tag.call(null, cljs.core.atom.call(null, eph_titanic.state.init_state), new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), t1);
  try {
    var values__25242__auto___25448 = function() {
      var x__19570__auto__ = cljs.core.merge.call(null, eph_titanic.state.init_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 1], null), t1);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = s1;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25243__auto___25449 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25448);
    if (cljs.core.truth_(result__25243__auto___25449)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "merge", "merge", -163787882, null), new cljs.core.Symbol("state", "init-state", "state/init-state", -2097695488, null), new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 1], null), new cljs.core.Symbol(null, "t1", "t1", 1665503971, null)), new cljs.core.Symbol(null, "s1", "s1", 338671490, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto___25448), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "merge", "merge", -163787882, null), new cljs.core.Symbol("state", "init-state", "state/init-state", -2097695488, null), new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 1], null), new cljs.core.Symbol(null, "t1", "t1", 1665503971, null)), new cljs.core.Symbol(null, "s1", "s1", 338671490, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25448);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25446) {
    var t__25280__auto___25450 = e25446;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "merge", "merge", -163787882, null), new cljs.core.Symbol("state", "init-state", "state/init-state", -2097695488, null), new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 1], null), new cljs.core.Symbol(null, "t1", "t1", 1665503971, null)), new cljs.core.Symbol(null, "s1", "s1", 338671490, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25450, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25242__auto__ = function() {
      var x__19570__auto__ = cljs.core.merge.call(null, s1, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 2], null));
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = eph_titanic.state.eval_tag.call(null, cljs.core.atom.call(null, s1), new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), t1);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25243__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto__);
    if (cljs.core.truth_(result__25243__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "merge", "merge", -163787882, null), new cljs.core.Symbol(null, "s1", "s1", 338671490, null), new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 2], null)), cljs.core.list(new cljs.core.Symbol("state", "eval-tag", "state/eval-tag", 83002636, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", 1243487874, null), new cljs.core.Symbol(null, "s1", "s1", 338671490, null)), new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), new cljs.core.Symbol(null, "t1", "t1", 1665503971, null))), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "merge", "merge", -163787882, null), new cljs.core.Symbol(null, "s1", "s1", 338671490, null), new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 2], null)), cljs.core.list(new cljs.core.Symbol("state", "eval-tag", "state/eval-tag", 83002636, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", 1243487874, null), new cljs.core.Symbol(null, "s1", "s1", 338671490, null)), new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), new cljs.core.Symbol(null, "t1", "t1", 1665503971, null))), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25243__auto__;
  } catch (e25447) {
    var t__25280__auto__ = e25447;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "merge", "merge", -163787882, null), new cljs.core.Symbol(null, "s1", "s1", 338671490, null), new cljs.core.PersistentArrayMap(null, 
    1, [new cljs.core.Keyword(null, "table-update", "table-update", 560610666), 2], null)), cljs.core.list(new cljs.core.Symbol("state", "eval-tag", "state/eval-tag", 83002636, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", 1243487874, null), new cljs.core.Symbol(null, "s1", "s1", 338671490, null)), new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), new cljs.core.Symbol(null, "t1", "t1", 1665503971, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__25280__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.state_test.eval_tag_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.state_test.eval_tag_test;
}, new cljs.core.Symbol("eph-titanic.state-test", "eval-tag-test", "eph-titanic.state-test/eval-tag-test", 1733128842, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Symbol(null, "eval-tag-test", "eval-tag-test", 863125824, null), "/Users/mike/work/eph-titanic/test/eph_titanic/state_test.cljs", 23, 
1, 7, 7, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.state_test.eval_tag_test) ? eph_titanic.state_test.eval_tag_test.cljs$lang$test : null]));
eph_titanic.state_test.run = function eph_titanic$state_test$run() {
  return cljs.test.run_block.call(null, function() {
    var env25453 = cljs.test.empty_env.call(null);
    var summary25454 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25453, summary25454) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25453);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25453, summary25454) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25453, summary25454)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.state_test.eval_tag_test;
          }, new cljs.core.Symbol("eph-titanic.state-test", "eval-tag-test", "eph-titanic.state-test/eval-tag-test", 1733128842, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Symbol(null, "eval-tag-test", "eval-tag-test", 863125824, null), "/Users/mike/work/eph-titanic/test/eph_titanic/state_test.cljs", 
          23, 1, 7, 7, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.state_test.eval_tag_test) ? eph_titanic.state_test.eval_tag_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25453, summary25454) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25453, summary25454)], null));
        }());
      };
    }(env25453, summary25454), function(env25453, summary25454) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25453, summary25454)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25453, summary25454) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25454, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25454), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25453, summary25454)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25453, summary25454) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25453);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25454));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25454), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env25453, summary25454)], null));
  }());
};
goog.exportSymbol("eph_titanic.state_test.run", eph_titanic.state_test.run);
goog.provide("eph_titanic.html_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("eph_titanic.html");
eph_titanic.html_test.table_test = function eph_titanic$html_test$table_test() {
  return cljs.test.test_var.call(null, eph_titanic$html_test$table_test.cljs$lang$var);
};
eph_titanic.html_test.table_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "row");
  try {
    try {
      var values__25105__auto___29492 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.row_id.call(null, 0);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "r0");
      var result__25106__auto___29493 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29492);
      if (cljs.core.truth_(result__25106__auto___29493)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "r0", cljs.core.list(new cljs.core.Symbol("h", "row-id", "h/row-id", 1887150848, null), 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29492), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "r0", cljs.core.list(new cljs.core.Symbol("h", "row-id", "h/row-id", 1887150848, null), 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29492);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29481) {
      var t__25143__auto___29494 = e29481;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "r0", cljs.core.list(new cljs.core.Symbol("h", "row-id", "h/row-id", 1887150848, null), 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29494, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29495 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.row_id.call(null, 100);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "r100");
      var result__25106__auto___29496 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29495);
      if (cljs.core.truth_(result__25106__auto___29496)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "r100", cljs.core.list(new cljs.core.Symbol("h", "row-id", "h/row-id", 1887150848, null), 100)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29495), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "r100", cljs.core.list(new cljs.core.Symbol("h", "row-id", "h/row-id", 1887150848, null), 100)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29495);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29482) {
      var t__25143__auto___29497 = e29482;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "r100", cljs.core.list(new cljs.core.Symbol("h", "row-id", "h/row-id", 1887150848, null), 100)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29497, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29498 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.cell_id.call(null, 0);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "c0");
      var result__25106__auto___29499 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29498);
      if (cljs.core.truth_(result__25106__auto___29499)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c0", cljs.core.list(new cljs.core.Symbol("h", "cell-id", "h/cell-id", -864560217, null), 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29498), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c0", cljs.core.list(new cljs.core.Symbol("h", "cell-id", "h/cell-id", -864560217, null), 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29498);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29483) {
      var t__25143__auto___29500 = e29483;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c0", cljs.core.list(new cljs.core.Symbol("h", "cell-id", "h/cell-id", -864560217, null), 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29500, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29501 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.cell_id.call(null, 100);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "c100");
      var result__25106__auto___29502 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29501);
      if (cljs.core.truth_(result__25106__auto___29502)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c100", cljs.core.list(new cljs.core.Symbol("h", "cell-id", "h/cell-id", -864560217, null), 100)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29501), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c100", cljs.core.list(new cljs.core.Symbol("h", "cell-id", "h/cell-id", -864560217, null), 100)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29501);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29484) {
      var t__25143__auto___29503 = e29484;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c100", cljs.core.list(new cljs.core.Symbol("h", "cell-id", "h/cell-id", -864560217, null), 100)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29503, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29504 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.cell_num.call(null, 2, 0, 0);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), 0);
      var result__25106__auto___29505 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29504);
      if (cljs.core.truth_(result__25106__auto___29505)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 0, 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29504), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 0, 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29504);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29485) {
      var t__25143__auto___29506 = e29485;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 0, 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29506, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29507 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.cell_num.call(null, 2, 0, 1);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), 1);
      var result__25106__auto___29508 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29507);
      if (cljs.core.truth_(result__25106__auto___29508)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 0, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29507), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 0, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29507);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29486) {
      var t__25143__auto___29509 = e29486;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 0, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29509, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29510 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.cell_num.call(null, 2, 1, 0);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), 2);
      var result__25106__auto___29511 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29510);
      if (cljs.core.truth_(result__25106__auto___29511)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 1, 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29510), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 1, 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29510);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29487) {
      var t__25143__auto___29512 = e29487;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 1, 0)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29512, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29513 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.cell_num.call(null, 2, 1, 1);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), 3);
      var result__25106__auto___29514 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29513);
      if (cljs.core.truth_(result__25106__auto___29514)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 1, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25105__auto___29513), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 1, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29513);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29488) {
      var t__25143__auto___29515 = e29488;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("h", "cell-num", "h/cell-num", 914312622, null), 2, 1, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29515, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "table");
  try {
    try {
      var values__25105__auto___29516 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.table.call(null, 1, 1);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), '\x3ctable\x3e\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e');
      var result__25106__auto___29517 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29516);
      if (cljs.core.truth_(result__25106__auto___29517)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), '\x3ctable\x3e\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e', cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, 
        null), 1, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29516), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), '\x3ctable\x3e\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e', cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, 
        null), 1, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29516);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29489) {
      var t__25143__auto___29518 = e29489;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), '\x3ctable\x3e\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e', cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, 
      null), 1, 1)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29518, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto___29519 = function() {
        var x__19570__auto__ = [cljs.core.str("\x3ctable\x3e"), cljs.core.str('\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3ctd id\x3d"c1"\x3e \x3c/td\x3e\x3c/tr\x3e'), cljs.core.str('\x3ctr id\x3d"r1"\x3e\x3ctd id\x3d"c2"\x3e \x3c/td\x3e\x3ctd id\x3d"c3"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e')].join("");
        return cljs.core._conj.call(null, function() {
          var x__19570__auto____$1 = eph_titanic.html.table.call(null, 2, 2);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
        }(), x__19570__auto__);
      }();
      var result__25106__auto___29520 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29519);
      if (cljs.core.truth_(result__25106__auto___29520)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "\x3ctable\x3e", '\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3ctd id\x3d"c1"\x3e \x3c/td\x3e\x3c/tr\x3e', 
        '\x3ctr id\x3d"r1"\x3e\x3ctd id\x3d"c2"\x3e \x3c/td\x3e\x3ctd id\x3d"c3"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e'), cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29519), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "\x3ctable\x3e", '\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3ctd id\x3d"c1"\x3e \x3c/td\x3e\x3c/tr\x3e', 
        '\x3ctr id\x3d"r1"\x3e\x3ctd id\x3d"c2"\x3e \x3c/td\x3e\x3ctd id\x3d"c3"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e'), cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29519);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e29490) {
      var t__25143__auto___29521 = e29490;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "\x3ctable\x3e", '\x3ctr id\x3d"r0"\x3e\x3ctd id\x3d"c0"\x3e \x3c/td\x3e\x3ctd id\x3d"c1"\x3e \x3c/td\x3e\x3c/tr\x3e', 
      '\x3ctr id\x3d"r1"\x3e\x3ctd id\x3d"c2"\x3e \x3c/td\x3e\x3ctd id\x3d"c3"\x3e \x3c/td\x3e\x3c/tr\x3e\x3c/table\x3e'), cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29521, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25105__auto__ = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.html.table.call(null, null, null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "\x3ctable\x3e\x3c/table\x3e");
      var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
      if (cljs.core.truth_(result__25106__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "\x3ctable\x3e\x3c/table\x3e", cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, null), null, null)), new cljs.core.Keyword(null, "actual", 
        "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "\x3ctable\x3e\x3c/table\x3e", cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, null), null, null)), new cljs.core.Keyword(null, "actual", 
        "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__25106__auto__;
    } catch (e29491) {
      var t__25143__auto__ = e29491;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "\x3ctable\x3e\x3c/table\x3e", cljs.core.list(new cljs.core.Symbol("h", "table", "h/table", 1075588387, null), null, null)), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
eph_titanic.html_test.table_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.html_test.table_test;
}, new cljs.core.Symbol("eph-titanic.html-test", "table-test", "eph-titanic.html-test/table-test", -50573852, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Symbol(null, "table-test", "table-test", 1641484768, null), "/Users/mike/work/eph-titanic/test/eph_titanic/html_test.cljs", 20, 1, 5, 5, cljs.core.List.EMPTY, 
null, cljs.core.truth_(eph_titanic.html_test.table_test) ? eph_titanic.html_test.table_test.cljs$lang$test : null]));
eph_titanic.html_test.run = function eph_titanic$html_test$run() {
  return cljs.test.run_block.call(null, function() {
    var env29524 = cljs.test.empty_env.call(null);
    var summary29525 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env29524, summary29525) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env29524);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25209__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25209__auto__, env29524, summary29525) {
            return function() {
              if (env__25209__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25209__auto__, env29524, summary29525)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.html_test.table_test;
          }, new cljs.core.Symbol("eph-titanic.html-test", "table-test", "eph-titanic.html-test/table-test", -50573852, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Symbol(null, "table-test", "table-test", 1641484768, null), "/Users/mike/work/eph-titanic/test/eph_titanic/html_test.cljs", 20, 
          1, 5, 5, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.html_test.table_test) ? eph_titanic.html_test.table_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25209__auto__, env29524, summary29525) {
            return function() {
              if (env__25209__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25209__auto__, env29524, summary29525)], null));
        }());
      };
    }(env29524, summary29525), function(env29524, summary29525) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env29524, summary29525)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env29524, summary29525) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary29525, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary29525), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env29524, summary29525)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env29524, summary29525) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env29524);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary29525));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary29525), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env29524, summary29525)], null));
  }());
};
goog.exportSymbol("eph_titanic.html_test.run", eph_titanic.html_test.run);
goog.provide("eph_titanic.ui_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("eph_titanic.ui");
goog.require("eph_titanic.dom");
goog.require("goog.dom");
goog.require("goog.dom.DomHelper");
eph_titanic.ui_test.button_rows_cols_test = function eph_titanic$ui_test$button_rows_cols_test() {
  return cljs.test.test_var.call(null, eph_titanic$ui_test$button_rows_cols_test.cljs$lang$var);
};
eph_titanic.ui_test.button_rows_cols_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "button-rows-cols");
  try {
    try {
      var values__25242__auto___25469 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.ui.ok_button.call(null).id;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "ok");
      var result__25243__auto___25470 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25469);
      if (cljs.core.truth_(result__25243__auto___25470)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ok", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "ok-button", "ui/ok-button", 1493391948, 
        null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto___25469), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ok", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "ok-button", "ui/ok-button", 1493391948, 
        null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25469);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e25461) {
      var t__25280__auto___25471 = e25461;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ok", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "ok-button", "ui/ok-button", 1493391948, 
      null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25471, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25242__auto___25472 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.ui.cols.call(null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), null);
      var result__25243__auto___25473 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25472);
      if (cljs.core.truth_(result__25243__auto___25473)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("ui", "cols", "ui/cols", -274274804, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25242__auto___25472), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("ui", "cols", "ui/cols", -274274804, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25472);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e25462) {
      var t__25280__auto___25474 = e25462;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("ui", "cols", "ui/cols", -274274804, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25474, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25242__auto___25475 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.ui.rows.call(null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), null);
      var result__25243__auto___25476 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25475);
      if (cljs.core.truth_(result__25243__auto___25476)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("ui", "rows", "ui/rows", -1804378549, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
        cljs.core._EQ_, values__25242__auto___25475), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("ui", "rows", "ui/rows", -1804378549, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
        function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25475);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e25463) {
      var t__25280__auto___25477 = e25463;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("ui", "rows", "ui/rows", -1804378549, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25477, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__25242__auto___25478 = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.ui.main.call(null).id;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "main");
      var result__25243__auto___25479 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25478);
      if (cljs.core.truth_(result__25243__auto___25479)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "main", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "main", "ui/main", -477259466, null)))), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto___25478), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "main", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "main", "ui/main", -477259466, null)))), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25478);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e25464) {
      var t__25280__auto___25480 = e25464;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "main", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "main", "ui/main", -477259466, null)))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25480, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    var value25465_25481 = eph_titanic.dom.value;
    eph_titanic.dom.value = cljs.core.constantly.call(null, " 99 ");
    try {
      try {
        var values__25242__auto___25482 = cljs.core._conj.call(null, function() {
          var x__19570__auto__ = eph_titanic.ui.rows.call(null);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), 99);
        var result__25243__auto___25483 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25482);
        if (cljs.core.truth_(result__25243__auto___25483)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("ui", "rows", "ui/rows", -1804378549, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
          cljs.core._EQ_, values__25242__auto___25482), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("ui", "rows", "ui/rows", -1804378549, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
          function() {
            var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25482);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e25466) {
        var t__25280__auto___25484 = e25466;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("ui", "rows", "ui/rows", -1804378549, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25484, 
        new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } finally {
      eph_titanic.dom.value = value25465_25481;
    }
    var value25467 = eph_titanic.dom.value;
    eph_titanic.dom.value = cljs.core.constantly.call(null, " 99 ");
    try {
      try {
        var values__25242__auto__ = cljs.core._conj.call(null, function() {
          var x__19570__auto__ = eph_titanic.ui.cols.call(null);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), 99);
        var result__25243__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto__);
        if (cljs.core.truth_(result__25243__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("ui", "cols", "ui/cols", -274274804, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
          cljs.core._EQ_, values__25242__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("ui", "cols", "ui/cols", -274274804, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
          function() {
            var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto__);
            return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
          }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__25243__auto__;
      } catch (e25468) {
        var t__25280__auto__ = e25468;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("ui", "cols", "ui/cols", -274274804, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto__, 
        new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } finally {
      eph_titanic.dom.value = value25467;
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
eph_titanic.ui_test.button_rows_cols_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.ui_test.button_rows_cols_test;
}, new cljs.core.Symbol("eph-titanic.ui-test", "button-rows-cols-test", "eph-titanic.ui-test/button-rows-cols-test", 1198988012, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "button-rows-cols-test", "button-rows-cols-test", 1570981305, null), "test/eph_titanic/ui_test.cljs", 31, 1, 8, 
8, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.button_rows_cols_test) ? eph_titanic.ui_test.button_rows_cols_test.cljs$lang$test : null]));
eph_titanic.ui_test.coords_test = function eph_titanic$ui_test$coords_test() {
  return cljs.test.test_var.call(null, eph_titanic$ui_test$coords_test.cljs$lang$var);
};
eph_titanic.ui_test.coords_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "coords");
  try {
    try {
      var values__25242__auto__ = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.ui.coords.call(null).id;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "coords");
      var result__25243__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto__);
      if (cljs.core.truth_(result__25243__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "coords", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "coords", "ui/coords", 1041090483, 
        null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "coords", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "coords", "ui/coords", 1041090483, 
        null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto__);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__25243__auto__;
    } catch (e25485) {
      var t__25280__auto__ = e25485;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "coords", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "coords", "ui/coords", 1041090483, 
      null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
eph_titanic.ui_test.coords_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.ui_test.coords_test;
}, new cljs.core.Symbol("eph-titanic.ui-test", "coords-test", "eph-titanic.ui-test/coords-test", 1759521205, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "coords-test", "coords-test", 1637189312, null), "test/eph_titanic/ui_test.cljs", 21, 1, 26, 26, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.coords_test) ? 
eph_titanic.ui_test.coords_test.cljs$lang$test : null]));
eph_titanic.ui_test.log_test = function eph_titanic$ui_test$log_test() {
  return cljs.test.test_var.call(null, eph_titanic$ui_test$log_test.cljs$lang$var);
};
eph_titanic.ui_test.log_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "log");
  try {
    try {
      var values__25242__auto__ = cljs.core._conj.call(null, function() {
        var x__19570__auto__ = eph_titanic.ui.log.call(null).id;
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), "log");
      var result__25243__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto__);
      if (cljs.core.truth_(result__25243__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "log", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "log", "ui/log", 45019919, null)))), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "log", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "log", "ui/log", 45019919, null)))), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
          var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto__);
          return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
        }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      return result__25243__auto__;
    } catch (e25486) {
      var t__25280__auto__ = e25486;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "log", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("ui", "log", "ui/log", 45019919, null)))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
eph_titanic.ui_test.log_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.ui_test.log_test;
}, new cljs.core.Symbol("eph-titanic.ui-test", "log-test", "eph-titanic.ui-test/log-test", -2055801875, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "log-test", "log-test", -1632810184, null), "test/eph_titanic/ui_test.cljs", 18, 1, 30, 30, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.log_test) ? 
eph_titanic.ui_test.log_test.cljs$lang$test : null]));
eph_titanic.ui_test.setup_iframe_style_test = function eph_titanic$ui_test$setup_iframe_style_test() {
  return cljs.test.test_var.call(null, eph_titanic$ui_test$setup_iframe_style_test.cljs$lang$var);
};
eph_titanic.ui_test.setup_iframe_style_test.cljs$lang$test = function() {
  var ifr = function() {
    var G__25487 = eph_titanic.ui.main.call(null);
    var G__25487__$1 = G__25487 == null ? null : eph_titanic.dom.first_iframe.call(null, G__25487);
    if (G__25487__$1 == null) {
      return null;
    } else {
      return eph_titanic.dom.iframe_doc.call(null, G__25487__$1);
    }
  }();
  var count_styles = cljs.core.comp.call(null, cljs.core.count, eph_titanic.dom.get_styles);
  try {
    var values__25242__auto___25492 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [count_styles.call(null, ifr), count_styles.call(null, document)], null);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25243__auto___25493 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25492);
    if (cljs.core.truth_(result__25243__auto___25493)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto___25492), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25492);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25488) {
    var t__25280__auto___25494 = e25488;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25494, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25242__auto___25495 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = function() {
          eph_titanic.ui.setup_iframe_style.call(null);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [count_styles.call(null, ifr), count_styles.call(null, document)], null);
        }();
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25243__auto___25496 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25495);
    if (cljs.core.truth_(result__25243__auto___25496)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
      cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, 
      null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto___25495), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
      cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, 
      null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25495);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25489) {
    var t__25280__auto___25497 = e25489;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 0], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
    cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, 
    null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25497, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25242__auto___25498 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = function() {
          eph_titanic.ui.setup_iframe_style.call(null, document);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [count_styles.call(null, ifr), count_styles.call(null, document)], null);
        }();
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25243__auto___25499 = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto___25498);
    if (cljs.core.truth_(result__25243__auto___25499)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
      cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, 
      null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto___25498), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
      cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, 
      null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto___25498);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e25490) {
    var t__25280__auto___25500 = e25490;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
    cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, 
    null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto___25500, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25242__auto__ = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = function() {
          eph_titanic.ui.setup_iframe_style.call(null, document);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [count_styles.call(null, ifr), count_styles.call(null, document)], null);
        }();
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25243__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25242__auto__);
    if (cljs.core.truth_(result__25243__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
      cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, 
      null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25242__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), 
      cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, 
      null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25242__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25243__auto__;
  } catch (e25491) {
    var t__25280__auto__ = e25491;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, 
    null), cljs.core.list(new cljs.core.Symbol("ui", "setup-iframe-style", "ui/setup-iframe-style", 954389794, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 1980965765, null), new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)), cljs.core.list(new cljs.core.Symbol(null, "count-styles", "count-styles", 
    1980965765, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25280__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.ui_test.setup_iframe_style_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.ui_test.setup_iframe_style_test;
}, new cljs.core.Symbol("eph-titanic.ui-test", "setup-iframe-style-test", "eph-titanic.ui-test/setup-iframe-style-test", 1331557098, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "setup-iframe-style-test", "setup-iframe-style-test", 1946266391, null), "test/eph_titanic/ui_test.cljs", 33, 1, 
34, 34, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.setup_iframe_style_test) ? eph_titanic.ui_test.setup_iframe_style_test.cljs$lang$test : null]));
eph_titanic.ui_test.run = function eph_titanic$ui_test$run() {
  return cljs.test.run_block.call(null, function() {
    var env25503 = cljs.test.empty_env.call(null);
    var summary25504 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25503, summary25504) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25503);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25503, summary25504) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25503, summary25504)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.ui_test.button_rows_cols_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "button-rows-cols-test", "eph-titanic.ui-test/button-rows-cols-test", 1198988012, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "button-rows-cols-test", "button-rows-cols-test", 1570981305, null), "test/eph_titanic/ui_test.cljs", 
          31, 1, 8, 8, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.button_rows_cols_test) ? eph_titanic.ui_test.button_rows_cols_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.ui_test.coords_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "coords-test", "eph-titanic.ui-test/coords-test", 1759521205, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "coords-test", "coords-test", 1637189312, null), "test/eph_titanic/ui_test.cljs", 21, 1, 26, 26, cljs.core.List.EMPTY, 
          null, cljs.core.truth_(eph_titanic.ui_test.coords_test) ? eph_titanic.ui_test.coords_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.ui_test.log_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "log-test", "eph-titanic.ui-test/log-test", -2055801875, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "log-test", "log-test", -1632810184, null), "test/eph_titanic/ui_test.cljs", 18, 1, 30, 30, cljs.core.List.EMPTY, null, 
          cljs.core.truth_(eph_titanic.ui_test.log_test) ? eph_titanic.ui_test.log_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.ui_test.setup_iframe_style_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "setup-iframe-style-test", "eph-titanic.ui-test/setup-iframe-style-test", 1331557098, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "setup-iframe-style-test", "setup-iframe-style-test", 1946266391, null), "test/eph_titanic/ui_test.cljs", 
          33, 1, 34, 34, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.setup_iframe_style_test) ? eph_titanic.ui_test.setup_iframe_style_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25503, summary25504) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25503, summary25504)], null));
        }());
      };
    }(env25503, summary25504), function(env25503, summary25504) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25503, summary25504)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25503, summary25504) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25504, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25504), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25503, summary25504)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25503, summary25504) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25503);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25504));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25504), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env25503, summary25504)], null));
  }());
};
goog.exportSymbol("eph_titanic.ui_test.run", eph_titanic.ui_test.run);
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    callback.call(opt_scope);
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", 
TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", 
DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified", BEFOREPRINT:"beforeprint", AFTERPRINT:"afterprint"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  var relevantTouch = e.changedTouches ? e.changedTouches[0] : null;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  if (!goog.isNull(relevantTouch)) {
    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX : relevantTouch.pageX;
    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY : relevantTouch.pageY;
    this.screenX = relevantTouch.screenX || 0;
    this.screenY = relevantTouch.screenY || 0;
  } else {
    this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
    this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
    this.screenX = e.screenX || 0;
    this.screenY = e.screenY || 0;
  }
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    if (src.attachEvent) {
      src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
    } else {
      throw Error("addEventListener and attachEvent are unavailable.");
    }
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = key;
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.forwardDeclare("goog.events.BrowserEvent");
goog.events.KeyCodes = {WIN_KEY_FF_LINUX:0, MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PLUS_SIGN:43, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, FF_EQUALS:61, FF_DASH:173, QUESTION_MARK:63, AT_SIGN:64, A:65, B:66, C:67, D:68, E:69, F:70, 
G:71, H:72, I:73, J:74, K:75, L:76, M:77, N:78, O:79, P:80, Q:81, R:82, S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, 
FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, SEMICOLON:186, DASH:189, EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, MAC_WK_CMD_LEFT:91, MAC_WK_CMD_RIGHT:93, WIN_IME:229, VK_NONAME:252, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if (e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false;
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.VK_NONAME:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return !goog.userAgent.GECKO;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY;
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if (!goog.userAgent.IE && !goog.userAgent.EDGE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525"))) {
    return true;
  }
  if (goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode);
  }
  if (opt_altKey && !opt_ctrlKey) {
    return false;
  }
  if (goog.isNumber(opt_heldKeyCode)) {
    opt_heldKeyCode = goog.events.KeyCodes.normalizeKeyCode(opt_heldKeyCode);
  }
  if (!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT || goog.userAgent.MAC && opt_heldKeyCode == goog.events.KeyCodes.META)) {
    return false;
  }
  if ((goog.userAgent.WEBKIT || goog.userAgent.EDGE) && opt_ctrlKey && opt_shiftKey) {
    switch(keyCode) {
      case goog.events.KeyCodes.BACKSLASH:
      ;
      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.TILDE:
      ;
      case goog.events.KeyCodes.SEMICOLON:
      ;
      case goog.events.KeyCodes.DASH:
      ;
      case goog.events.KeyCodes.EQUALS:
      ;
      case goog.events.KeyCodes.COMMA:
      ;
      case goog.events.KeyCodes.PERIOD:
      ;
      case goog.events.KeyCodes.SLASH:
      ;
      case goog.events.KeyCodes.APOSTROPHE:
      ;
      case goog.events.KeyCodes.SINGLE_QUOTE:
        return false;
    }
  }
  if (goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false;
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return true;
    case goog.events.KeyCodes.ESC:
      return !(goog.userAgent.WEBKIT || goog.userAgent.EDGE);
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode);
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if (keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true;
  }
  if (keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true;
  }
  if (keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true;
  }
  if ((goog.userAgent.WEBKIT || goog.userAgent.EDGE) && keyCode == 0) {
    return true;
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.PLUS_SIGN:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.AT_SIGN:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.FF_EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false;
  }
};
goog.events.KeyCodes.normalizeKeyCode = function(keyCode) {
  if (goog.userAgent.GECKO) {
    return goog.events.KeyCodes.normalizeGeckoKeyCode(keyCode);
  } else {
    if (goog.userAgent.MAC && goog.userAgent.WEBKIT) {
      return goog.events.KeyCodes.normalizeMacWebKitKeyCode(keyCode);
    } else {
      return keyCode;
    }
  }
};
goog.events.KeyCodes.normalizeGeckoKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.FF_EQUALS:
      return goog.events.KeyCodes.EQUALS;
    case goog.events.KeyCodes.FF_SEMICOLON:
      return goog.events.KeyCodes.SEMICOLON;
    case goog.events.KeyCodes.FF_DASH:
      return goog.events.KeyCodes.DASH;
    case goog.events.KeyCodes.MAC_FF_META:
      return goog.events.KeyCodes.META;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return goog.events.KeyCodes.WIN_KEY;
    default:
      return keyCode;
  }
};
goog.events.KeyCodes.normalizeMacWebKitKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.MAC_WK_CMD_RIGHT:
      return goog.events.KeyCodes.META;
    default:
      return keyCode;
  }
};
goog.provide("goog.events.KeyEvent");
goog.provide("goog.events.KeyHandler");
goog.provide("goog.events.KeyHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  if (opt_element) {
    this.attach(opt_element, opt_capture);
  }
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.prototype.altKey_ = false;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {"Up":goog.events.KeyCodes.UP, "Down":goog.events.KeyCodes.DOWN, "Left":goog.events.KeyCodes.LEFT, "Right":goog.events.KeyCodes.RIGHT, "Enter":goog.events.KeyCodes.ENTER, "F1":goog.events.KeyCodes.F1, "F2":goog.events.KeyCodes.F2, "F3":goog.events.KeyCodes.F3, "F4":goog.events.KeyCodes.F4, "F5":goog.events.KeyCodes.F5, "F6":goog.events.KeyCodes.F6, "F7":goog.events.KeyCodes.F7, "F8":goog.events.KeyCodes.F8, "F9":goog.events.KeyCodes.F9, "F10":goog.events.KeyCodes.F10, 
"F11":goog.events.KeyCodes.F11, "F12":goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, "Home":goog.events.KeyCodes.HOME, "End":goog.events.KeyCodes.END, "PageUp":goog.events.KeyCodes.PAGE_UP, "PageDown":goog.events.KeyCodes.PAGE_DOWN, "Insert":goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.EDGE || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("525");
goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ = goog.userAgent.MAC && goog.userAgent.GECKO;
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  if (goog.userAgent.WEBKIT || goog.userAgent.EDGE) {
    if (this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey || goog.userAgent.MAC && this.lastKey_ == goog.events.KeyCodes.META && !e.metaKey) {
      this.resetState();
    }
  }
  if (this.lastKey_ == -1) {
    if (e.ctrlKey && e.keyCode != goog.events.KeyCodes.CTRL) {
      this.lastKey_ = goog.events.KeyCodes.CTRL;
    } else {
      if (e.altKey && e.keyCode != goog.events.KeyCodes.ALT) {
        this.lastKey_ = goog.events.KeyCodes.ALT;
      } else {
        if (e.metaKey && e.keyCode != goog.events.KeyCodes.META) {
          this.lastKey_ = goog.events.KeyCodes.META;
        }
      }
    }
  }
  if (goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey)) {
    this.handleEvent(e);
  } else {
    this.keyCode_ = goog.events.KeyCodes.normalizeKeyCode(e.keyCode);
    if (goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
      this.altKey_ = e.altKey;
    }
  }
};
goog.events.KeyHandler.prototype.resetState = function() {
  this.lastKey_ = -1;
  this.keyCode_ = -1;
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.resetState();
  this.altKey_ = e.altKey;
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var keyCode, charCode;
  var altKey = be.altKey;
  if (goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {
    keyCode = this.keyCode_;
    charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0;
  } else {
    if ((goog.userAgent.WEBKIT || goog.userAgent.EDGE) && e.type == goog.events.EventType.KEYPRESS) {
      keyCode = this.keyCode_;
      charCode = be.charCode >= 0 && be.charCode < 63232 && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0;
    } else {
      if (goog.userAgent.OPERA && !goog.userAgent.WEBKIT) {
        keyCode = this.keyCode_;
        charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0;
      } else {
        keyCode = be.keyCode || this.keyCode_;
        charCode = be.charCode || 0;
        if (goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
          altKey = this.altKey_;
        }
        if (goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && keyCode == goog.events.KeyCodes.WIN_KEY) {
          keyCode = goog.events.KeyCodes.SLASH;
        }
      }
    }
  }
  keyCode = goog.events.KeyCodes.normalizeKeyCode(keyCode);
  var key = keyCode;
  var keyIdentifier = be.keyIdentifier;
  if (keyCode) {
    if (keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {
      key = goog.events.KeyHandler.safariKey_[keyCode];
    } else {
      if (keyCode == 25 && e.shiftKey) {
        key = 9;
      }
    }
  } else {
    if (keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {
      key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier];
    }
  }
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  event.altKey = altKey;
  this.dispatchEvent(event);
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_;
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  if (this.keyUpKey_) {
    this.detach();
  }
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this);
};
goog.events.KeyHandler.prototype.detach = function() {
  if (this.keyPressKey_) {
    goog.events.unlistenByKey(this.keyPressKey_);
    goog.events.unlistenByKey(this.keyDownKey_);
    goog.events.unlistenByKey(this.keyUpKey_);
    this.keyPressKey_ = null;
    this.keyDownKey_ = null;
    this.keyUpKey_ = null;
  }
  this.element_ = null;
  this.lastKey_ = -1;
  this.keyCode_ = -1;
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach();
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat;
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
goog.provide("eph_titanic.event");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("cljs.core.async");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.dom.DomHelper");
eph_titanic.event.max_cells = 1E5;
eph_titanic.event.listen = function eph_titanic$event$listen(event_chan, el, type, event_fn) {
  return goog.events.listen(el, type, function(e) {
    var G__24099 = event_fn.call(null, e);
    if (G__24099 == null) {
      return null;
    } else {
      return cljs.core.async.put_BANG_.call(null, event_chan, G__24099);
    }
  });
};
eph_titanic.event.setup_listeners = function eph_titanic$event$setup_listeners(event_chan, error_fn, btn, rows, cols) {
  var event_listen = cljs.core.partial.call(null, eph_titanic.event.listen, event_chan);
  return event_listen.call(null, btn.call(null), goog.events.EventType.CLICK, function(event_listen) {
    return function(_) {
      var r = rows.call(null);
      var c = cols.call(null);
      if (!(cljs.core.every_QMARK_.call(null, cljs.core.pos_QMARK_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, c], null)) && r * c <= eph_titanic.event.max_cells)) {
        return error_fn.call(null, [cljs.core.str("Please enter the number of rows and columns for the table\n(up to "), cljs.core.str(eph_titanic.event.max_cells.toLocaleString()), cljs.core.str(" cells).\n")].join(""));
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "create-table", "create-table", 1297148194), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "rows", "rows", 850049680), r, new cljs.core.Keyword(null, "cols", "cols", -1914801295), c], null)], null);
      }
    };
  }(event_listen));
};
eph_titanic.event.remove_listeners = function eph_titanic$event$remove_listeners(ok_btn) {
  return goog.events.removeAll(ok_btn.call(null));
};
goog.provide("eph_titanic.event_test");
goog.require("cljs.core");
goog.require("eph_titanic.event");
goog.require("cljs.test");
goog.require("cljs.core.async");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.dom.DomHelper");
eph_titanic.event_test.run = function eph_titanic$event_test$run() {
  return cljs.test.run_block.call(null, function() {
    var env25432 = cljs.test.empty_env.call(null);
    var summary25433 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25432, summary25433) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25432);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.event-test", "eph-titanic.event-test", -1233611879, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25330__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25330__auto__, env25432, summary25433) {
            return function() {
              if (env__25330__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25330__auto__, env25432, summary25433)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25330__auto__, env25432, summary25433) {
            return function() {
              if (env__25330__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25330__auto__, env25432, summary25433)], null));
        }());
      };
    }(env25432, summary25433), function(env25432, summary25433) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.event-test", "eph-titanic.event-test", -1233611879, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25432, summary25433)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25432, summary25433) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25433, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25433), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25432, summary25433)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25432, summary25433) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25432);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25433));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25433), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env25432, summary25433)], null));
  }());
};
goog.exportSymbol("eph_titanic.event_test.run", eph_titanic.event_test.run);
goog.provide("eph_titanic.dom_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("eph_titanic.dom");
goog.require("goog.dom");
eph_titanic.dom_test.elt_test = function eph_titanic$dom_test$elt_test() {
  return cljs.test.test_var.call(null, eph_titanic$dom_test$elt_test.cljs$lang$var);
};
eph_titanic.dom_test.elt_test.cljs$lang$test = function() {
  try {
    var values__25105__auto___29583 = function() {
      var x__19570__auto__ = HTMLDivElement;
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = cljs.core.type.call(null, eph_titanic.dom.elt.call(null, "main"));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29584 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29583);
    if (cljs.core.truth_(result__25106__auto___29584)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "HTMLDivElement", "js/HTMLDivElement", -230830771, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", 
      "elt", "dom/elt", 1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29583), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "HTMLDivElement", "js/HTMLDivElement", -230830771, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", 
      "elt", "dom/elt", 1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29583);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29580) {
    var t__25143__auto___29585 = e29580;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "HTMLDivElement", "js/HTMLDivElement", -230830771, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", 
    "elt", "dom/elt", 1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29585, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29586 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.elt.call(null, "main").id;
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "main");
    var result__25106__auto___29587 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29586);
    if (cljs.core.truth_(result__25106__auto___29587)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "main", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), 
      "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29586), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "main", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), 
      "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29586);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29581) {
    var t__25143__auto___29588 = e29581;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "main", cljs.core.list(new cljs.core.Symbol(null, ".-id", ".-id", -1148204680, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), 
    "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29588, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto__ = function() {
      var x__19570__auto__ = HTMLButtonElement;
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = cljs.core.type.call(null, eph_titanic.dom.elt.call(null, "ok"));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
    if (cljs.core.truth_(result__25106__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "HTMLButtonElement", "js/HTMLButtonElement", -109877674, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), 
      cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "ok"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "HTMLButtonElement", "js/HTMLButtonElement", -109877674, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), 
      cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "ok"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25106__auto__;
  } catch (e29582) {
    var t__25143__auto__ = e29582;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol("js", "HTMLButtonElement", "js/HTMLButtonElement", -109877674, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, 
    null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "ok"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.dom_test.elt_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.dom_test.elt_test;
}, new cljs.core.Symbol("eph-titanic.dom-test", "elt-test", "eph-titanic.dom-test/elt-test", 148960577, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "elt-test", "elt-test", 2144341018, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 18, 1, 6, 6, cljs.core.List.EMPTY, 
null, cljs.core.truth_(eph_titanic.dom_test.elt_test) ? eph_titanic.dom_test.elt_test.cljs$lang$test : null]));
eph_titanic.dom_test.value_tests = function eph_titanic$dom_test$value_tests() {
  return cljs.test.test_var.call(null, eph_titanic$dom_test$value_tests.cljs$lang$var);
};
eph_titanic.dom_test.value_tests.cljs$lang$test = function() {
  try {
    var values__25105__auto___29599 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value.call(null, "val99");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "99");
    var result__25106__auto___29600 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29599);
    if (cljs.core.truth_(result__25106__auto___29600)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "99", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "val99")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__25105__auto___29599), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "99", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "val99")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29599);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29589) {
    var t__25143__auto___29601 = e29589;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "99", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "val99")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29601, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29602 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value.call(null, "val99spaces");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "   99   ");
    var result__25106__auto___29603 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29602);
    if (cljs.core.truth_(result__25106__auto___29603)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "   99   ", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "val99spaces")), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29602), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "   99   ", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "val99spaces")), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29602);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29590) {
    var t__25143__auto___29604 = e29590;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "   99   ", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "val99spaces")), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__25143__auto___29604, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29605 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value.call(null, "valABC");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "ABC");
    var result__25106__auto___29606 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29605);
    if (cljs.core.truth_(result__25106__auto___29606)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valABC")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__25105__auto___29605), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valABC")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29605);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29591) {
    var t__25143__auto___29607 = e29591;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valABC")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29607, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29608 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value.call(null, "valempty");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "");
    var result__25106__auto___29609 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29608);
    if (cljs.core.truth_(result__25106__auto___29609)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valempty")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__25105__auto___29608), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valempty")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29608);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29592) {
    var t__25143__auto___29610 = e29592;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valempty")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29610, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29611 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value.call(null, "valnil");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), null);
    var result__25106__auto___29612 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29611);
    if (cljs.core.truth_(result__25106__auto___29612)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valnil")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__25105__auto___29611), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valnil")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29611);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29593) {
    var t__25143__auto___29613 = e29593;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value", "dom/value", 1947985142, null), "valnil")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29613, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29614 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value__GT_int.call(null, "val99");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), 99);
    var result__25106__auto___29615 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29614);
    if (cljs.core.truth_(result__25106__auto___29615)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "val99")), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29614), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "val99")), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29614);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29594) {
    var t__25143__auto___29616 = e29594;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "val99")), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__25143__auto___29616, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29617 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value__GT_int.call(null, "val99spaces");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), 99);
    var result__25106__auto___29618 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29617);
    if (cljs.core.truth_(result__25106__auto___29618)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "val99spaces")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29617), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "val99spaces")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29617);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29595) {
    var t__25143__auto___29619 = e29595;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 99, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "val99spaces")), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__25143__auto___29619, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29620 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value__GT_int.call(null, "valABC");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), null);
    var result__25106__auto___29621 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29620);
    if (cljs.core.truth_(result__25106__auto___29621)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valABC")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29620), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valABC")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29620);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29596) {
    var t__25143__auto___29622 = e29596;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valABC")), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__25143__auto___29622, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29623 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value__GT_int.call(null, "valempty");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), null);
    var result__25106__auto___29624 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29623);
    if (cljs.core.truth_(result__25106__auto___29624)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valempty")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29623), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valempty")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29623);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29597) {
    var t__25143__auto___29625 = e29597;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valempty")), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__25143__auto___29625, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto__ = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.value__GT_int.call(null, "valnil");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), null);
    var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
    if (cljs.core.truth_(result__25106__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valnil")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valnil")), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25106__auto__;
  } catch (e29598) {
    var t__25143__auto__ = e29598;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol("dom", "value-\x3eint", "dom/value-\x3eint", 990392236, null), "valnil")), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.dom_test.value_tests.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.dom_test.value_tests;
}, new cljs.core.Symbol("eph-titanic.dom-test", "value-tests", "eph-titanic.dom-test/value-tests", 732245632, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "value-tests", "value-tests", 80871477, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 21, 1, 11, 11, cljs.core.List.EMPTY, 
null, cljs.core.truth_(eph_titanic.dom_test.value_tests) ? eph_titanic.dom_test.value_tests.cljs$lang$test : null]));
eph_titanic.dom_test.get_elements_tests = function eph_titanic$dom_test$get_elements_tests() {
  return cljs.test.test_var.call(null, eph_titanic$dom_test$get_elements_tests.cljs$lang$var);
};
eph_titanic.dom_test.get_elements_tests.cljs$lang$test = function() {
  var iframes = eph_titanic.dom.get_elements_by_tag.call(null, document, "iframe");
  try {
    var values__25105__auto___29630 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IFRAME"], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = cljs.core.map.call(null, function(x__19570__auto__, iframes) {
          return function(p1__29626_SHARP_) {
            return p1__29626_SHARP_.tagName;
          };
        }(x__19570__auto__, iframes), iframes);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29631 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29630);
    if (cljs.core.truth_(result__25106__auto___29631)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IFRAME"], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, 
      null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29626#", "p1__29626#", -1485729920, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29626#", "p1__29626#", -1485729920, null))), new cljs.core.Symbol(null, "iframes", "iframes", 985947064, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29630), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IFRAME"], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, 
      null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29626#", "p1__29626#", -1485729920, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29626#", "p1__29626#", -1485729920, null))), new cljs.core.Symbol(null, "iframes", "iframes", 985947064, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29630);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29628) {
    var t__25143__auto___29632 = e29628;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["IFRAME"], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, 
    null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29626#", "p1__29626#", -1485729920, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29626#", "p1__29626#", -1485729920, null))), new cljs.core.Symbol(null, "iframes", "iframes", 985947064, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__25143__auto___29632, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto__ = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["HEAD"], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = cljs.core.map.call(null, function(x__19570__auto__, iframes) {
          return function(p1__29627_SHARP_) {
            return p1__29627_SHARP_.tagName;
          };
        }(x__19570__auto__, iframes), eph_titanic.dom.get_elements_by_tag.call(null, goog.dom.getFrameContentDocument(cljs.core.first.call(null, iframes)), "head"));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
    if (cljs.core.truth_(result__25106__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["HEAD"], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, 
      null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29627#", "p1__29627#", 151451416, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29627#", "p1__29627#", 151451416, null))), cljs.core.list(new cljs.core.Symbol("dom", "get-elements-by-tag", "dom/get-elements-by-tag", 
      -164117518, null), cljs.core.list(new cljs.core.Symbol("gdom", "getFrameContentDocument", "gdom/getFrameContentDocument", -1455847876, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "iframes", "iframes", 985947064, null))), "head"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["HEAD"], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, 
      null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29627#", "p1__29627#", 151451416, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29627#", "p1__29627#", 151451416, null))), cljs.core.list(new cljs.core.Symbol("dom", "get-elements-by-tag", "dom/get-elements-by-tag", 
      -164117518, null), cljs.core.list(new cljs.core.Symbol("gdom", "getFrameContentDocument", "gdom/getFrameContentDocument", -1455847876, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "iframes", "iframes", 985947064, null))), "head"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25106__auto__;
  } catch (e29629) {
    var t__25143__auto__ = e29629;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["HEAD"], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, 
    null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29627#", "p1__29627#", 151451416, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29627#", "p1__29627#", 151451416, null))), cljs.core.list(new cljs.core.Symbol("dom", "get-elements-by-tag", "dom/get-elements-by-tag", 
    -164117518, null), cljs.core.list(new cljs.core.Symbol("gdom", "getFrameContentDocument", "gdom/getFrameContentDocument", -1455847876, null), cljs.core.list(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "iframes", "iframes", 985947064, null))), "head"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.dom_test.get_elements_tests.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.dom_test.get_elements_tests;
}, new cljs.core.Symbol("eph-titanic.dom-test", "get-elements-tests", "eph-titanic.dom-test/get-elements-tests", -145704055, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "get-elements-tests", "get-elements-tests", -499004196, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
28, 1, 23, 23, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.get_elements_tests) ? eph_titanic.dom_test.get_elements_tests.cljs$lang$test : null]));
eph_titanic.dom_test.iframe_test = function eph_titanic$dom_test$iframe_test() {
  return cljs.test.test_var.call(null, eph_titanic$dom_test$iframe_test.cljs$lang$var);
};
eph_titanic.dom_test.iframe_test.cljs$lang$test = function() {
  try {
    var values__25105__auto___29638 = function() {
      var x__19570__auto__ = [cljs.core.str(HTMLIFrameElement)].join("");
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = [cljs.core.str(cljs.core.type.call(null, eph_titanic.dom.first_iframe.call(null, eph_titanic.dom.elt.call(null, "main"))))].join("");
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29639 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29638);
    if (cljs.core.truth_(result__25106__auto___29639)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol("js", "HTMLIFrameElement", "js/HTMLIFrameElement", 959478633, null)), 
      cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main"))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29638), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol("js", "HTMLIFrameElement", "js/HTMLIFrameElement", 959478633, null)), 
      cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main"))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29638);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29633) {
    var t__25143__auto___29640 = e29633;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol("js", "HTMLIFrameElement", "js/HTMLIFrameElement", 959478633, null)), 
    cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main"))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29640, new cljs.core.Keyword(null, "message", "message", -406056002), null], 
    null));
  }
  try {
    var klass__25125__auto___29641 = HTMLIFrameElement;
    var object__25126__auto___29642 = eph_titanic.dom.first_iframe.call(null, eph_titanic.dom.elt.call(null, "main"));
    var result__25127__auto___29643 = object__25126__auto___29642 instanceof klass__25125__auto___29641;
    if (result__25127__auto___29643) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol("js", "HTMLIFrameElement", "js/HTMLIFrameElement", 959478633, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 
      1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.type.call(null, object__25126__auto___29642), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol("js", "HTMLIFrameElement", "js/HTMLIFrameElement", 959478633, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 
      1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.type.call(null, object__25126__auto___29642), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29634) {
    var t__25143__auto___29644 = e29634;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol("js", "HTMLIFrameElement", "js/HTMLIFrameElement", 959478633, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 
    1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29644, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29645 = function() {
      var x__19570__auto__ = [cljs.core.str(cljs.core.type.call(null, document))].join("");
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = [cljs.core.str(cljs.core.type.call(null, eph_titanic.dom.iframe_doc.call(null, eph_titanic.dom.first_iframe.call(null, eph_titanic.dom.elt.call(null, "main")))))].join("");
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29646 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29645);
    if (cljs.core.truth_(result__25106__auto___29646)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol("js", 
      "document", "js/document", 311343521, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29645), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol("js", 
      "document", "js/document", 311343521, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29645);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29635) {
    var t__25143__auto___29647 = e29635;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol("js", 
    "document", "js/document", 311343521, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__25143__auto___29647, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29648 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = [cljs.core.str(cljs.core.type.call(null, eph_titanic.dom.iframe_doc.call(null, eph_titanic.dom.first_iframe.call(null, eph_titanic.dom.elt.call(null, "main")))))].join("");
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "[object HTMLDocumentConstructor]");
    var result__25106__auto___29649 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29648);
    if (cljs.core.truth_(result__25106__auto___29649)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "[object HTMLDocumentConstructor]", cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", 
      -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29648), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "[object HTMLDocumentConstructor]", cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", 
      -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29648);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29636) {
    var t__25143__auto___29650 = e29636;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "[object HTMLDocumentConstructor]", cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", 
    -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29650, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto__ = function() {
      var x__19570__auto__ = [cljs.core.str(cljs.core.type.call(null, window))].join("");
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = [cljs.core.str(cljs.core.type.call(null, eph_titanic.dom.iframe_window.call(null, eph_titanic.dom.first_iframe.call(null, eph_titanic.dom.elt.call(null, "main")))))].join("");
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
    if (cljs.core.truth_(result__25106__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol("js", 
      "window", "js/window", -1929916804, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-window", "dom/iframe-window", -1943433542, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol("js", 
      "window", "js/window", -1929916804, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-window", "dom/iframe-window", -1943433542, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25106__auto__;
  } catch (e29637) {
    var t__25143__auto__ = e29637;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol("js", 
    "window", "js/window", -1929916804, null))), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.list(new cljs.core.Symbol(null, "type", "type", -1480165421, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-window", "dom/iframe-window", -1943433542, null), cljs.core.list(new cljs.core.Symbol("dom", "first-iframe", "dom/first-iframe", 1615962455, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 1496026767, null), "main")))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.dom_test.iframe_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.dom_test.iframe_test;
}, new cljs.core.Symbol("eph-titanic.dom-test", "iframe-test", "eph-titanic.dom-test/iframe-test", -1311389432, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "iframe-test", "iframe-test", -1530584905, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 21, 1, 31, 31, cljs.core.List.EMPTY, 
null, cljs.core.truth_(eph_titanic.dom_test.iframe_test) ? eph_titanic.dom_test.iframe_test.cljs$lang$test : null]));
eph_titanic.dom_test.set_visible_test = function eph_titanic$dom_test$set_visible_test() {
  return cljs.test.test_var.call(null, eph_titanic$dom_test$set_visible_test.cljs$lang$var);
};
eph_titanic.dom_test.set_visible_test.cljs$lang$test = function() {
  try {
    var values__25105__auto___29655 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.set_visible_BANG_.call(null, eph_titanic.dom.elt.call(null, "val99"));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "visible");
    var result__25106__auto___29656 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29655);
    if (cljs.core.truth_(result__25106__auto___29656)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "visible", cljs.core.list(new cljs.core.Symbol("dom", "set-visible!", "dom/set-visible!", 597722009, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "val99"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29655), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "visible", cljs.core.list(new cljs.core.Symbol("dom", "set-visible!", "dom/set-visible!", 597722009, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "val99"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29655);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29651) {
    var t__25143__auto___29657 = e29651;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "visible", cljs.core.list(new cljs.core.Symbol("dom", "set-visible!", "dom/set-visible!", 597722009, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
    1496026767, null), "val99"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29657, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29658 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.set_hidden_BANG_.call(null, eph_titanic.dom.elt.call(null, "val99"));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "hidden");
    var result__25106__auto___29659 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29658);
    if (cljs.core.truth_(result__25106__auto___29659)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "hidden", cljs.core.list(new cljs.core.Symbol("dom", "set-hidden!", "dom/set-hidden!", 934681003, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "val99"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29658), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "hidden", cljs.core.list(new cljs.core.Symbol("dom", "set-hidden!", "dom/set-hidden!", 934681003, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "val99"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29658);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29652) {
    var t__25143__auto___29660 = e29652;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "hidden", cljs.core.list(new cljs.core.Symbol("dom", "set-hidden!", "dom/set-hidden!", 934681003, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
    1496026767, null), "val99"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29660, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29661 = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.set_visible_BANG_.call(null, eph_titanic.dom.elt.call(null, "main"));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "visible");
    var result__25106__auto___29662 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29661);
    if (cljs.core.truth_(result__25106__auto___29662)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "visible", cljs.core.list(new cljs.core.Symbol("dom", "set-visible!", "dom/set-visible!", 597722009, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29661), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "visible", cljs.core.list(new cljs.core.Symbol("dom", "set-visible!", "dom/set-visible!", 597722009, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29661);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29653) {
    var t__25143__auto___29663 = e29653;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "visible", cljs.core.list(new cljs.core.Symbol("dom", "set-visible!", "dom/set-visible!", 597722009, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
    1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29663, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto__ = cljs.core._conj.call(null, function() {
      var x__19570__auto__ = eph_titanic.dom.set_hidden_BANG_.call(null, eph_titanic.dom.elt.call(null, "main"));
      return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
    }(), "hidden");
    var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
    if (cljs.core.truth_(result__25106__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "hidden", cljs.core.list(new cljs.core.Symbol("dom", "set-hidden!", "dom/set-hidden!", 934681003, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "hidden", cljs.core.list(new cljs.core.Symbol("dom", "set-hidden!", "dom/set-hidden!", 934681003, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
      1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25106__auto__;
  } catch (e29654) {
    var t__25143__auto__ = e29654;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "hidden", cljs.core.list(new cljs.core.Symbol("dom", "set-hidden!", "dom/set-hidden!", 934681003, null), cljs.core.list(new cljs.core.Symbol("dom", "elt", "dom/elt", 
    1496026767, null), "main"))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.dom_test.set_visible_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.dom_test.set_visible_test;
}, new cljs.core.Symbol("eph-titanic.dom-test", "set-visible-test", "eph-titanic.dom-test/set-visible-test", 205370114, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "set-visible-test", "set-visible-test", 1053639863, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 26, 
1, 50, 50, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.set_visible_test) ? eph_titanic.dom_test.set_visible_test.cljs$lang$test : null]));
eph_titanic.dom_test.styles_test = function eph_titanic$dom_test$styles_test() {
  return cljs.test.test_var.call(null, eph_titanic$dom_test$styles_test.cljs$lang$var);
};
eph_titanic.dom_test.styles_test.cljs$lang$test = function() {
  var ifr = cljs.core.constantly.call(null, eph_titanic.dom.first_iframe.call(null, eph_titanic.dom.elt.call(null, "main")));
  try {
    var values__25105__auto___29676 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "table"], null)], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = cljs.core.map.call(null, cljs.core.juxt.call(null, function(x__19570__auto__, ifr) {
          return function(p1__29664_SHARP_) {
            return p1__29664_SHARP_.tagName;
          };
        }(x__19570__auto__, ifr), function(x__19570__auto__, ifr) {
          return function(p1__29665_SHARP_) {
            return cljs.core.subs.call(null, p1__29665_SHARP_.innerHTML, 0, 5);
          };
        }(x__19570__auto__, ifr)), eph_titanic.dom.get_styles.call(null, document.head));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29677 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29676);
    if (cljs.core.truth_(result__25106__auto___29677)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29664#", "p1__29664#", -1488294904, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", 
      -410684108, null), new cljs.core.Symbol(null, "p1__29664#", "p1__29664#", -1488294904, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29665#", "p1__29665#", 1872764990, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, 
      null), new cljs.core.Symbol(null, "p1__29665#", "p1__29665#", 1872764990, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29676), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29664#", "p1__29664#", -1488294904, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", 
      -410684108, null), new cljs.core.Symbol(null, "p1__29664#", "p1__29664#", -1488294904, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29665#", "p1__29665#", 1872764990, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, 
      null), new cljs.core.Symbol(null, "p1__29665#", "p1__29665#", 1872764990, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29676);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29672) {
    var t__25143__auto___29678 = e29672;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["STYLE", "table"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29664#", "p1__29664#", -1488294904, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, 
    null), new cljs.core.Symbol(null, "p1__29664#", "p1__29664#", -1488294904, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29665#", "p1__29665#", 1872764990, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, null), new cljs.core.Symbol(null, 
    "p1__29665#", "p1__29665#", 1872764990, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29678, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29679 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "table"], null)], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = cljs.core.map.call(null, cljs.core.juxt.call(null, function(x__19570__auto__, ifr) {
          return function(p1__29666_SHARP_) {
            return p1__29666_SHARP_.tagName;
          };
        }(x__19570__auto__, ifr), function(x__19570__auto__, ifr) {
          return function(p1__29667_SHARP_) {
            return cljs.core.subs.call(null, p1__29667_SHARP_.innerHTML, 0, 5);
          };
        }(x__19570__auto__, ifr)), eph_titanic.dom.get_styles.call(null, eph_titanic.dom.iframe_doc.call(null, ifr.call(null)).head));
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29680 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29679);
    if (cljs.core.truth_(result__25106__auto___29680)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29666#", "p1__29666#", -1710821018, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", 
      -410684108, null), new cljs.core.Symbol(null, "p1__29666#", "p1__29666#", -1710821018, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29667#", "p1__29667#", 1466592927, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, 
      null), new cljs.core.Symbol(null, "p1__29667#", "p1__29667#", 1466592927, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null))))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29679), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29666#", "p1__29666#", -1710821018, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", 
      -410684108, null), new cljs.core.Symbol(null, "p1__29666#", "p1__29666#", -1710821018, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29667#", "p1__29667#", 1466592927, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, 
      null), new cljs.core.Symbol(null, "p1__29667#", "p1__29667#", 1466592927, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null))))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29679);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29673) {
    var t__25143__auto___29681 = e29673;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["STYLE", "table"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29666#", "p1__29666#", -1710821018, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, 
    null), new cljs.core.Symbol(null, "p1__29666#", "p1__29666#", -1710821018, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29667#", "p1__29667#", 1466592927, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, null), new cljs.core.Symbol(null, 
    "p1__29667#", "p1__29667#", 1466592927, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null))))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29681, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto___29682 = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s1"], null)], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = function() {
          eph_titanic.dom.install_style_BANG_.call(null, "s1", document.head);
          return cljs.core.map.call(null, cljs.core.juxt.call(null, function(x__19570__auto__, ifr) {
            return function(p1__29668_SHARP_) {
              return p1__29668_SHARP_.tagName;
            };
          }(x__19570__auto__, ifr), function(x__19570__auto__, ifr) {
            return function(p1__29669_SHARP_) {
              return cljs.core.subs.call(null, p1__29669_SHARP_.innerHTML, 0, 5);
            };
          }(x__19570__auto__, ifr)), eph_titanic.dom.get_styles.call(null, document.head));
        }();
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto___29683 = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto___29682);
    if (cljs.core.truth_(result__25106__auto___29683)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s1"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("dom", "install-style!", "dom/install-style!", 1126152014, null), "s1", cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))), cljs.core.list(new cljs.core.Symbol(null, 
      "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29668#", "p1__29668#", -1220584517, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29668#", "p1__29668#", -1220584517, 
      null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29669#", "p1__29669#", 1512823713, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, null), new cljs.core.Symbol(null, "p1__29669#", "p1__29669#", 1512823713, null)), 0, 
      5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto___29682), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s1"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("dom", "install-style!", "dom/install-style!", 1126152014, null), "s1", cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))), cljs.core.list(new cljs.core.Symbol(null, 
      "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29668#", "p1__29668#", -1220584517, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29668#", "p1__29668#", -1220584517, 
      null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29669#", "p1__29669#", 1512823713, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, null), new cljs.core.Symbol(null, "p1__29669#", "p1__29669#", 1512823713, null)), 0, 
      5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto___29682);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e29674) {
    var t__25143__auto___29684 = e29674;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s1"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("dom", "install-style!", "dom/install-style!", 1126152014, null), "s1", cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null))), cljs.core.list(new cljs.core.Symbol(null, 
    "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29668#", "p1__29668#", -1220584517, null)], null), cljs.core.list(new cljs.core.Symbol(null, ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29668#", "p1__29668#", -1220584517, 
    null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29669#", "p1__29669#", 1512823713, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", -2010735062, null), new cljs.core.Symbol(null, "p1__29669#", "p1__29669#", 1512823713, null)), 0, 5))), 
    cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), new cljs.core.Symbol("js", "document", "js/document", 311343521, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__25143__auto___29684, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__25105__auto__ = function() {
      var x__19570__auto__ = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s2"], null)], null);
      return cljs.core._conj.call(null, function() {
        var x__19570__auto____$1 = function() {
          eph_titanic.dom.install_style_BANG_.call(null, "s2", eph_titanic.dom.iframe_doc.call(null, ifr.call(null)).head);
          return cljs.core.map.call(null, cljs.core.juxt.call(null, function(x__19570__auto__, ifr) {
            return function(p1__29670_SHARP_) {
              return p1__29670_SHARP_.tagName;
            };
          }(x__19570__auto__, ifr), function(x__19570__auto__, ifr) {
            return function(p1__29671_SHARP_) {
              return cljs.core.subs.call(null, p1__29671_SHARP_.innerHTML, 0, 5);
            };
          }(x__19570__auto__, ifr)), eph_titanic.dom.get_styles.call(null, eph_titanic.dom.iframe_doc.call(null, ifr.call(null)).head));
        }();
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto____$1);
      }(), x__19570__auto__);
    }();
    var result__25106__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__25105__auto__);
    if (cljs.core.truth_(result__25106__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s2"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("dom", "install-style!", "dom/install-style!", 1126152014, null), "s2", cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), 
      cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null))))), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29670#", "p1__29670#", 460671114, null)], null), cljs.core.list(new cljs.core.Symbol(null, 
      ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29670#", "p1__29670#", 460671114, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29671#", "p1__29671#", 692066905, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", 
      -2010735062, null), new cljs.core.Symbol(null, "p1__29671#", "p1__29671#", 692066905, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)))))))), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__25105__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s2"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("dom", "install-style!", "dom/install-style!", 1126152014, null), "s2", cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), 
      cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null))))), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29670#", "p1__29670#", 460671114, null)], null), cljs.core.list(new cljs.core.Symbol(null, 
      ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29670#", "p1__29670#", 460671114, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29671#", "p1__29671#", 692066905, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", 
      -2010735062, null), new cljs.core.Symbol(null, "p1__29671#", "p1__29671#", 692066905, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)))))))), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, function() {
        var x__19570__auto__ = cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__25105__auto__);
        return cljs.core._conj.call(null, cljs.core.List.EMPTY, x__19570__auto__);
      }(), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__25106__auto__;
  } catch (e29675) {
    var t__25143__auto__ = e29675;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
    ["STYLE", "table"], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["STYLE", "s2"], null)], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol("dom", "install-style!", "dom/install-style!", 1126152014, null), "s2", cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), 
    cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null))))), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "juxt", "juxt", 671085604, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29670#", "p1__29670#", 460671114, null)], null), cljs.core.list(new cljs.core.Symbol(null, 
    ".-tagName", ".-tagName", -410684108, null), new cljs.core.Symbol(null, "p1__29670#", "p1__29670#", 460671114, null))), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "p1__29671#", "p1__29671#", 692066905, null)], null), cljs.core.list(new cljs.core.Symbol(null, "subs", "subs", 1453849536, null), cljs.core.list(new cljs.core.Symbol(null, ".-innerHTML", ".-innerHTML", 
    -2010735062, null), new cljs.core.Symbol(null, "p1__29671#", "p1__29671#", 692066905, null)), 0, 5))), cljs.core.list(new cljs.core.Symbol("dom", "get-styles", "dom/get-styles", 680825416, null), cljs.core.list(new cljs.core.Symbol(null, ".-head", ".-head", 1606694395, null), cljs.core.list(new cljs.core.Symbol("dom", "iframe-doc", "dom/iframe-doc", 2139310237, null), cljs.core.list(new cljs.core.Symbol(null, "ifr", "ifr", -234755528, null)))))))), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__25143__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
eph_titanic.dom_test.styles_test.cljs$lang$var = new cljs.core.Var(function() {
  return eph_titanic.dom_test.styles_test;
}, new cljs.core.Symbol("eph-titanic.dom-test", "styles-test", "eph-titanic.dom-test/styles-test", 1895173711, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "styles-test", "styles-test", 1157961714, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 21, 1, 56, 56, cljs.core.List.EMPTY, 
null, cljs.core.truth_(eph_titanic.dom_test.styles_test) ? eph_titanic.dom_test.styles_test.cljs$lang$test : null]));
eph_titanic.dom_test.run = function eph_titanic$dom_test$run() {
  return cljs.test.run_block.call(null, function() {
    var env29687 = cljs.test.empty_env.call(null);
    var summary29688 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env29687, summary29688) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env29687);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25209__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25209__auto__, env29687, summary29688) {
            return function() {
              if (env__25209__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25209__auto__, env29687, summary29688)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.dom_test.elt_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "elt-test", "eph-titanic.dom-test/elt-test", 148960577, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "elt-test", "elt-test", 2144341018, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 18, 1, 6, 
          6, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.elt_test) ? eph_titanic.dom_test.elt_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.value_tests;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "value-tests", "eph-titanic.dom-test/value-tests", 732245632, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "value-tests", "value-tests", 80871477, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 21, 
          1, 11, 11, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.value_tests) ? eph_titanic.dom_test.value_tests.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.get_elements_tests;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "get-elements-tests", "eph-titanic.dom-test/get-elements-tests", -145704055, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "get-elements-tests", "get-elements-tests", -499004196, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          28, 1, 23, 23, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.get_elements_tests) ? eph_titanic.dom_test.get_elements_tests.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.iframe_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "iframe-test", "eph-titanic.dom-test/iframe-test", -1311389432, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
          "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "iframe-test", "iframe-test", -1530584905, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          21, 1, 31, 31, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.iframe_test) ? eph_titanic.dom_test.iframe_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.set_visible_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "set-visible-test", "eph-titanic.dom-test/set-visible-test", 205370114, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "set-visible-test", "set-visible-test", 1053639863, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          26, 1, 50, 50, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.set_visible_test) ? eph_titanic.dom_test.set_visible_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.styles_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "styles-test", "eph-titanic.dom-test/styles-test", 1895173711, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
          "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "styles-test", "styles-test", 1157961714, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          21, 1, 56, 56, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.styles_test) ? eph_titanic.dom_test.styles_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25209__auto__, env29687, summary29688) {
            return function() {
              if (env__25209__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25209__auto__, env29687, summary29688)], null));
        }());
      };
    }(env29687, summary29688), function(env29687, summary29688) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env29687, summary29688)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env29687, summary29688) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary29688, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary29688), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env29687, summary29688)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env29687, summary29688) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env29687);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary29688));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary29688), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env29687, summary29688)], null));
  }());
};
goog.exportSymbol("eph_titanic.dom_test.run", eph_titanic.dom_test.run);
goog.provide("eph_titanic.test_runner");
goog.require("cljs.core");
goog.require("eph_titanic.html_test");
goog.require("eph_titanic.dom_test");
goog.require("eph_titanic.ui_test");
goog.require("eph_titanic.event_test");
goog.require("eph_titanic.state_test");
goog.require("cljs.test");
cljs.core.enable_console_print_BANG_.call(null);
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  if (cljs.core.truth_(cljs.test.successful_QMARK_.call(null, m))) {
    return cljs.core.println.call(null, "Success!");
  } else {
    return cljs.core.println.call(null, "FAIL");
  }
});
eph_titanic.test_runner.run = function eph_titanic$test_runner$run() {
  return cljs.test.run_block.call(null, function() {
    var env25570 = cljs.test.empty_env.call(null);
    var summary25571 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25570);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25570, summary25571)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.state_test.eval_tag_test;
          }, new cljs.core.Symbol("eph-titanic.state-test", "eval-tag-test", "eph-titanic.state-test/eval-tag-test", 1733128842, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Symbol(null, "eval-tag-test", "eval-tag-test", 863125824, null), "/Users/mike/work/eph-titanic/test/eph_titanic/state_test.cljs", 
          23, 1, 7, 7, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.state_test.eval_tag_test) ? eph_titanic.state_test.eval_tag_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25570, summary25571)], null));
        }());
      };
    }(env25570, summary25571), function(env25570, summary25571) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.state-test", "eph-titanic.state-test", 2071224332, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25570, summary25571)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25571, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25571), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25570, summary25571)], null)), cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25570);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25570, summary25571)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.html_test.table_test;
          }, new cljs.core.Symbol("eph-titanic.html-test", "table-test", "eph-titanic.html-test/table-test", -50573852, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Symbol(null, "table-test", "table-test", 1641484768, null), "/Users/mike/work/eph-titanic/test/eph_titanic/html_test.cljs", 20, 
          1, 5, 5, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.html_test.table_test) ? eph_titanic.html_test.table_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25570, summary25571)], null));
        }());
      };
    }(env25570, summary25571), function(env25570, summary25571) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.html-test", "eph-titanic.html-test", 1030276658, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25570, summary25571)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25571, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25571), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25570, summary25571)], null)), cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25570);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25570, summary25571)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.ui_test.button_rows_cols_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "button-rows-cols-test", "eph-titanic.ui-test/button-rows-cols-test", 1198988012, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "button-rows-cols-test", "button-rows-cols-test", 1570981305, null), "test/eph_titanic/ui_test.cljs", 
          31, 1, 8, 8, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.button_rows_cols_test) ? eph_titanic.ui_test.button_rows_cols_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.ui_test.coords_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "coords-test", "eph-titanic.ui-test/coords-test", 1759521205, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "coords-test", "coords-test", 1637189312, null), "test/eph_titanic/ui_test.cljs", 21, 1, 26, 26, cljs.core.List.EMPTY, 
          null, cljs.core.truth_(eph_titanic.ui_test.coords_test) ? eph_titanic.ui_test.coords_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.ui_test.log_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "log-test", "eph-titanic.ui-test/log-test", -2055801875, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "log-test", "log-test", -1632810184, null), "test/eph_titanic/ui_test.cljs", 18, 1, 30, 30, cljs.core.List.EMPTY, null, 
          cljs.core.truth_(eph_titanic.ui_test.log_test) ? eph_titanic.ui_test.log_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.ui_test.setup_iframe_style_test;
          }, new cljs.core.Symbol("eph-titanic.ui-test", "setup-iframe-style-test", "eph-titanic.ui-test/setup-iframe-style-test", 1331557098, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Symbol(null, "setup-iframe-style-test", "setup-iframe-style-test", 1946266391, null), "test/eph_titanic/ui_test.cljs", 
          33, 1, 34, 34, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.ui_test.setup_iframe_style_test) ? eph_titanic.ui_test.setup_iframe_style_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25570, summary25571)], null));
        }());
      };
    }(env25570, summary25571), function(env25570, summary25571) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.ui-test", "eph-titanic.ui-test", -865586859, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25570, summary25571)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25571, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25571), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25570, summary25571)], null)), cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25570);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.event-test", "eph-titanic.event-test", -1233611879, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25570, summary25571)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25570, summary25571)], null));
        }());
      };
    }(env25570, summary25571), function(env25570, summary25571) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.event-test", "eph-titanic.event-test", -1233611879, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25570, summary25571)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25571, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25571), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25570, summary25571)], null)), cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25570);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__25346__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__25346__auto__, env25570, summary25571)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
            return eph_titanic.dom_test.elt_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "elt-test", "eph-titanic.dom-test/elt-test", 148960577, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "elt-test", "elt-test", 2144341018, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 18, 1, 6, 
          6, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.elt_test) ? eph_titanic.dom_test.elt_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.value_tests;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "value-tests", "eph-titanic.dom-test/value-tests", 732245632, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
          212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "value-tests", "value-tests", 80871477, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 21, 
          1, 11, 11, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.value_tests) ? eph_titanic.dom_test.value_tests.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.get_elements_tests;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "get-elements-tests", "eph-titanic.dom-test/get-elements-tests", -145704055, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "get-elements-tests", "get-elements-tests", -499004196, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          28, 1, 23, 23, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.get_elements_tests) ? eph_titanic.dom_test.get_elements_tests.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.iframe_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "iframe-test", "eph-titanic.dom-test/iframe-test", -1311389432, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
          "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "iframe-test", "iframe-test", -1530584905, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          21, 1, 31, 31, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.iframe_test) ? eph_titanic.dom_test.iframe_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.set_visible_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "set-visible-test", "eph-titanic.dom-test/set-visible-test", 205370114, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
          "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "set-visible-test", "set-visible-test", 1053639863, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          26, 1, 50, 50, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.set_visible_test) ? eph_titanic.dom_test.set_visible_test.cljs$lang$test : null])), new cljs.core.Var(function() {
            return eph_titanic.dom_test.styles_test;
          }, new cljs.core.Symbol("eph-titanic.dom-test", "styles-test", "eph-titanic.dom-test/styles-test", 1895173711, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
          "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Symbol(null, "styles-test", "styles-test", 1157961714, null), "/Users/mike/work/eph-titanic/test/eph_titanic/dom_test.cljs", 
          21, 1, 56, 56, cljs.core.List.EMPTY, null, cljs.core.truth_(eph_titanic.dom_test.styles_test) ? eph_titanic.dom_test.styles_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__25346__auto__, env25570, summary25571) {
            return function() {
              if (env__25346__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__25346__auto__, env25570, summary25571)], null));
        }());
      };
    }(env25570, summary25571), function(env25570, summary25571) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "eph-titanic.dom-test", "eph-titanic.dom-test", -1213981380, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env25570, summary25571)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary25571, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary25571), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env25570, summary25571)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env25570, summary25571) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env25570);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary25571));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary25571), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env25570, summary25571)], null));
  }());
};
goog.exportSymbol("eph_titanic.test_runner.run", eph_titanic.test_runner.run);
goog.provide("eph_titanic.component");
goog.require("cljs.core");
eph_titanic.component.IMainIframeControl = function() {
};
eph_titanic.component.init_BANG_ = function eph_titanic$component$init_BANG_(_) {
  if (!(_ == null) && !(_.eph_titanic$component$IMainIframeControl$init_BANG_$arity$1 == null)) {
    return _.eph_titanic$component$IMainIframeControl$init_BANG_$arity$1(_);
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = eph_titanic.component.init_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _);
    } else {
      var m__19400__auto____$1 = eph_titanic.component.init_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "IMainIframeControl.init!", _);
      }
    }
  }
};
eph_titanic.component.show_BANG_ = function eph_titanic$component$show_BANG_(_) {
  if (!(_ == null) && !(_.eph_titanic$component$IMainIframeControl$show_BANG_$arity$1 == null)) {
    return _.eph_titanic$component$IMainIframeControl$show_BANG_$arity$1(_);
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = eph_titanic.component.show_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _);
    } else {
      var m__19400__auto____$1 = eph_titanic.component.show_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "IMainIframeControl.show!", _);
      }
    }
  }
};
eph_titanic.component.hide_BANG_ = function eph_titanic$component$hide_BANG_(_) {
  if (!(_ == null) && !(_.eph_titanic$component$IMainIframeControl$hide_BANG_$arity$1 == null)) {
    return _.eph_titanic$component$IMainIframeControl$hide_BANG_$arity$1(_);
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = eph_titanic.component.hide_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _);
    } else {
      var m__19400__auto____$1 = eph_titanic.component.hide_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "IMainIframeControl.hide!", _);
      }
    }
  }
};
eph_titanic.component.create_table_BANG_ = function eph_titanic$component$create_table_BANG_(_, p__20868) {
  var vec__20870 = p__20868;
  var rows = cljs.core.nth.call(null, vec__20870, 0, null);
  var cols = cljs.core.nth.call(null, vec__20870, 1, null);
  if (!(_ == null) && !(_.eph_titanic$component$IMainIframeControl$create_table_BANG_$arity$2 == null)) {
    return _.eph_titanic$component$IMainIframeControl$create_table_BANG_$arity$2(_, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rows, cols], null));
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = eph_titanic.component.create_table_BANG_[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rows, cols], null));
    } else {
      var m__19400__auto____$1 = eph_titanic.component.create_table_BANG_["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rows, cols], null));
      } else {
        throw cljs.core.missing_protocol.call(null, "IMainIframeControl.create-table!", _);
      }
    }
  }
};
eph_titanic.component.ITableControl = function() {
};
eph_titanic.component.table_size = function eph_titanic$component$table_size(_) {
  if (!(_ == null) && !(_.eph_titanic$component$ITableControl$table_size$arity$1 == null)) {
    return _.eph_titanic$component$ITableControl$table_size$arity$1(_);
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = eph_titanic.component.table_size[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _);
    } else {
      var m__19400__auto____$1 = eph_titanic.component.table_size["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITableControl.table-size", _);
      }
    }
  }
};
eph_titanic.component.invalid_size = function eph_titanic$component$invalid_size(_) {
  if (!(_ == null) && !(_.eph_titanic$component$ITableControl$invalid_size$arity$1 == null)) {
    return _.eph_titanic$component$ITableControl$invalid_size$arity$1(_);
  } else {
    var x__19399__auto__ = _ == null ? null : _;
    var m__19400__auto__ = eph_titanic.component.invalid_size[goog.typeOf(x__19399__auto__)];
    if (!(m__19400__auto__ == null)) {
      return m__19400__auto__.call(null, _);
    } else {
      var m__19400__auto____$1 = eph_titanic.component.invalid_size["_"];
      if (!(m__19400__auto____$1 == null)) {
        return m__19400__auto____$1.call(null, _);
      } else {
        throw cljs.core.missing_protocol.call(null, "ITableControl.invalid-size", _);
      }
    }
  }
};
goog.provide("eph_titanic.core");
goog.require("cljs.core");
goog.require("eph_titanic.html");
goog.require("cljs.core.async");
goog.require("eph_titanic.state");
goog.require("eph_titanic.event");
goog.require("eph_titanic.ui");
cljs.core.enable_console_print_BANG_.call(null);
eph_titanic.core.delta = 10;
if (typeof eph_titanic.core.app_state !== "undefined") {
} else {
  eph_titanic.core.app_state = cljs.core.atom.call(null, eph_titanic.state.init_state);
}
eph_titanic.core.setup = function eph_titanic$core$setup() {
  var event_chan = cljs.core.async.chan.call(null);
  cljs.core.println.call(null, "set up...");
  eph_titanic.ui.setup_iframe_style.call(null);
  cljs.core.add_watch.call(null, eph_titanic.core.app_state, new cljs.core.Keyword(null, "main-watcher", "main-watcher", -1677218404), cljs.core.partial.call(null, eph_titanic.state.state_change_BANG_, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ui-main", "ui-main", 226371438), eph_titanic.ui.main], null)));
  eph_titanic.state.start_event_loop.call(null, eph_titanic.core.app_state, event_chan);
  return eph_titanic.event.setup_listeners.call(null, event_chan, eph_titanic.ui.alert, eph_titanic.ui.ok_button, eph_titanic.ui.rows, eph_titanic.ui.cols);
};
eph_titanic.core.teardown = function eph_titanic$core$teardown() {
  cljs.core.println.call(null, "tear down...");
  return eph_titanic.event.remove_listeners.call(null, eph_titanic.ui.ok_button);
};
eph_titanic.core.on_js_reload = function eph_titanic$core$on_js_reload() {
  eph_titanic.core.teardown.call(null);
  return eph_titanic.core.setup.call(null);
};
eph_titanic.core.setup.call(null);
